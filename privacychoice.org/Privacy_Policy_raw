<!DOCTYPE html>
<html>
    <head>
        <title>PrivacyFix - Lock down your privacy</title>
        <link href="/css/reset.css" rel="stylesheet" type="text/css" />
        <script src="/js/jquery-1.8.2.min.js" type="text/javascript"></script>    

        <script src="/js/privacycheck.js"></script>

        <script src="/js/jquery.cookie.js"></script>
        <script src="/js/md5.js"></script>
        <script src="/js/dashboard_content_analytics.js"></script>
        <script src="/js/function_bind_shim.js"></script>

        <link href="/css/simple-slider.css" rel="stylesheet" type="text/css" />
        <script type="text/javascript" src="/js/simple-slider.min.js"></script>

        <script type="text/javascript" src="/js/facebook_api.js"></script>
        <script type="text/javascript" src="/start/facebook_valuation/fb_valuation.js"></script>
        <script type="text/javascript" src="/start/facebook_valuation/fb_countries.js"></script>
        <script type="text/javascript" src="/start/twitter_valuation/tw_valuation.js"></script>
        
        <link rel="chrome-webstore-item" href="//chrome.google.com/webstore/detail/pmejhjjecaldkllonlokhkglbdbkdcni" />    

        <!-- bxSlider  -->
        <script src="/js/jquery.bxslider.min.js"></script>
        <link href="/css/jquery.bxslider.css" rel="stylesheet" />

        <link href="/css/animate.min.css" rel="stylesheet" />

        <meta property="og:locale" content="en_US" />
        <meta property="og:locale:alternate" content="cs_CZ" />
        <meta property="og:locale:alternate" content="de_DE" />
        <meta property="og:locale:alternate" content="es_ES" />
        <meta property="og:locale:alternate" content="fr_FR" />
        <meta property="og:locale:alternate" content="it_IT" />
        <meta property="og:locale:alternate" content="pt_PT" />
        <meta property="og:locale:alternate" content="ru_RU" />
        <meta property="og:image" content="http://www.privacyfix.com/images/Start/greenlock.jpg?r=2015831" />
        <meta property="og:url" content="http://www.privacyfix.com/start" />
        <meta property="og:title" content="I just took control of my Facebook privacy with AVG PrivacyFix." />
        <meta property="og:description" content="AVG PrivacyFix puts YOU in control of your Facebook privacy. Check yours now! https://www.privacyfix.com/start" />
        <link rel="image_src" type="image/jpeg" href="http://www.privacyfix.com/images/Start/greenlock.jpg?r=2015831" />

        <meta http-equiv="X-UA-Compatible" content="IE=EDGE" /><!-- lol IE -->

            <meta name="twitter:card" content="app"/>
            <meta name="twitter:app:id:iphone" content="id688795921"/>
            <meta name="twitter:app:id:ipad" content="688795921"/>
            <meta name="twitter:app:id:googleplay" content="com.avg.privacyfix"/>
            <meta name="twitter:app:country" content="us"/>

        <link href='//fonts.googleapis.com/css?family=Roboto:400,300,100' rel='stylesheet' type='text/css'>

        <script src="//crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/md5.js"></script>
        <script type="text/javascript">
            // IE fixes
            if (!window.console) window.console = {};
            if (!window.console.log) window.console.log = function () { };
        </script>
    
<style>
        
    .bubble 
    {
        display:none;
	    position: absolute;
        padding: 5px;
        margin: 0px;
        border: 0px solid rgba(255,255,255,.9);
        border: 0px solid white\9;
        background: rgba(255,255,255,.9);
        background: white\9;
        color: black;
        left: -107px;  
        font-size: 20px;
        z-index: 10000;
    }

    .bubble .close 
    {
        -webkit-border-radius: 100px;
        position: absolute;
        top: 5px;
        right: 5px;
        padding: 2px 5px 4px 5px;
        border: solid white 1px;
        line-height: 10px;
        font-size: 17px;   
        cursor: pointer;      
    }

</style>


<script>

    var timer1;

    function bindBubbles() {

        
        $('.bubble:not(.bubbleShown)').parent().unbind('mouseenter', fnBubbleHover);
        $('.bubble:not(.bubbleShown)').parent().bind('mouseenter', fnBubbleHover);
        
        $('.bubble:not(.bubbleShown)').parent().unbind('mouseleave', fnBubbleUnHover);
        $('.bubble:not(.bubbleShown)').parent().bind('mouseleave', fnBubbleUnHover);

        $('.bubble.bubbleByClick:not(.bubbleShown)').parent().unbind('mouseenter', fnBubbleHover);
        $('.bubble.bubbleByClick:not(.bubbleShown)').parent().unbind('click', fnStopProp);
        $('.bubble.bubbleByClick:not(.bubbleShown)').parent().bind('click', fnStopProp);
        $('.bubble.bubbleByClick:not(.bubbleShown)').parent().unbind('click', fnBubbleHover);
        $('.bubble.bubbleByClick:not(.bubbleShown)').parent().bind('click', fnBubbleHover);

        $('body').unbind('click', fnClearBubble);
        $('body').bind('click', fnClearBubble);
        
    }
    
    var fnStopProp = function (event) {
        event.stopPropagation();
    }

    var fnClearBubble = function (e) {    

        if ($(this).hasClass('bubbleByClick')) {

        } else {
            var par = $(e.target).closest('.bubbleShown');
            if ((par.length == 0) | ($(e.target).hasClass('close'))) { //click not within displayed bubble OR its the close button within bubble
                $('body > .bubbleShown').remove();
                $('body > .tri').remove();
            }
        }
        
    }



    var fnBubbleUnHover = function () {

        //console.log('ENTER BUBBLE UN-HOVER');
        $(this).removeClass('hover');

        if ($(this).find('.bubble').hasClass('bubbleStay')) {
           // console.log('LEAVE HOVER PARENT - BUBBLE STAY');

        }
        else if ($(this).find('.bubble').hasClass('bubbleQuick')) {
           // console.log('LEAVE HOVER PARENT - QUICK CLOSE');
            $('body > .bubble').remove();
            $('body > .tri').remove();

        } else {
            //console.log('LEAVE HOVER PARENT - SET TIMER CLOSE');
            timer1 = setTimeout(function () {
                //console.log('TIME OUT');
                $('body > .bubble').remove();
                $('body > .tri').remove();
            }, 1000);
        }

    }

    var fnBubbleHover = function () {

        //console.log('ENTER HOVER PARENT');
        //console.log($(this));
        $(this).addClass('hover');

        if ($('body > .bubble').hasClass('bubbleShown')) { // console.log('SKIP'); 
            return;
        }

        if ($(this).find('.bubble').hasClass('bubbleDisable')) { // console.log('SKIP'); 
            return;
        }

        clearTimeout(timer1);
        $('body > .bubble').remove();
        $('body > .tri').remove();

        var th = 20;
        var tw = 20;

        var x = $(this).offset().left;
        var y = $(this).offset().top;
        var w = $(this).outerWidth();
        var h = $(this).outerHeight();

        //console.log('bubble parent: x:' + x + ' y:' + y + ' w:' + w + ' h:' + h);

        var bw = $(this).find('.bubble').outerWidth();
        var bh = $(this).find('.bubble').outerHeight();
        var color = $(this).find('.bubble').css('border-left-color');
        var bubbledirection = $(this).find('.bubble').attr('direction');
        var bubbletop = $(this).find('.bubble').attr('top');
        var bubbleQuick = $(this).find('.bubble').hasClass('bubbleQuick');
        var transparent = 'transparent';
        //console.log('bubble pre append:  bw:' + bw + ' bh:' + bh);

        $(this).find('.bubble').clone().appendTo('body').show();
        $('body > .bubble').addClass('bubbleShown');

        // JL NOTE ~ needed to show "fixed by" for the fixes
        if ($(this).hasClass('family_fixed'))
        {
            $('body > .bubble').addClass('family_fixed');            
        }

        if (bubbledirection != '') {
            $('body > .bubble').css('position', 'absolute');
        }
        bw = $('body > .bubble').outerWidth();
        bh = $('body > .bubble').outerHeight();
        //console.log('bubble post append: bw:' + bw + ' bh:' + bh);


        var tri = "<div class=\"tri\" style=\"position:absolute; z-index:10000; font-size: 0px; line-height: 0%; width: 0px;";

        switch (bubbledirection) {

            case 'right':
                //==bubble
                var top = y + (h / 2) - (bh / 2);
                var left = x + w + tw;
                //console.log('bubble post append: top:' + top + ' left:' + left);                    
                $('body > .bubble').css('top', top);
                $('body > .bubble').css('left', left);
                //==triangle
                tri += "border-bottom: 10px solid " + transparent + "; border-right: 20px solid " + color + "; border-top: 10px solid " + transparent + ";\"></div>";
                $('body').append(tri);
                $('body > .tri').css('top', y + (h / 2) - (th / 2));
                $('body > .tri').css('left', x + w);
                break;

            case 'left':
                //==bubble
                var top = y + (h / 2) - (bh / 2);
                if (bubbletop != undefined) {
                    top = parseInt(bubbletop);
                }
                var left = x - bw - tw;
                //console.log('bubble cords: top:' + top + ' left:' + left);
                $('body > .bubble').css('top', top);
                $('body > .bubble').css('left', left);
                //==triangle
                tri += "border-bottom: 10px solid " + transparent + "; border-left: 20px solid " + color + "; border-top: 10px solid " + transparent + ";'\"></div>";
                $('body').append(tri);
                $('body > .tri').css('top', y + (h / 2) - (th / 2));
                $('body > .tri').css('left', x - tw);
                break;

            case 'up':
                //==bubble
                var top = y - bh - th;
                var left = x + (w / 2) - (bw / 2);
                $('body > .bubble').css('top', top);
                $('body > .bubble').css('left', left);
                //==triangle
                tri += "border-left: 10px solid " + transparent + "; border-right: 10px solid " + transparent + "; border-top: 20px solid " + color + ";'\"></div>";
                $('body').append(tri);
                $('body > .tri').css('top', y - th);
                $('body > .tri').css('left', x + (w / 2) - (tw / 2));
                break;

            case 'down':
                //==bubble
                var top = y + 74;
                var left = x;
                //console.log('triangle: top:' + top + ' left:' + left);
                $('body > .bubble').css('top', top);
                $('body > .bubble').css('left', left);
                //==triangle
                tri += "border-left: 10px solid " + transparent + "; border-right: 10px solid " + transparent + "; border-bottom: 15px solid " + color + ";'\"></div>";
                $('body').append(tri);
                $('body > .tri').css('top', y + 59);
                $('body > .tri').css('left', x + 25);
                break;

            default:
        }
        if (bubbleQuick) { $('body > .tri').addClass('bubbleQuick'); }


        $('.bubbleShown').mouseenter(function () {  //console.log('CLEAR TIMER');
            clearTimeout(timer1);
        });

        $('.bubbleShown').mouseleave(function () {  //console.log('LEAVE BUBBLE');           
            if (!$(this).hasClass('bubbleStay')) {
                $('body > .bubble').remove();
                $('body > .tri').remove();
            }
        });

        $('.bubbleShown.bubbleQuick').mouseenter(function () {  //console.log('ENTER BUBBLEQUICK');                                
            $('body > .bubble').remove();
            $('body > .tri').remove();
        });

        $('.tri.bubbleQuick').mouseenter(function () {  //console.log('ENTER TRI QUICK');
            $('body > .bubble').remove();
            $('body > .tri').remove();
        });


    }

    
</script><style type="text/css">

    /* JL NOTE ~ New styles! lol ------------------------------------------------ */
    /* -------------------------------------------------------------------------- */
    .clearMe {display: block; height: 0; clear: both; font-size: 0;}
    .clear:after {content: "."; display: block; height: 0; clear: both; visibility: hidden;}
    
    
    /* hide IE mac \*/
    /*
    * html .clear {height: 1%;}
    .clear {display: block;}
    */
    html {
        
        
        overflow-y: scroll;
    }
    body {
        background: #3c3d42 url(/images/avgprivacyfix/background.png) center center;
        background-size: auto 100%;
        background-attachment: fixed;
        font-family: Arial, sans-serif;

    }
    :focus {
        -moz-outline-style: none;
    }
    a {
        text-decoration: none;
    }
    div.header {
        background: #0b1126;
    }
    div.header .gutter {
        width: 1200px;
        margin: 0px auto;
        padding: 20px 0px;
        position: relative;
    }

    div.header .beta { display: inline; color: white; font-size: 13px; color: #fff; }
    div.header ul {

        position: absolute;
        right: 0px;
        top: 25px;
    }
    div.header ul li {
        display: inline;
        padding: 0 20px 0 20px;
        border-left: 1px solid #78797d;
        vertical-align: middle;
    }
    div.header ul li:first-child {
        border-left: 0px none transparent;
    }
    div.header ul li:last-child {
        padding-right: 0px;
    }
    div.header ul li a {
        color: white;
        opacity: 1;
    }
    div.header ul li a:hover {
        opacity: 1;
    }
    div.header ul li img {
        vertical-align: middle;
    }
    div.header ul li a img {
        margin-left: 15px;
    }
    div.header ul li a:first-child img {
        margin-left: 0px;
    }

    sup {
        vertical-align: super;
        font-size: 60%;
    }

    div.content {
        width: 1200px;
        margin: 0px auto;
        padding-bottom: 40px;
    }

    /* It's an area. For sharing. So it's a _sharea!_ Get it? LOL. I'm funny. */
    div.sharea {
        padding: 50px 0px;
        background-color: rgba(255, 255, 255, .1);
    }
    div.sharea .gutter {
        margin: 0px auto;
        width: 860px;
        height: 74px;
        font-family: "Roboto", sans-serif;
        font-size: 42px;
        font-weight: 100;
        color: white;
        line-height: 48px;
    }
    div.sharea .gutter ul {
        float: right;
    }
    div.sharea .gutter ul li {
        float: left;
        margin-right: 30px;
        width: 74px;
        height: 74px;
        position: relative;
    }
    div.sharea .gutter ul li a {
        display: block;
        width: 74px;
        height: 74px;
        position: absolute;
        z-index: 9001;
    }
    div.sharea .gutter ul li:last-child {
        margin-right: 0px;
    }
    div.footer {
        padding: 35px 0px 125px 0px;
        background-color: rgba(0, 0, 0, .1);
    }
    div.footer .gutter {
        width: 1200px;
        margin: 0px auto;
        position: relative;
    }
    div.footer .gutter .affiliation {
        position: absolute;
        right: 20px;
        top: 60px;
        font-size: 13px;
        color: white;
    }
    div.footer ul.apps {
        float: left;
    }
    div.footer ul.apps li {
        float: left;
        margin-right: 25px;
    }
    div.footer ul.nav {
        margin-top: 20px;
        float: right;
    }
    div.footer ul.nav li {
        float: left;
        padding: 0px 20px;
        border-left: 1px solid #78777c;
    }
    div.footer ul.nav li a {
        color: white;
    }
    div.footer ul.nav li:first-child {
        border-left: 0px none transparent;
    }

    div.footer .copyright {
        text-align: center;
        margin-top: 40px;
        font-family: "Roboto", sans-serif;
        font-size: 12px;
        line-height: 18px;
        color: #bbb;
    }

    /* -------------------------------------------------------------------------- */
    /* -------------------------------------------------------------------------- */

    .completion
    {
        position: absolute;
        left: 0px;
        top: 87px;
        height: 77px;
        width: 100%;
        font-family: Roboto;
        background-color: black;
        line-height: 70px;
        font-size: 24px;
        font-weight: 100;
        padding-left: 0px;
        color: white;
        margin-bottom: 32px;
        z-index: 9001;
        -webkit-transition: box-shadow .5s linear;
        -moz-transition: box-shadow .5s linear;
        transition: box-shadow .5s linear;
        display: none;
    }
    .completion.fixed
    {
        top: 0px;
        position: fixed;
        box-shadow: 0px 1px 5px rgba(0, 0, 0, .6);
    }

    .completion .interior
    {
        width: 1200px;
        margin: 0px auto;
        position: relative;
    }

    .completion .progress_text {
        display: inline-block;
        margin-right: 19px;
        vertical-align: middle;
        max-width: 260px;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .completion .bar_container
    {
        display: inline-block;
        background: #e3e3e3;
        width: 470px;
        height: 18px;
        vertical-align: middle;
    }

    .completion .bar_container .bar
    {
        width: 0px;
        height: 18px;
        background: #2fab43;
        transition: width 1s ease-out;
    }

    .completion .bar_right { 
        position: absolute;
        top: 0px; 
        right: 0px;
    }

    .completion .includes
    {
        display: inline-block;
        margin-right: 19px;
        height: 40px;
        font-size: 20px;
        font-weight: 300;
        color: white;
        text-transform: none;
        display: none;
        vertical-align: top;
        padding-top: 3px;
    }

    .completion ul.icons
    {
        padding-top: 15px;
        display: inline-block;
        width: 281px;
        height: 40px;
        list-style-type: none;
    }

    .completion ul.icons li
    {
        display: none;
        margin-right: 14px;
        width: 40px;
        height: 40px;
        padding: 0px;
    }
    .completion ul.icons li:last-child, .completion ul.icons li.last
    {
        margin-right: 0px;
    }

    .completion ul.icons li img
    {
        width: 40px;
        height: 40px;
    }

    .box#friendExposed
    {

    }
        
    #logo
    {
        cursor: pointer;
    }

    .no_selection {
        -webkit-user-select: none; 
        -moz-user-select: none; 
        -khtml-user-select: none; 
    }
    
    
    
    
    .launchbutton
    {
        background-color: #C60000;
        color: White;
        text-align:center;
        padding: 5px;
        cursor: pointer;
        margin-top: 20px;
        border-radius: 10px;
        text-transform:capitalize;
    }
    
    #wrap
    {
        display:none;
        position:relative;
        margin:auto;
        margin-top: 50px;
    }
    #wrap.margin {
        margin-top: 115px;
    }
    span
    {
        font-weight: bold;
    }
    
    .roundcorners
    {
        -moz-border-radius: 10px;
        -webkit-border-radius: 10px;
        -khtml-border-radius: 10px;
        border-radius: 10px;
    }
    
    .caution
    {
        background-color: #F2C2C0;
    }
    .concern
    {
        background-color: #FCDBBE;
    }
    .comfort
    {
        background-color: #D7E8C6;
    }
    .na
    {
        background-color:Silver;
    }
    
   
    
    .bgLightgrey
    {
        background-color: #B5B5B6;
    }
    .bgBlueFade
    {
       background-color: #F6F7F8;
    }
    .theorange
    {
       background-color: #FAA657;
    }
    .thegreen
    {
        background-color: #7BA34A;
    }
    
    .sectionbar .help {
        float: right;

    }
    .sectionbar .help a {
        color: white;
        font-family: "Roboto", sans-serif;
        font-size: 18px;
        font-weight: 300;
        line-height: 35px;
        cursor: pointer;
    }
    
    .sectionbar
    {
        position: relative;
        margin-top: 20px;
        font-family: "Roboto", sans-serif;
        font-weight: 100;
        font-size: 36px;
        line-height: 36px;
        padding:0px 0px;
        
        color:White;
        width: 1200px;
    }
    .sectionbar:first-child
    {
        margin-top: 0px;
    }

    .sectionbar .issues_count
    {
        color: #f48720;
        padding-left: 5px;
    }

    .sectionbar .center;
    {
        width:920px;
        margin:auto;
    }

    .login_prompt
    {
        margin-top: 20px;
        display: none;
        padding: 15px 0px;
        border-top: 1px solid rgba(255, 255, 255, .2);
        background: rgba(255, 255, 255, .1);
        color: white;
        position: relative;
        font-family: "Roboto", sans-serif;
        margin-bottom: 62px;
    }
    .login_prompt .text
    {
        display: inline-block;
        min-width: 360px;
        padding: 0px 40px;
        font-size: 22px;
        font-weight: 300;
    }
    .login_prompt .loginbtn
    {
        display: inline-block;
        width: 270px;
        height: 40px;
        line-height: 40px;
        color: white;
        background: #36b34b;
        text-align: center;
        cursor: pointer;
        font-weight: 400;
        border-radius: 5px;
    }


    .section
    {
        position: relative;
        display:none;
        margin:auto;
        width: 1200px;               
        margin-top: 15px;
        margin-bottom: 62px;  
    }
   
    .sectionheader
    {      
        padding: 5px;
        min-height: 40px;
    }  
    .sectionheader img
    {
        float:left;
        margin: 5px 10px 5px 5px;
    }  
    .subheader
    {        
        min-height: 36px;
        padding-left: 10px;
        color: white;                
    }            
        
    .section .internal_header
    {
        height: 77px;
        font-family: Roboto;
        background-color: rgba(255, 255, 255, .1);
        line-height: 77px;
        font-size: 30px;
        text-transform: uppercase;
        font-weight: 100;
        padding-left: 75px;
        color: white;

    }
    .section .internal_header.tracking {
        background-image: url(/images/avgprivacyfix/icon_tr.png);
        background-position: 15px center;
        background-size: 40px 40px;
        background-repeat: no-repeat;
    }
    .section .internal_header.google {
        background-image: url(/images/avgprivacyfix/icon_gl.png);
        background-position: 15px center;
        background-size: 40px 40px;
        background-repeat: no-repeat;
    }
    .section .internal_header.facebook {
        background-image: url(/images/avgprivacyfix/icon_fb.png);
        background-position: 15px center;
        background-size: 40px 40px;
        background-repeat: no-repeat;
    }
    .section .internal_header.twitter {
        background-image: url(/images/avgprivacyfix/icon_tw.png);
        background-position: 15px center;
        background-size: 40px 40px;
        background-repeat: no-repeat;
    }
    .section .internal_header.linkedin {
        background-image: url(/images/avgprivacyfix/icon_li.png);
        background-position: 15px center;
        background-size: 40px 40px;
        background-repeat: no-repeat;
    }
        
    .section .row
    {
        clear:both;
        
    }
    .section .row:first-child
    {
        
        
    }
    
    .section .rowNull
    {
        clear:both;
        border-top: solid #BBB 1px;
        padding-top: 0px;
    }
    
    .section .row .rowlabel
    {
        text-transform: uppercase;
        /*background-color: #46474c;*/
        background: rgba(255,255,255,.1);
        padding: 0px 12px;
        font-size: 13px;
        line-height: 35px;
        height: 35px;
        
        color: #a7a8ac;   
    }
    .section .row .rowlabel img
    {
    
    }
    .section .row .rowlabel .words
    {

    }
    .section.support .row .rowlabel .words 
    {
    }
    
    .section.tracking .row .rowlabel .words
    {
    }
    .section.publisher .row .rowlabel .words
    {
    }
    .section .row .rowcontent
    {
        
    }

    .section.tracking .infoarea {
        min-height: 269px;
    }
    .section.tracking p strong {
        font-weight: 400;
        color: #444;
    }

    .section.tracking p a {
        color: #008ecc;
    }
    .section.tracking p a:hover {
    }

    .section.tracking ul.tri_pane
    {
        text-align: center;
        margin-bottom: 39px;
    }
    .section.tracking img.protected {
        margin-top: 20px;
    }
    .section.tracking h4.block_count {
        font-weight: 300;
        margin-top: 15px;
        margin-bottom: 0px;
    }
    .section.tracking h4.block_count strong {
        font-weight: 400;
    }
    .section.tracking ul.tri_pane li {
        display: inline-block;
        width: 31%;
        font-size: 12px;
        line-height: 16px;
        font-weight: 300;
    }
    .section.tracking ul.tri_pane li em {
        display: block;
        margin-bottom: 10px;
        font-size: 34px;
        font-weight: 300;
        color: #444;
        line-height: 34px;
    }

    .bubbleQuick.orange {
        background: #f38621;
        border: 1px solid #f38621;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, .5);
    }
    .bubbleQuick.orange h4 {
        color: white;
    }
    
    .actionArea 
    {

    }
    .infoarea
    {
        float:right;
        width: 350px;
        padding: 30px;
        min-height: 20px;   
        background-color: white;
    }
    .infoarea.facebook {
        background-color: white;
        color: #666666;
        position: relative;
    }
    .infoarea .sectioninstruct
    {
        font-size: 22px;
        line-height: 26px;
        margin-top: 15px;
        color: #555;
    }
    
    .infoarea .stats_area {
        font-family: "Roboto", sans-serif;
        text-align: center;
        position: relative;
    }
    .infoarea .stats_area h3 {
        font-size: 16px;
        text-transform: uppercase;
        color: white;
        font-weight: 400;
        margin-bottom: 30px;
        color: #666;
        -webkit-transition: color .5s linear;
        -moz-transition: color .5s linear;
        transition: color .5s linear;
    }
    .infoarea.facebook .stats_area h3,
	.infoarea.facebook .family h3 {
        /* background: url(/images/avgprivacyfix/sidebar_heading_back.png) left center repeat-x; */
        padding-top: 0px;
        margin-top: 0px;
        margin-bottom: 20px;
    }
    .infoarea.facebook .stats_area h3 em,
	.infoarea.facebook .family h3 em {
        display: inline-block;
        color: #666666;
        font-size: 17px;
        text-transform: uppercase;
        background-color: white;
        padding: 0px 10px;
    }

	.infoarea.facebook .family h3 { margin-top: 25px; text-align: center;}
	.infoarea.facebook .family h3 em {}
	.infoarea.facebook .family .members ul {list-style: none; margin: 0; padding: 0; text-align: center;}
	.infoarea.facebook .family .members ul li {display: inline-block; width: 94px; margin: 0 10px; vertical-align: top;}
	.infoarea.facebook .family .members ul li img {border-radius: 40px;}
	.infoarea.facebook .family .members ul li p {padding: 7px 0; font-size: .7em; color: #666;}

    .infoarea.facebook div.get_100 {
        opacity: .75;
        margin-top: 8px;
        text-align: right;
        font-family: "Roboto", sans-serif;
        font-size: 14px;
        font-weight: 400;
        padding-right: 23px;
        background: url(/images/avgprivacyfix/arrow_down_black.png) 153px center no-repeat;
        background-size: 16px 9px;
        cursor: pointer;
    }
    .infoarea.facebook div.get_100:hover {
        opacity: 1;
    }
    .infoarea.facebook div.get_100.toggled {
        opacity: 1;
        background: url(/images/avgprivacyfix/arrow_up_black.png) 153px center no-repeat;
        background-size: 16px 9px;
    }

    .infoarea.facebook ul.remaining_fixes {
        display: none;
        left: 0px;
        top: 200px;
        position: absolute;
        width: 410px;
        padding: 0px 0px;
        background-color: #e5e5e5;
        z-index: 2;
        font-family: "Roboto", sans-serif;
        font-size: 15px;
        font-weight: 300;
        color: black;
        box-shadow: 0px 0px 10px rgba(0,0,0,.2);
    }
    .infoarea.facebook ul.remaining_fixes li {
        padding: 15px 30px;
        border-bottom: 1px solid #d3d3d3;
        cursor: pointer;
    }
    .infoarea.facebook ul.remaining_fixes li:hover {
        background: #d3d3d3;
    }
    .infoarea.facebook ul.remaining_fixes li span.percentage {
        display: block;
        margin-left: 20px;
        width: 60px;
        float: left;
        font-weight: 400;
    }
    .infoarea.facebook ul.remaining_fixes li span.goodtext {
        display: block;
        width: 200px;
        height: 20px;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    .infoarea.facebook ul.remaining_fixes li span.fix {
        display block;
        float: right;
        padding-right: 30px;
        font-weight: 400;
    }

    .infoarea .stats_area.dark h3 {
        color: #1c1c1c;
    }

    .infoarea .protection_level {
        min-height: 120px;
        padding-left: 120px;
        position: relative;
        margin-bottom: 10px;
    }
    .infoarea .protection_level h3 {
        color: #666666;
        width: 150px;
        font-size: 17px;
        line-height: 21px;
        margin-bottom: 5px;
    }
    .infoarea .protection_level strong {
        font-family: "Roboto", sans-serif;
        font-weight: normal;
        font-weight: 100;
        color: #2fac43;
        font-size: 60px;
    }
    .infoarea .protection_level .progress {
        margin-top: 5px;
        width: 170px;
        height: 20px;
        background-color: #e5e5e5;
    }
    .infoarea .protection_level .progress .bar {
        -webkit-transition: width 1s ease-out;
        width: 0%;
        height: 20px;
        background-color: #2fac43;
    }
    .infoarea .protection_level .privacy_status {
        min-height: 30px;
        background: url(/images/avgprivacyfix/icon_lock.png) left center no-repeat;
        background-size: 30px 30px;
        padding-left: 40px;
        margin-top: 15px;
    }
    .infoarea .protection_level .privacy_status span {
        font-family: "Roboto", sans-serif;
        font-weight: 300;
        color: black;
        font-size: 16px;
    }
    .infoarea .protection_level .avatar {
        width: 120px;
        position: absolute;
        left: 0px;
        top: 0px;
    }
    .infoarea .protection_level .avatar .pic {
        width: 110px;
        height: 110px;
        border-radius: 75px;
        background: url(/images/avgprivacyfix/fb_pf.png) left top no-repeat;
        background-size: 150px 150px;
    }
    .infoarea .protection_level .avatar .name {
        margin-top: 15px;
        width: 150px;
        height: 20px;
        font-size: 15px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        text-align: center;
        font-family: "Roboto", sans-serif;
        font-weight: bold;
    }
    
    .infoarea hr {
        border-top: 1px solid rgba(0,0,0,.1);
        border-bottom: 0px none transparent;
        border-left: 0px none transparent;
        border-right: 0px none transparent;
        margin: 20px 0px;
    }

    .infoarea .stats_area .facebook_worth {
        font-size: 13px;
        line-height: 25px;
        color: #666666;
        font-weight: 300;
        font-family: "Roboto", sans-serif;
    }
    .infoarea .stats_area .facebook_worth strong {
        font-weight: bold;
    }
    .infoarea .stats_area .facebook_worth .indicator {
        display: inline-block;
        position: relative;
        width: 16px;
        height: 29px;
        vertical-align: top;
        margin-right: 10px;
        margin-top: 10px;
    }
    .infoarea .stats_area .facebook_worth .indicator div {
        width: 5px;
        height: 5px;
        position: absolute;
        left: 0px;
        top: 11px;
        background-color: white;
        border: 1px solid #6f6f6f;
        border-radius: 7px;
        -webkit-transition: background-color 1s linear;
        -moz-transition: background-color 1s linear;
        transition: background-color 1s linear;
    }
    .infoarea .stats_area .facebook_worth .indicator div.i1 {
        position: absolute;
        left: 0px;
        top: 0px;
    }
    .infoarea .stats_area .facebook_worth .indicator div.i3 {
        left: 0px;
        top: 22px;
    }

    .infoarea .stats_area .facebook_worth .indicator.normal div.i1{
        background-color: #fff;
        border: 1px solid #6f6f6f;
    }
    .infoarea .stats_area .facebook_worth .indicator.normal div, .infoarea .stats_area .facebook_worth .indicator.normal div.i3 {
        background-color: #3cae4c;
        border: 1px solid #3cae4c;
    }
    .infoarea .stats_area .facebook_worth .indicator.low div.i3 {
        background-color: #3cae4c;
        border: 1px solid #3cae4c;
    }
    .infoarea .stats_area .facebook_worth .indicator.high div.i1, .infoarea .stats_area .facebook_worth .indicator.high div, .infoarea .stats_area .facebook_worth .indicator.high div.i3 {
        background-color: #3cae4c;
        border: 1px solid #3cae4c;
    }


    .infoarea .stats_area .facebook_worth .worth {
        display: inline-block;
        font-size: 50px;
        height: 50px;
        line-height: 50px;
        font-weight: 100;
        color: #2fad43;
        vertical-align: top;
        padding-top: 10px;
    }
    .infoarea .stats_area .facebook_worth a.fbworthlink {
        display: inline-block;
        margin-top: 15px;
        padding: 2px 30px 2px 20px;
        background: #3c5698;
        color: white;
        font-family: Roboto;
        font-size: 16px;
    }
    .infoarea .stats_area .facebook_worth a.fbworthlink img {
        width: 25px;
        height: 25px;
        margin-right: 3px;
        margin-bottom: -2px;
        vertical-align: bottom;
    }

    .infoarea .stats_area .facebook_worth p {
        margin-top: 10px;
        font-size: 17px;
        line-height: 25px;

        margin: 0px auto;
        width: 350px;
        

    }
    .infoarea .stats_area .facebook_worth p strong {
    }

    .infoarea .stats_area .facebook_worth .expanded .worth_detail_container {
        margin-top: 20px;
        border-left: 1px solid #f1f1f1;
        border-right: 1px solid #f1f1f1;
        border-top: 1px solid #f1f1f1;
        padding: 0px;
        margin-bottom: 30px;
    }


    .infoarea .stats_area .facebook_worth .expanded .details {
        position: relative;
        margin: 0px 0 0px 0;
        padding: 0px 0px 0px 0px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div {
        border-bottom: 1px solid #f1f1f1;
        padding: 13px 0px 23px 0px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div.arrow {
        opacity: 0; /* omg hax */
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div > ul {
        width: 100%;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .heading { 
        text-align: center;
        font-size: 16px;
        font-weight: 300;
        text-transform: uppercase;
        color: #666;
        margin-bottom: 12px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .heading img {
        margin-right: 10px;
        width: 20px;
        height: 20px;
        margin-bottom: -3px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details.activity .arrow {
        left: 53px;
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .expanded .details.profile .arrow {
        left: 165px;
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .expanded .details.location .arrow {
        left: 280px;
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .expanded .details.activity > div.activity {
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .expanded .details.profile > div.profile {
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .expanded .details.location > div.location {
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div > ul > li {
        float: left;
        font-size: 13px;
        text-transform: uppercase;
        line-height: 15px;
        color: black;
        position: relative;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .activity > ul > li {
        width: 116px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .profile > ul > li {
        width: 50%;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location > ul > li:first-child {
        width: 116px;
        display: block;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location > ul > li:last-child {
        width: 232px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location.nofloat {
        top: 0px;
        margin-top: -5px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location.nofloat > ul > li .region_users {
        border-right: 0px none transparent;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location.nofloat > ul > li .region_users strong {
        display: inline;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location.nofloat > ul > li:first-child {
        float: none;
        width: 100%;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location.nofloat > ul > li:last-child {
        width: 100%;
        float: none;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location.nofloat > ul > li > ul {
        margin-top: 7px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location.nofloat > ul > li > ul > li { /* omgomg */
        padding-left: 20px;
        text-align: left;
        font-size: 12px;
        margin: 5px 0px 5px 0px;
        color: black;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location.nofloat > ul > li > ul > li strong {
        font-weight: 400;
        font-size: 15px;
        margin-right: 5px;
        margin-left: 10px;
        color: #2fad43;
        text-transform: none;
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div > ul > li h4 {
        height: 48px;
        margin: 0px;
        line-height: 36px;
        border-right: 1px solid white;
        font-size: 36px;
        font-family: "Roboto", sans-serif;
        font-weight: 100;
        color: black;
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div > ul > li:last-child h4 {
        border-right: 0px none transparent;
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div > ul > li .indicator {
        display: block;
        position: absolute;
        width: 10px;
        height: 33px;
        top: -5px;
        left: 15px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div > ul > li .indicator div {
        position: absolute;
        left: 0px;
        top: 11px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div > ul > li .indicator div.i1 {
        position: absolute;
        left: 0px;
        top: 0px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details > div > ul > li .indicator div.i3 {
        left: 0px;
        top: 22px;
    }
    
    .infoarea .stats_area .facebook_worth .expanded .details .location > ul > li .region_users {
        display: block;
        border-right: 1px solid #eee;
        font-size: 18px;
        font-weight: 100;
        text-transform: none;
        line-height: 22px;
        margin-top: 15px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location > ul > li .region_users strong {
        display: block;
        color: #2fad43;
        font-weight: 400;
    }

    .infoarea .stats_area .facebook_worth .expanded .details .location > ul > li > ul > li { /* omgomg */
        padding-left: 20px;
        text-align: left;
        font-size: 14px;
        margin: 5px 0px 10px 0px;
        color: black;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location > ul > li > ul > li:last-child {
        margin-bottom: 0px;
    }
    .infoarea .stats_area .facebook_worth .expanded .details .location > ul > li > ul > li strong {
        font-weight: 400;
        font-size: 18px;
        margin-right: 5px;
        color: #2fad43;
        text-transform: none;
    }





    .infoarea .stats_area .facebook_worth .collapsed .worth_detail_container {
        margin-top: 15px;
        border: 1px solid #f1f1f1;
        padding: 0px;
        margin-bottom: 30px;
    }

    .infoarea .stats_area .facebook_worth .collapsed .worth_detail_container > ul {
        margin-top: 10px;
        width: 100%;
        padding-bottom: 10px;
        border-bottom: 1px solid #f1f1f1;
    }
    .infoarea .stats_area .facebook_worth .collapsed .worth_detail_container > ul li {
        display: inline-block;
        font-weight: 400;
        padding-top: 30px;
        border-right: 1px solid #e5e5e5;
        width: 115px;
        font-size: 13px;
        color: #cbcbcb;
        text-transform: uppercase;
        text-align: center;
        cursor: default;
        -webkit-transition: color .3s linear;
        -moz-transition: color .3s linear;
        transition: color .3s linear;
    }
    .infoarea .stats_area .facebook_worth .collapsed .worth_detail_container > ul li:last-child {
        border-right: 0px none transparent;
    }
    .infoarea .stats_area .facebook_worth .collapsed .worth_detail_container > ul li:hover {
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .collapsed ul li.activity {
        background: url(/images/avgprivacyfix/activity-gray.png) center 5px no-repeat;
    }
    .infoarea .stats_area .facebook_worth .collapsed ul li.activity:hover, .infoarea .stats_area .facebook_worth ul li.activity.sel {
        background: url(/images/avgprivacyfix/activity-green.png) center 5px no-repeat;
        color: #2fad43;
    }
    .infoarea .stats_area .facebook_worth .collapsed ul li.profile {
        background: url(/images/avgprivacyfix/profile-gray.png) center 5px no-repeat;
    }
    .infoarea .stats_area .facebook_worth .collapsed ul li.profile:hover, .infoarea .stats_area .facebook_worth ul li.profile.sel {
        background: url(/images/avgprivacyfix/profile-green.png) center 5px no-repeat;
        color: #2fad43;
    }
    .infoarea .stats_area .facebook_worth .collapsed ul li.location {
        background: url(/images/avgprivacyfix/location-gray.png) center 5px no-repeat;
    }
    .infoarea .stats_area .facebook_worth .collapsed ul li.location:hover, .infoarea .stats_area .facebook_worth ul li.location.sel {
        background: url(/images/avgprivacyfix/location-green.png) center 5px no-repeat;
        color: #2fad43;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details {
        position: relative;
        margin: 0px 0 0px 0;
        padding: 15px 0px 0px 0px;
        height: 85px;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div {
        position: absolute;
        left: 0px;
        top: 15px;
        width: 350px;
        opacity: 0;
        -webkit-transition: opacity .3s linear;
        -moz-transition: opacity .3s linear;
        transition: opacity .3s linear;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div.arrow {
        opacity: 0; /* omg hax */
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div > ul {
        width: 100%;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details.activity .arrow {
        left: 53px;
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details.profile .arrow {
        left: 165px;
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details.location .arrow {
        left: 280px;
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details.activity > div.activity {
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details.profile > div.profile {
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details.location > div.location {
        opacity: 1;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div > ul > li {
        float: left;
        font-size: 13px;
        text-transform: uppercase;
        line-height: 15px;
        color: black;
        position: relative;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .activity > ul > li {
        width: 116px;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .profile > ul > li {
        width: 50%;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location > ul > li:first-child {
        width: 116px;
        display: block;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location > ul > li:last-child {
        width: 232px;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location.nofloat {
        top: 0px;
        margin-top: -5px;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location.nofloat > ul > li .region_users {
        border-right: 0px none transparent;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location.nofloat > ul > li .region_users strong {
        display: inline;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location.nofloat > ul > li:first-child {
        float: none;
        width: 100%;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location.nofloat > ul > li:last-child {
        width: 100%;
        float: none;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location.nofloat > ul > li > ul {
        margin-top: 7px;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location.nofloat > ul > li > ul > li { /* omgomg */
        padding-left: 20px;
        text-align: left;
        font-size: 12px;
        margin: 5px 0px 5px 0px;
        color: black;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location.nofloat > ul > li > ul > li strong {
        font-weight: 400;
        font-size: 15px;
        margin-right: 5px;
        margin-left: 10px;
        color: #2fad43;
        text-transform: none;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div > ul > li h4 {
        height: 48px;
        margin: 0px;
        line-height: 36px;
        border-right: 1px solid white;
        font-size: 36px;
        font-family: "Roboto", sans-serif;
        font-weight: 100;
        color: black;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div > ul > li:last-child h4 {
        border-right: 0px none transparent;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div > ul > li .indicator {
        display: block;
        position: absolute;
        width: 10px;
        height: 33px;
        top: -5px;
        left: 15px;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div > ul > li .indicator div {
        position: absolute;
        left: 0px;
        top: 11px;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div > ul > li .indicator div.i1 {
        position: absolute;
        left: 0px;
        top: 0px;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details > div > ul > li .indicator div.i3 {
        left: 0px;
        top: 22px;
    }
    
    .infoarea .stats_area .facebook_worth .collapsed .details .location > ul > li .region_users {
        display: block;
        border-right: 1px solid #aaa;
        font-size: 18px;
        font-weight: 100;
        text-transform: none;
        line-height: 22px;
        margin-top: 15px;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location > ul > li .region_users strong {
        display: block;
        color: #2fad43;
        font-weight: 400;
    }

    .infoarea .stats_area .facebook_worth .collapsed .details .location > ul > li > ul > li { /* omgomg */
        padding-left: 20px;
        text-align: left;
        font-size: 14px;
        margin: 5px 0px 10px 0px;
        color: black;
    }
    .infoarea .stats_area .facebook_worth .collapsed .details .location > ul > li > ul > li strong {
        font-weight: 400;
        font-size: 18px;
        margin-right: 5px;
        color: #2fad43;
        text-transform: none;
    }








    .infoarea.facebook .stats_area .faq_link {
        display: block;
        margin: 0px 0px 10px 0px;
    }
    .infoarea.facebook .stats_area .faq_link:hover {
        color: black;
    }
    .infoarea .stats_area .faq_link {
        color: #999999;
        font-size: 13px;
        text-decoration: none;
    }
    .infoarea .stats_area .faq_link:hover {
        color: white;
    }



    .infoarea .stats_area .google_worth, .infoarea .stats_area .twitter_worth {
        
    }
    .infoarea .stats_area .google_worth strong, .infoarea .stats_area .twitter_worth strong {
        font-weight: bold;
    }
    .infoarea .google_worth .worth, .infoarea .twitter_worth .worth {
        display: inline-block;
        font-size: 50px;
        font-weight: 100;
        color: #2fb345;
    }
    
    .infoarea .stats_area a.glworthlink {
        display: block;
        float: right;
        vertical-align: top;
        margin-top: 15px;
        margin-left: 10px;
        padding: 2px 30px 2px 20px;
        background: #3c5698;
        color: white;
        font-family: Roboto;
        font-size: 16px;
        line-height: 16px;
        line-height: 25px;
        font-weight: 300;
    }
    .infoarea .stats_area a.glworthlink img {
        width: 25px;
        height: 25px;
        margin-right: 3px;
        margin-bottom: -2px;
        vertical-align: bottom;
    }

    .infoarea.google .stats_area h3, .infoarea.twitter .stats_area h3 {
        /* background: url(/images/avgprivacyfix/sidebar_heading_back.png) left center repeat-x; */
        margin-bottom: 20px;
    }
    .infoarea.google .stats_area h3 em, .infoarea.twitter .stats_area h3 em {
        display: inline-block;
        color: #666666;
        font-size: 17px;
        text-transform: uppercase;
        background-color: white;
        padding: 0px 10px;
    }

    .infoarea .google_worth p, .infoarea .twitter_worth p {
        line-height: 25px;
        color: #666;
        font-weight: 300;
        font-family: "Roboto", sans-serif;
        margin-top: 15px;
        margin-bottom: 0px;
        /* font-size: 14px; */
    }

    .infoarea .stats_area a.twworthlink {
        display: block;
        float: right;
        vertical-align: top;
        margin-top: 15px;
        margin-left: 10px;
        padding: 2px 30px 2px 20px;
        background: #00acee;
        color: white;
        font-family: Roboto;
        font-size: 16px;
        line-height: 16px;
        line-height: 25px;
        font-weight: 300;
    }
    .infoarea .stats_area a.twworthlink img {
        width: 25px;
        height: 25px;
        margin-right: 3px;
        vertical-align: bottom;
    }

    .infoarea .twitter_worth .userstats {
        text-align: center;
    }
    .infoarea .twitter_worth .userstats > div {
        display: inline-block;
        width: 45%;
        font-weight: 300;
        color: gray;
        margin-top: 20px;
    }
    .infoarea .twitter_worth .userstats > div span {
        font-weight: 400;
        color: black;
    }

    .infoarea .twitter_worth .controls {
        margin: 25px 0 0 0;
    }
    .infoarea .twitter_worth .controls > div {
        float: left;
        background: #f1f1f1;
        padding: 10px;
        height: 80px;
    }
    .infoarea .twitter_worth .controls > div h4, .infoarea .twitter_worth .controls > div h5 {
        color: #2fb345;
        font-size: 14px;
        line-height: 18px;
        margin-bottom: 15px;
        font-weight: 300;

    }
    .infoarea .twitter_worth .controls > div h5 { margin-bottom: 0px; margin-top: 8px; font-weight: 400;}
    .infoarea .twitter_worth .controls div.loc {
        width: 110px;
        margin-right: 15px;
    }
    .infoarea .twitter_worth .controls div.views {
        width: 185px;
    }
    

    .infoarea .twitter_worth .controls label {
        display: block;
        cursor: pointer;
        text-align: left;
        padding-left: 10px;
        font-family: Roboto;
        font-weight: 100;
        font-size: 14px; 
        margin-top: 10px;
    }

    .infoarea .twitter_worth .controls input[type="radio"] {
        display:none;
    }
    .infoarea .twitter_worth .controls input[type="radio"] + label span {
        display:inline-block;
        width:14px;
        height:14px;
        margin:-5px 8px 0 0;
        vertical-align:middle;
        background:url(/images/avgprivacyfix/radio_sprite.png) -16px 1px no-repeat;
        cursor:pointer;
    }
    .infoarea .twitter_worth .controls input[type="radio"]:checked + label span {
        background:url(/images/avgprivacyfix/radio_sprite.png) -1px 1px no-repeat;
    }

    .infoarea .stats_area .tracks_on {
        color: #2fb345;
        position: relative;
        transition: opacity .5s linear;
    }
    
    .infoarea .stats_area .tracks_on strong {
        display: inline-block;
        height: 50px;
        font-size: 50px;
        line-height: 50px;
        font-weight: 100;
        vertical-align: middle;
    }
    .infoarea.facebook .stats_area .tracks_on {
        color: #2fb345;
    }

    .infoarea .stats_area .tracks_on em {
        display: inline-block;
        vertical-align: middle;
        text-align: left;
        padding-left: 10px;
        padding-top: 0px;
        font-weight: 300;
        font-size: 15px;
        line-height: 22px;
        color: #666;
    }
    .infoarea .stats_area .not_enough_data {
        position: absolute;
        top: 50px;
        width: 350px;
        transition: opacity .5s linear;
        opacity: 0;
    }
    .infoarea .stats_area .not_enough_data > div {
        display: inline-block;
        margin: 0px auto;
        height: 40px;
        background: url(/images/avgprivacyfix/clock.png) left top no-repeat;
        padding-left: 54px;
        font-size: 22px;
        font-weight: 100;
        line-height: 40px;
        color: #aaa;
    }

    .infoarea.linkedin .stats_area ul {
        list-style-type: none;
    }
    .infoarea.linkedin .stats_area li {
        list-style: none;
        padding: 10px 20px 10px 70px;
        font-size: 17px;
        text-align: left;
        font-weight: 300;
        line-height: 25px;
        color: #666;
        background-image: url(/images/avgprivacyfix/li_01.png);
        background-position: 10px 15px;
        background-repeat: no-repeat;
        margin-bottom: 32px;
        border-radius: 10px;
        cursor: pointer;
    }
    .infoarea.linkedin .stats_area li:hover {
        background-color: #eee;
        
        color: black\9; /* IE 8 yay */
    }
    .infoarea.linkedin .stats_area li.lurk {
        background-image: url(/images/avgprivacyfix/li_02.png);
    }
    .infoarea.linkedin .stats_area li.visibility {
        background-image: url(/images/avgprivacyfix/li_03.png);
    }

    .infoarea h4 {
        font-size: 24px;
        line-height: 34px;
        font-weight: 100;
        color: #666;
        margin-bottom: 30px;
    }

    .infoarea.publisher .btn_alerts {
        margin: 0px 0px 30px 0px;
        padding: 15px 0px;
        text-align: center;
        text-transform: uppercase;
        font-size: 16px;
        color: white;
        cursor: pointer;
        background: #f48720;
        border-radius: 10px;
        font-weight: 400;
    }
    .infoarea.publisher .btn_alerts.isactive {
        background: #36b34b;
    }
    .infoarea.publisher img {
        margin-bottom: 15px;
    }
    .infoarea p.content {
        font-size: 17px;
        font-weight: 300;
        line-height: 25px;
        color: #888;
    }
    .infoarea.publisher .btn_alerts .inactive {
        display: none;
    }
    .infoarea.publisher .btn_alerts .active {
        display: none;
    }
    .infoarea.publisher .btn_alerts.isinactive .inactive {
        display: block;
    }
    .infoarea.publisher .btn_alerts.isactive .active {
        display: block;
    }


    .iconbox
    {

    }
    .iconbox .icons
    {
        padding: 0px 10px 0px 20px;
        margin-top: 20px;
    }
    .iconbox .icons:empty
    {
        display: none;
    }
    
    .iconbox .foot
    {
        color:White;
        text-align: center;
        height: 20px;
        font-size: 14px;
        line-height: 22px;
    }
    .iconbox .logo
    {
        position:relative;
        float: left; 
        width: 20px;
        margin: 10px 12px 0px 0px;
    }
    .iconbox .logo:last-child
    {
        margin-bottom: 10px;
    }

    
          
         
          
    .box
    {
        position: relative;
        height: 74px;
        color: white;
        font-weight: normal;
        cursor: pointer;
        margin: 0px;
        border-bottom: 1px solid rgba(255, 255, 255, .1);
        display: table;
        width: 100%;
        padding-right: 175px;
        -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;
    }
    .box.only_child
    {
        border-bottom: 0px none transparent;
    }
    .box:last-child
    {
        /*
        border-bottom: 0px none transparent;
        */
    }
    .box:hover
    {
    }
    
    .box.istrue
    {
        
    }
    .box.istrue .icon
    {
        background: url(/images/avgprivacyfix/explanation_point_orange.png) no-repeat bottom left;
        background-size: 40px 40px;
    }
    .box.istrue .btn.btnfix
    {
        display: table;
        font-weight: 400;
    }
    .box.istrue .text.norm
    {
        display: table-cell;
    }
    .box.istrue:hover, .box.istrue.hover
    {
        background-color: #f48720;
    }
    .box.isfalse:hover .text.alt, .box.isfalse.hover .text.alt
    {
        color: white;
    }
    .box.istrue:hover .btn.btnfix, .box.istrue.hover .btn.btnfix
    {
        color: white;
        min-width: 83px;
        height: 35px;
        border: 1px solid white;
    }
    .box.istrue:hover .icon, .box.istrue.hover .icon
    {                
        background: url(/images/avgprivacyfix/explanation_point_hover.png) no-repeat bottom left;
        background-size: 40px 40px;
    }

    .box.isfalse .icon
    {                
        background: url(/images/avgprivacyfix/icon-lock.png) no-repeat bottom left;
        background-size: 40px 40px;
    }
    .box.isfalse:hover, .box.isfalse.hover
    {                
        background-color: #36b34b;
    }
    .box.isfalse:hover .text.alt, .box.isfalse.hover .text.alt
    {
        color: white;
    }
    .box.isfalse:hover .btn.fixed, .box.isfalse.hover .btn.fixed
    {
        color: white;
    }
    .box.isfalse:hover .icon, .box.isfalse.hover .icon
    {                
        background: url(/images/avgprivacyfix/icon-lock_hover.png) no-repeat bottom left;
        background-size: 40px 40px;
    }
    .box.isfalse .btn.undo
    {
        display: table;
        background-color: rgba(255, 255, 255, .3);
    }
    .box.isfalse:hover .btn.undo, .box.isfalse.hover .btn.undo
    {
        background-color: rgba(0, 0, 0, .3);
        min-width: 83px;
        height: 35px;
        border: 1px solid white;
    }    
     .box.isfalse .btn.fixed
    {
        display: table;
        background-color: transparent;
        text-align: center;
        color: #31b440;
    }
    .box.isfalse .text.alt
    {
        display: table-cell;
        color: #939499;
    }

    .box.isundefined .icon
    {                
        background: url(/images/avgprivacyfix/question_mark.png) no-repeat bottom left;
        background-size: 40px 40px;
    }
    .box.isundefined .btn.login
    {
        display: table;
        opacity: 0;
        -webkit-transition: opacity .5s linear;  -moz-transition: opacity .5s linear;  transition: opacity .5s linear;
        background-color: rgba(255, 255, 255, .3);
    }
    .box.isundefined .btn.login.show
    {
        opacity: 1;
    }
    .box.isundefined .text.undef
    {
        display: table-cell;
        color: #939499;
    }
    .box.isundefined:hover, .box.isundefined.hover, .box.isallowed:hover, .box.isallowed.hover
    {                
        background-color: #323337;
    }
    .box.isundefined:hover .text.undef, .box.isundefined.hover .text.undef
    {
        color: white;
    }
    .box.isallowed:hover .text.norm, .box.isallowed.hover .text.norm
    {
        color: white;
    }
    .box.isundefined:hover .btn.login, .box.isundefined.hover .btn.login
    {
        color: white;
        min-width: 83px;
        height: 35px;
        border: 1px solid white;
    }
    .box.isundefined:hover .icon, .box.isundefined.hover .icon
    {                
        background: url(/images/avgprivacyfix/question_mark_hover.png) no-repeat bottom left;
        background-size: 40px 40px;
    }
    
    .box.isallowed
    {
        
    }
    
     .box .icon
    {
        position: absolute;
        top: 16px;
        left: 15px;
        width: 40px;
        height: 40px;
    }
    
       
    .box.isallowed .icon
    {                
        background: url(/images/avgprivacyfix/icon_graybang.png) no-repeat bottom left;
        background-size: 40px 40px;
    }
    .box.isallowed:hover .icon
    {
        background: url(/images/avgprivacyfix/explanation_point_hover.png) no-repeat bottom left;
        background-size: 40px 40px;
    }
       
    
    
    .box .btn
    {
        display: none;
        position: absolute;
        top: 17px;
        right: 10px;
        font-size: 14px;
        line-height: 17px;
        font-weight: bold;
        text-align: center;
        min-width: 85px;
        height: 37px;
        font-family: "Roboto", sans-serif;
        font-weight: 300;
        background-color: rgba(255, 255, 255, .2);
        padding: 0px 5px;
        text-transform: uppercase;
        
    }
    .box.isundefined .btn.login.wide {
        width: auto;
        font-weight: 400;
        padding-left: 10px;
        padding-right: 10px;
        font-family: "Roboto", sans-serif;
        text-transform: uppercase;
        background-color: black;
    }
    .box.isundefined:hover .btn.login.wide, .box.isundefined.hover .btn.login.wide
    {
        width: auto;
        padding-left: 9px;
        padding-right: 9px;
        background-color: white;
        color: black;
    }
    .box .btn p
    {
        display: table-cell;
        vertical-align: middle;
    }
     

    
     
    /* hack because these buttons share html so they both have undo and fix elements */
    .box#instantPersonalization .btn.undo
    {
        display:none;
    }
    .box#setBlockFacebook .btn.fixed 
    {
        display:none;   
    }
    .box#trackingBlockedOffOfGoogle .btn.undo
    {
        display:none;
    }
    .box#setBlockGoogle .btn.fixed 
    {
        display:none;   
    }
    /* END: hack because these buttons share html so they both have undo and fix elements */
    .box.isallowed .btn.allowed
    {
        display: table;
        background-color: transparent;
        border:none;
        text-align: center;
        color: #31b440;
    }
    
    
    .box .text
    {   
        display: none;    
        margin: 0px 10px 0px 50px;
        font-size: 25px;
        padding-bottom: 2px;
        vertical-align: middle;
        padding-left: 75px;
        font-family: "Roboto", sans-serif;
        font-weight: 100;
    }
      
    .box.isallowed .text.norm
    {
        display: table-cell;
        color: #939499;
    }    
     
    

    
    .issuebuttonswrap 
    {
        position:relative; 
        float:left; 
        width: 770px;
        min-height: 20px;
    }
            
    
    
    
 
    
      
    .imageset
    {
        position: relative;
        height: 200px;
        width: 400px;
        border: solid silver 1px;
    }  
    .imageset div{
        position: absolute;
        top:0px;
        left: 0px;        
    } 
    .imageset div.image1
    {
        z-index: 10;
    }

    .imageset img 
    {
        width: 400px;
    }
    
    
    .emailmsg
    {
        clear:both;
        text-align:left;
        font-size: 16px;
        line-height: 20px;
    }
    .emailmsg .button
    {
        background: #F99746;
        color: White;
        padding: 5px;
        border: solid white 1px;
        width: 100px;
        margin: auto;
        margin-top: 10px;
        text-align:center;
        font-weight: bold;
    }
    .deletemsg
    {
        font-size: 16px;
        line-height: 20px;
    }
    
    .delallcookies 
    {
        cursor: pointer;
    }
   
   
   .naMsgBox
   {
       margin-top: 6px;
       padding: 10px;   
       color: #555;    
   }
   
   .borderRtBt
   {
        border-right: solid silver 1px;
        border-bottom: solid silver 1px;   
   }
   
   .pointer
   {
       cursor:pointer;
   }            
   
   
   
   
   
   .actionarea
   {
       display:none;
       margin-top: 20px;       
   }
   .actionarea.installedNo
   {
       display:block;
   }
   







    .trackingstats
    {
        font-size: 16px;
        line-height: 18px;
    }    
    .trackingstats .statsection
    {
        position:relative;
        border-top: solid #bbb 1px;
        padding-top: 20px;
        margin-top: 20px;
        
        margin-right: 0px;
        padding-left: 10px;
        padding-right: 10px;
        
    }
    .statsection .spinstat 
    {
        position: absolute;
        left: 110px;
        top: 60px;
    }
    .statsection.money
    {
        position:relative;
        opacity: 0.1;
    }
    .statsection.pieblock
    {
        opacity: 0.1;
    }
    
    .trackingstats .statsection:first-child
    {
        border-top: none;
        padding-top: 0px;
        margin-top: 0px;
    }
    .trackingstats .side
    {
        float:left;
    }  
    .trackingstats .side.leftside
    {
        float:left;
        width:80px;
    } 
    .trackingstats .pieblock .side.leftside
    {
        width:90px;
        padding-top: 8px;
    } 
    .trackingstats .side.rightside
    {
        float:right;
        width:80px;
    }    
    .trackingstats .sidecenter
    {
        margin:auto;
        width: 200px;
    }         
    .facebook .trackingstats .pieblock .sidecenter
    {
        width: 170px;
    }
    .google .trackingstats .pieblock .sidecenter
    {
        width: 170px;
    }
    
    .trackingstats h6
    {
        font-size: 24px;
        margin-bottom: 10px;
        line-height: 24px;
        text-align: center;  
    }    
    .trackingstats .amount
    {
        font-size: 40px;
        font-weight: bold;
        line-height: 40px;
        margin-right: 10px;
    }

    .trackingstats .launchbutton
    {
        font-size: 24px;
        margin: 0 0 0 0;
        padding: 7px;
        line-height: 24px;
        background-color: #D45955;
        
    }
    .section .launchbutton
    {
        background-color: #D45955;
    }
    .trackingstats .blurb
    {
        clear:both;
        padding-top: 10px;
    } 
    .trackingstats .estimate
    {
        font-size: 12px;
    }
    
    
    
    
    
    .trackingstats .statsection.graph
    {
    }
    .trackingstats .statsection.graph h6
    {
        font-size: 22px;
        float: left;
        width: 140px;
        text-align: left;
    }
    .trackingstats .statsection.graph h6 span
    {
        font-size: 28px;
        font-weight: bold;
        letter-spacing: 1px;
    }    
    .trackingstats .statsection.graph .item
    {
        clear: both;
        padding: 8px 0px 8px 35px;
        font-size: 18px;
        line-height: 16px;
        background: url(/images/Start/bang-orange-fill-32.png) no-repeat left;
        cursor:pointer;
    }
    .trackingstats .statsection.graph .item.good
    {
        background: url(/images/Start/check-green-fill-32.png) no-repeat left;
    } 
    .trackingstats .statsection.graph .item .text
    {
        display:none;
    }
    .trackingstats .statsection.graph .item.good .text.good
    {
        display:block;
    }
    .trackingstats .statsection.graph .item.bad .text.bad
    {
        display:block;
    }    
    
    .trackingstats .statsection.graph .degree
    {
        float: right;
        padding: 10px;
        background-color: #FAA657;
        color: white;
        font-size: 30px;
        line-height: 30px;
        text-transform: uppercase;
    }  
    .trackingstats .statsection.graph .num
    {
        display:none;        
    }  
    
    .trackingstats .statsection.graph.high .degree
    {
        background-color:#FAA657;
    }
    .trackingstats .statsection.graph.high .num.high
    {        
        display:block;
    }
    .trackingstats .statsection.graph.low .degree
    {
        background-color:#7BA34A;
    }
    .trackingstats .statsection.graph.low .num.low
    {        
        display:block;
    }
        
        
    

        
        
    .section.misc 
    {
        display:none;
    }   
    
    
    .issueBtnBubble
    {
        width: 750px;
        background-color: white;
        text-align: left;
        font-size: 14px;
        line-height: 22px; 
        padding: 15px 10px;
        border: 0px solid #f2f9f1;
        font-family: "Roboto", sans-serif;
        font-size: 20px;
        line-height: 25px;
        font-weight: 300;
        color: black;
    }

    .issueBtnBubble img.toolbar_icon {
        width: 22px;
        height: 22px;
        margin-bottom: -3px;
    }

    .issueBtnBubble .fixed_by {
        display: none;
        float: right;
        width: 275px;
        padding-left: 20px;
        font-size: 13px;
        font-weight: 300;
        text-transform: uppercase;
        border-left: 1px solid #ddd;
    }
    .issueBtnBubble.family_fixed .fixed_by {
        display: block;
    }
    .issueBtnBubble.family_fixed .instruction {
        width: 435px;
        font-size: 16px;
        line-height: 19px;
        padding-right: 25px;
        padding-left: 5px;
    }
    .issueBtnBubble.family_fixed .fixed_by ul {
        width: 285px;
        height: 47px;
    }
    .issueBtnBubble.family_fixed .fixed_by ul li {
        display: block;
        float: left;
        margin-right: 10px;
    }
    .issueBtnBubble.family_fixed .fixed_by ul li:last-child {
        margin-right: 0px;
    }
    .issueBtnBubble.family_fixed .fixed_by ul li.remaining {
        width: 47px;
        height: 47px;
        background-color: #ddd;
        border-radius: 50px;
        line-height: 47px;
        margin-top: 0px;
        text-align: center;
        font-size: 15px;
        font-weight: 300;
    }
    .issueBtnBubble.family_fixed .fixed_by ul li img {
        border-radius: 50px;
    }
    
    .spinner
    {
        position: relative;
        left: 15px;
        bottom: -6px; 
    }
    
    .canvasloader
    {
        position: absolute;
        left: -25px;
        top: 27px;
        z-index: 10000;
        height: 16px;
        width: 16px;
    }
    
    .videoPanel
    {
        margin:10px 0 10px 0;        	   	
    }
    .videoPanel video 
    {
        border:1px solid #CCCCCC;  
        width: 530;   
    }
     
     
    .confirmbox 
    {
        display:none;
        position: absolute;
        top: 0px;
        left: 100px;
        background-color:#265D90;
        color:White;   
        font-size: 20px;
        line-height: 24px;
        z-index: 65000;
        width: 450px;
        padding: 20px;
    } 
    .confirmbox h2
    {
        float:none;
        margin:  0px 0px 20px 0px;
        padding: 0px;
        font-size: 24px;
        line-height: 28px;
        font-weight:bold;
        color:White;
    }
    .confirmbox h3
    {
        float:none;
        margin: 10px 0px 0px 0px;
        padding: 0px;
        font-size: 20px;
        line-height: 24px;
        font-weight:bold;
        color:White;
    }
    .confirmbox .special
    {
        font-style:italic;
    }
    .confirmbox .text 
    {
        margin: 10px 0px 0px 0px;
        font-size: 18px;
        line-height: 22px;
    }
    .confirmbox .launchbutton 
    {
        float:left;
        width: 180px;
        margin: 20px 0px 10px 25px;
        
    }
    
    
    .sectionprogress 
    {
        float: left;
        width: 500px;
        margin-left: 20px;

    }
    .sectionprogress .loginmsg
    {
        display:none;        
        font-size: 20px;
        margin-left: 10px;
        margin-top:4px;
        float:left;
    }
    .sectionprogress .loginmsg .text
    {
        float: left;
        font-size: 18px;
        line-height: 28px;
        margin-left: 10px;
    }    
    .sectionprogress .loginmsg .loginbtn
    {
        float: left;
        background-color: #D45955;
        color: White;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
        line-height: 30px;
        text-align: center;
        border-radius: 5px;
        padding: 0 5px;
        
    }
    .sectionspinner
    {
        position: absolute;
        left: -20px;
        top: 3px; 
    }

                
    
    #googleProfileBlockedInSearch 
    {
        display:none;
    }    
    #trackingBlockedOffOfGoogle
    {
        display:none;
    }



        .btnHelp
    {
        float: right;
        padding: 0px;
        width: 200px;
        font-size: 18px;
        line-height: 18px;
        font-weight: normal;
        text-align: right;
        cursor: pointer;
        margin-top: 8px;
    }   
    .appbubble 
    {
        text-align:left;
        
        padding: 7px 10px 1px 10px;
    }
    .appbubble h4
    {
        float:none;
        font-size: 22px;
        font-weight: 300;
        color: #393939;
        margin-bottom: 0px;
        font-family: "Roboto", sans-serif;
    }
    .appbubble ul
    {
        margin: 10px 0 0 0;
    }
    .appbubble ul li
    {
        list-style: none;
        font-size: 16px;
        line-height: 22px;
        padding-left: 40px;
        height: 35px;
        text-transform: uppercase;
        font-size: 13px;
        color: #000000;
    }
    .appbubble ul li.is0
    {
        background: url(/images/avgprivacyfix/check_mark.png) no-repeat top left;
        background-size: 25px 25px;
    }
    .appbubble ul li.is1
    {
        background: url(/images/avgprivacyfix/explanation_point_orange.png) no-repeat top left;
        background-size: 25px 25px;
    }
    .appbubble ul.tracker
    {
        margin: 10px 0 10px 0;
        padding: 0px;
    }
    .appbubble ul.tracker li
    {
        height: auto;
        padding-left: 20px;
        line-height: 20px;
    }
    .appbubble .rating
    {
        text-align: right;
        margin: 10px 0px 5px 0px;
        font-size: 13px;
        font-family: "Roboto", sans-serif;
        font-weight: 300;
    }
    .appbubble .rating strong
    {
        font-weight: 400;
    }
    .removedAppsBubble 
    {
        display:none;
    }
    .removedAppsBubble.bubble
    {
        
    }
    
    .facebookEmailBubble 
    {
        display:none;
    }

    /* --------------------------------------------------------------------------------------------------- */
    #modal {
        z-index: 65009;
        position: fixed;
        display: table;
        height: 100%;
        width: 100%;
        font-family: "Roboto", sans-serif;

        display: none;
    }
    #modal .gutter {
        display: table-cell;
        vertical-align: middle;
    }
    #modal .gutter #modal_interior {
        margin: 0px auto;
        width: 1120px;
        overflow: auto;
        padding: 40px;
        background-color: white;
        position: relative;
        opacity: 0;
        -webkit-transition: opacity .5s linear;
        -moz-transition: opacity .5s linear;
        transition: opacity .5s linear;
    }
    #modal .gutter #modal_interior #modal_close_link {
        cursor: pointer;
        position: absolute;
        right: 20px;
        top: 10px;
        font-size: 35px;
        color: #1a1a1a;
    }

    #modal h1 {
        color: #3ab24e;
        font-weight: 300;
        font-size: 41px;
        line-height: 50px;
    }
    #modal p {
        margin: 0px;
        padding: 0px;
        font-size: 16px;
        line-height: 23px;
        color: #1a1a1a;
        font-weight: 300;
    }
    #modal p em {
        font-style: italic;
    }


    #modal hr {
        margin: 40px 0px;
        border-top: 1px solid #bababa;
        border-bottom: 0px none transparent;
        border-right: 0px none transparent;
        border-left: 0px none transparent;
    }
    #modal ul.columns {
        margin: 0px;
        padding: 0px;
        list-style-type: none;
    }
    #modal ul.columns li {
        margin: 0px;
        padding: 0px 63px 0px 0px;
        list-style: none;
        width: 305px;
        float: left;
    }
    #modal ul.columns li h2 {
        font-size: 24px;
        font-weight: 100;
        color: #1a1a1a;
        margin-bottom: 20px;
    }
    
    #modal ul.columns li a {
        font-weight: 400;
        color: #1a1a1a;
        text-decoration: underline;
    }

    #modal .help h1 {
        position: absolute;
        left: 0px;
        top: 0px;
        width: 310px;
        padding-right: 63px;
    }
    #modal .help .top_part {
        position: relative;
        padding-left: 368px;
        padding-right: 100px;
        font-size: 26px;
        line-height: 35px;
        font-weight: 100;
        color: #1a1a1a;
        height: 160px;
    }
    #modal .help .top_part.foreign {
        height: 200px;
        padding-left: 468px;
    }
    #modal .help .top_part.foreign h1 {
        width: 400px;
    }

    #modal .email_bubble {
        padding-top: 50px;
    }
    #modal .email_bubble h1 {
        position: absolute;
        left: 40px;
        top: 30px;
    }
    #modal .email_bubble p {
        font-size: 16px;
        line-height: 26px;
    }
    #modal .email_bubble .check_all {
        display: inline-block;
        height: 26px;
        line-height: 26px;
        border-top: 1px solid black;
        border-left: 1px solid black;
        border-right: 1px solid black;
        padding: 0px 15px 0px 5px;
        margin: 20px 0px 0px 25px;
        font-family: "Roboto", sans-serif;
        cursor: pointer;
    }
    #modal .email_bubble .check_all label {
        cursor: pointer;
    }
    #modal .email_bubble .check_all:hover {
        background: #eee;
    }
    #modal .email_bubble .check_all input {
        width: 20px;
        margin-right: 5px;
    }
    #modal .email_bubble ul {
        margin: 0px 0px 10px 0px;
        border: 1px solid black;
        padding: 40px 30px 30px 30px;
    }
    #modal .email_bubble ul li {
        font-family: "Roboto", sans-serif;
        color: #1c1c1c;
        float: left;
        width: 325px;
        margin: 0px 20px 10px 0px;
    }
    #modal .email_bubble ul li input {
        width: 20px;
        margin-right: 5px;
        padding: 0px;
    }
    #modal .email_bubble ul li label {
        cursor: pointer;
        margin: 0px;
        padding: 0px;
        display: inline-block;
        width: 295px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    #modal .email_bubble p.buttonblurb {
        font-weight: bold;
        margin-bottom: 20px;
    }   
    #modal .email_bubble .removalrequest {
        background: #36b34b;
        width: 350px;
        height: 55px;
        line-height: 55px;
        text-align: center;
        cursor: pointer;
        text-transform: uppercase;
        color: white;
        font-family: "Roboto", sans-serif;
        font-size: 15px;
        font-weight: 300;
        float: right;
        border-radius: 5px;
    }
    #modal .email_bubble .btnAllow, #modal .widget_box .btnAllow, #modal .tracking_bubble .btnAllow {
        float: right;
        margin-right: 20px;
        font-family: "Roboto", sans-serif;
        font-size: 16px;
        color: #555555;
        cursor: pointer;
        line-height: 55px;
        font-weight: 100;
    }
    #modal .email_bubble .btnAllow:hover {
        color: black;
    }

    #modal .widget_box h1 {
        
    }
    #modal .widget_box .actuallyBlock, #modal .widget_box .darnItAll {
        background: #36b34b;
        width: 150px;
        height: 55px;
        line-height: 55px;
        text-align: center;
        cursor: pointer;
        text-transform: uppercase;
        color: white;
        font-family: "Roboto", sans-serif;
        font-size: 15px;
        font-weight: bold;
        float: right;
    }
    #modal .widget_box .action_buttons, #modal .tracking_bubble .action_buttons {
        margin-top: 20px;
    }
    #modal .widget_box.alerts h1 {
        position: absolute;
        left: 40px;
        top: 50px;
        width: 200px;
        font-size: 36px;
        line-height: 42px;
    }
    #modal .widget_box.alerts p {
        padding-left: 250px;
        font-size: 24px;
        line-height: 32px;
        font-weight: 300;
        min-height: 140px;
    }
    #modal .widget_box.alerts .actuallyBlock {
        width: 350px;
    }
    #modal .widget_box.alerts div.understanding {
        position: absolute;
        left: 492px;
        bottom: 343px;
        width: 667px;
        font-size: 24px;
        font-weight: 100;
        text-align: center;
    }
    #modal .widget_box.alerts div.ratings_disclosure {
        position: absolute;
        left: 40px;
        bottom: 40px;
        width: 550px;
        font-family: "Roboto";
        font-size: 14px;
        font-weight: 300;
        color: #666;
        line-height: 18px;
    }
    #modal .widget_box img.arrow {
        position: absolute;
        bottom: 235px;
        left: 433px;
    }
    #modal .widget_box.alerts ul.tutorial {
        height: 230px;
        padding-left: 480px;
        background: url(/images/avgprivacyfix/alerts/browser-sample.png) left top no-repeat;
        padding-bottom: 20px;
    }
    #modal .widget_box.alerts ul.tutorial li {
        display: inline-block;
        margin-top: 45px;
        padding: 0px 25px;
        width: 160px;
        border-right: 1px solid #bababa;
        text-align: center;
        font-weight: 400;
        font-size: 18px;
        line-height: 23px;
    }
    #modal .widget_box.alerts ul.tutorial li.first {
        width: 180px;
        padding: 0px 15px;
    }
    #modal .widget_box.alerts ul.tutorial li img {
        display: block;
        margin: 0px auto;
        margin-bottom: 20px;
    }
    #modal .widget_box.alerts ul.tutorial li.last {
        border-right: 0px none transparent;
    }

    #modal .tracking_bubble p {
        margin-top: 5px;
    }
    #modal .tracking_bubble span {
        font-weight: 300;
    }

    #modal .tracking_bubble .actually_block, #modal .tracking_bubble .drat {
        background: #36b34b;
        width: 300px;
        height: 55px;
        line-height: 55px;
        text-align: center;
        cursor: pointer;
        text-transform: uppercase;
        color: white;
        font-family: "Roboto", sans-serif;
        font-size: 15px;
        font-weight: bold;
        float: right;
    }

</style>

<style>    

    @-moz-document url-prefix() {
        
       
    }
    
    
</style>
<!--[if IE 8]>
    <style type="text/css">
        body {
            filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(
            src='/images/avgprivacyfix/background.png',
            sizingMethod='scale');

            -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(
            src='/images/avgprivacyfix/background.png',
            sizingMethod='scale')";
        }
        .section .row .rowlabel {
            background: #555659; 
        }
        .login_prompt {
            border-top: 1px solid #747579;
            background: #555659;
        }
        .infoarea .stats_area .facebook_worth .details > div {
            visibility: hidden;
        }
        .infoarea .stats_area .facebook_worth .details > div.arrow {
            visibility: hidden;
        }
        .infoarea .stats_area .facebook_worth .details.activity .arrow {
            visibility: visible;
        }
        .infoarea .stats_area .facebook_worth .details.profile .arrow {
            visibility: visible;
        }
        .infoarea .stats_area .facebook_worth .details.location .arrow {
            visibility: visible;
        }
        .infoarea .stats_area .facebook_worth .details.activity > div.activity {
            visibility: visible;
        }
        .infoarea .stats_area .facebook_worth .details.profile > div.profile {
            visibility: visible;
        }
        .infoarea .stats_area .facebook_worth .details.location > div.location {
            visibility: visible;
        }
        .box.isfalse .icon
        {                
            background: url(/images/avgprivacyfix/icon-lock-lowdpi.png) no-repeat bottom left;
        }
        .box.isfalse:hover .icon, .box.isfalse.hover .icon
        {                
            background: url(/images/avgprivacyfix/icon-lock-lowdpi_hover.png) no-repeat bottom left;
        }
        .box.istrue .icon
        {
            background: url(/images/avgprivacyfix/explanation_point_orange_lowdpi.png) no-repeat bottom left;
        }
        .box.istrue:hover .icon, .box.istrue.hover .icon
        {                
            background: url(/images/avgprivacyfix/explanation_point_hover_lowdpi.png) no-repeat bottom left;
        }
        .box.isundefined .icon
        {                
            background: url(/images/avgprivacyfix/question_mark_lowdpi.png) no-repeat bottom left;
        }
        .box.isundefined:hover .icon, .box.isundefined.hover .icon
        {                
            background: url(/images/avgprivacyfix/question_mark_hover_lowdpi.png) no-repeat bottom left;
        }
        .box.isallowed .icon
        {                
            background: url(/images/avgprivacyfix/icon_graybang_lowdpi.png) no-repeat bottom left;
        }
        .box.isallowed:hover .icon
        {
            background: url(/images/avgprivacyfix/explanation_point_hover_lowdpi.png) no-repeat bottom left;
        }
        .appbubble ul li.is1
        {
            background: url(/images/avgprivacyfix/explanation_point_orange_lowdpi_small.png) no-repeat top left;
        }
        div.sharea .gutter {
            font-size: 36px;
        }
        .infoarea.publisher h4 {
            background: url(/images/avgprivacyfix/protected_lowdpi.png) left 6px no-repeat;
        }
        .infoarea hr {
            border-top: 1px solid #ddd;
        }
        .iconbox .icons {
            background-color: #2e2e32;
        }
    </style>
<![endif]-->
<script type="text/javascript">

if (!Function.prototype.bind) {
  Function.prototype.bind = function (oThis) {
    if (typeof this !== "function") {
      // closest thing possible to the ECMAScript 5 internal IsCallable function
      throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
    }

    var aArgs = Array.prototype.slice.call(arguments, 1), 
        fToBind = this, 
        fNOP = function () {},
        fBound = function () {
          return fToBind.apply(this instanceof fNOP && oThis
                                 ? this
                                 : oThis,
                               aArgs.concat(Array.prototype.slice.call(arguments)));
        };

    fNOP.prototype = this.prototype;
    fBound.prototype = new fNOP();

    return fBound;
  };
}

var modal = {

    trigger: function(el)
    {
        $('#dimlights').fadeIn(500);
        $('#modal').css('display', 'table');
        $('#modal_interior').html(el.html() + '<div id="modal_close_link">&times;</div>');
        window.setTimeout(function() {
            $('#modal_interior').css('opacity', 1);
        }, 50);
        $('#modal_close_link').unbind();
        $('#modal_close_link').click(this.hide.bind(this));

        var window_height   = $(window).height();
        var content_height  = $('#modal_interior')[0].scrollHeight;
        var padding         = 80;

        console.log('window height: ', window_height, '; content_height: ', content_height);

        if (content_height > window_height)
            $('#modal_interior').css('height', (window_height - padding)+'px');
        else
            $('#modal_interior').css('height', 'auto');
    },

    hide: function()
    {
        $('#modal_interior').css('opacity', 0);
        $('#dimlights').fadeOut(500, function() {
            $('#modal').css('display', 'none');
        });
    }
}

$(document).ready(function () {
    $('#modal .gutter').click(function(e) { 
        if (e.target != this)
            return;
        
        modal.hide();
    });
});

    
</script>

        <style type="text/css">
            body {
                -webkit-touch-callout: none;
                -webkit-user-select: none;
                -khtml-user-select: none;
                -moz-user-select: -moz-none;
                -ms-user-select: none;
                user-select: none;

                cursor: default;
            }
        </style>

        <!-- Header Code PRODUCTION -->
        <script src="//assets.adobedtm.com/cb442236e8fbb669a07de6df8af5f191b2203455/satelliteLib-901e205d824026ee55f0c4bc626aa4656813f23e.js"></script>
    
    </head>

    <body>

<div id="dimlights" style="display:none; z-index: 65005; background-color:Black; position: fixed; height: 100%; width: 100%;  opacity: .7;" ></div>
<div id="modal">
    <div class="gutter">
        <div id="modal_interior">
        
        </div>
    </div>
</div>


<div class="header">
    <div class="gutter">
        <a href="/start"><img src="/images/avgprivacyfix/privacyfix_logo.png" width="290" height="44" /></a>
        <ul>                                                         
            <li><a target="_blank" href="/start/faq" target='_blank'>FAQ</a></li>   
            <li><a target="_blank" href="/start/privacy" target="_blank">Privacy Policy</a></li>
            <li>
                <a target="_blank" class="top_facebook" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fprivacyfix.com%2Fstart"><img src="/images/avgprivacyfix/facebook.png" width="40" height="40"/></a>

                <a target="_blank" class="top_twitter" href="https://twitter.com/intent/tweet?source=webclient&amp;text=I just used Privacyfix to lock down my privacy and get ready for Facebook Graph Search. http://www.privacyfix.com"><img src="/images/avgprivacyfix/twitter.png" width="40" height="40"/></a>
                <a target="_blank" class="top_email" href="/start/mailtoPF?addrs=&amp;subject=Lock down your privacy settings with PrivacyFix&amp;msg=Lock down your online privacy settings on Facebook, Google, LinkedIn, and more with AVG PrivacyFix. It's simple and free. https://www.privacyfix.com"><img src="/images/avgprivacyfix/email.png" width="40" height="40"/></a>

            </li>
        </ul>
    </div>
</div>


        <div class="content">
            <script type="text/javascript">

    var browser = 'Unknown';
    var expected_version = ['5.0.1','5.0.2','5.0.3','5.0.4','5.0.5','5.0.6','5.0.7','5.0.8','5.0.9','5.0.10','5.0.11'];
    


    var callbacks = {};
    var verbose = false;

    function _msgContent(meta) {
        try {
            var element = document.createElement("PrivacyScoreDataElement");
            document.documentElement.appendChild(element);
            for (var attr in meta) {
                element.setAttribute(attr, meta[attr]);
            }
            var evt = document.createEvent("Events");
            evt.initEvent("EventPolicyTurkContent", true, false);
            element.dispatchEvent(evt);
            element.parentNode.removeChild(element);
        } catch(err) {
        }
    }

    // If browser is NOT Internet exploder
    if ((/MSIE/.test(navigator.userAgent) == false && (!(window.ActiveXObject) && "ActiveXObject" in window) == false) || typeof window.opera != "undefined")
    {
        window.addonCall = function(eventname, data, callback) {
        
            if( verbose ) {
                console.log('ADDON CALL: ' + eventname);
            }

            var meta = new Object();
            meta.eventname = eventname;
            meta.eventid = createid();
            meta.verbose = verbose;
        
            if (data != undefined) { meta.data = JSON.stringify(data); }

            if (callback != undefined) {
                callbacks[meta.eventid] = callback;
            }
        
            _msgContent(meta);
        }
    
    }
    
    $(document).ready(function () {

        try
        {
            document.addEventListener('EventPolicyTurkPage', function (e) {
                var response = JSON.parse(e.target.getAttribute('data'));
                //console.log('HEARD in PRIVACYFIX PAGE: ' + response.eventname);
                //console.log(response);
                if (callbacks[response.eventid] != undefined) {
                    var fn = callbacks[response.eventid];
                    fn(response);
                } else {
                    //console.log('No callback function.');
                }
            });



            document.addEventListener('PrivacyfixRefresh', function (e) {

                //console.log('HEARD NOTIFICATION FROM EXTENSION: PrivacyfixRefresh');
                //refresh();

            });

            document.addEventListener('PrivacyfixReload', function (e) {

                //console.log('HEARD NOTIFICATION FROM EXTENSION: PrivacyfixReload');
                

            });
        } catch(err) {
        }

    });  


    function getLSO(callback){
        
        addonCall('getLSO', {}, function (response) {        
            callback(response.data.lso);                                    
        });

    }

    function setEntireLSO(lso, callback){

        addonCall('setLSO', {lso:lso}, function (response) { 

            callback(response.data.lso);
        });
    }

    function setLSO(key, value, callback){

        addonCall('getLSO', {key:key}, function (response) { 
        
            var lso = response.data.lso;
            lso[response.requestecho.key] = value;

            addonCall('setLSO', {lso:lso, key:response.requestecho.key}, function (iresponse) { 

                if( iresponse.data.lso[iresponse.requestecho.key] != value ) {

                    //console.log('ERROR: lso not set properly');
                }

                callback(iresponse.data.lso, iresponse.requestecho.key);

            });
                                    
        });

    }
    

    function createid() {
        // http://www.ietf.org/rfc/rfc4122.txt
        var s = [];
        var hexDigits = "0123456789abcdef";
        for (var i = 0; i < 36; i++) {
            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
        }
        s[14] = "4";  // bits 12-15 of the time_hi_and_version field to 0010
        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01
        s[8] = s[13] = s[18] = s[23] = "-";

        var uuid = s.join("");
        return uuid;
    }
          

   

    function _callold(attrs) {

        var element = document.createElement("PrivacyScoreDataElement");
        document.documentElement.appendChild(element);

        for (var attr in attrs) {
            element.setAttribute(attr, attrs[attr]);
        }

        element.setAttribute("guid", generateGUID());

        var evt = document.createEvent("Events");
        evt.initEvent("PrivacyScoreExtensionEvent", true, false);
        element.dispatchEvent(evt);
        element.parentNode.removeChild(element)
    }



</script>

<script type="text/javascript">

  
    var theLanguageJson = {};    

    function getLanguage() {

        $.ajax({
            type: "GET",
            //url: '/start/language?name=app.json',
            //url: '/language/en/master.json',
            url: '/start/masterLanguage?raw=true',
            dataType: "json",
            async: false,
            success: function (data) {

                theLanguageJson = data;
                
            },
            error: function (e, xhr) {
                Analytics.track('loadfail', 'getLanguage');
            }
        });

        return theLanguageJson;

    }


    //=================================== RENDER SECTION ========================================================

    function renderAllSections(thedata) {
        injectTemplate('sectTracking', thedata);
        injectTemplate('sectGoogle', thedata);
        injectTemplate('sectTwitter', thedata);
        injectTemplate('sectFacebook', thedata);
        injectTemplate('sectLinkedin', thedata);
        
        
        // injectTemplate('sectPublisher', thedata);
    }

    function injectTemplate(template, thedata)
    {
        var block = applyTemplate(template, thedata);

        $('#wrap').append(block);
    }



    



    //=========================== Template application ===========================================================================

    function applyArrayOfTemplates(templateName, datalist, require_field) {

        var fulltemplates = '';
        for (var k = 0; k < datalist.length; k++ ) {
            datalist[k].list_id = k;
            // alert(JSON.stringify(datalist[k]));
            if (!require_field || datalist[k][require_field])
            {
                fulltemplates = fulltemplates + applyTemplate(templateName, datalist[k], true);
            }
        }
        return fulltemplates;

    }

    function applyTemplate(templateName, data, do_array) {

        do_array || (do_array = false);

        var template        = givemetemplate(templateName);
        // console.log('template: ', {template: template}, '; data: ', data);
        var btn_language    = {};
        var global_language = {};

        if (template) {

            var rootname = '';

            var do_apply = function(template, data, rootname)
            {
                // console.log('rootname: ', rootname);

                for (var k in data) {
                    if (data.hasOwnProperty(k)) {
                        if ($.isPlainObject(data[k]))
                        {
                            template = do_apply(template, data[k], rootname + (rootname ? '.'+k : k));
                        }
                        // JL NOTE ~ ignore arrays
                        else if (do_array && $.isArray(data[k]))
                        {
                            var inner = '';
                            for (var i = 0; i < data[k].length; i++) {
                                var obj = data[k][i];
                                inner = inner + applyTemplate(k, obj) + '';
                            }
                            // console.log('    replacing arr: ', '{' + rootname + (rootname ? '\.'+k : k) + '}')
                            template = template.replace(new RegExp('{' + rootname + (rootname ? '\.'+k : k) + '}', 'g'), inner + '');
                        }
                        else if (!$.isArray(data[k]))
                        {
                            template = template.replace(new RegExp('{' + rootname + (rootname ? '\.'+k : k) + '}', 'g'), data[k] + '');
                        }
                    }
                }
                return template;
            }
            template = do_apply(template, data, rootname);
        } else
            template = '';

        return template;
    }

    function spanreplace(needle, haystack, value) {
        return haystack.replace('{' + needle + '}', '<span>' + value + '</span>');
    }

    var templateCache = new Array();

    function givemetemplate(templatename) {

        var thetemplate;

        if (templateCache[templatename]) {
            return templateCache[templatename];
        } else {

            if ($('#_t_'+templatename).length > 0)
            {
                thetemplate = $('#_t_'+templatename).html();
                
            }
            else
            {
                $.ajax({
                    type: "GET",
                    url: '/start/template?name=' + templatename,
                    async: false
                }).done(function (template) {
                    alert('template not pre-loaded: '+ templatename + '; consider preloading for performance, and so this message doesn\'t pop up.');
                    thetemplate = template;
                });

            }

            templateCache[templatename] = thetemplate;

            return thetemplate;
        }
    }

</script>
<script type="text/javascript">
    var DEBUG_CACHE_PAGES = false;   // JL DEBUG ~

    if (window.location.hash.indexOf("DEBUG") != -1)
    {
        DEBUG_CACHE_PAGES = true;
    }

    var debugrate = 100;
    var debug = true;
    var actual_version = '';
    var isFocused = true;
    var slider;
    var installed = false;
    var lsoglobal = {};
    var thelanguage = 'en';  

    var langcode = 'en';

    var region = 'USA';
    var is_eu_langcode = function(l) { return (l.indexOf('de') != -1 || l.indexOf('es_EU') != -1 || l.indexOf('fr') != -1 || l.indexOf('cs') != -1); }
    if (is_eu_langcode(langcode))
        region = 'EU';
    
    var refreshcount = 0; 
    var shareseen = false;     

    var facebookIssueClicks = 0;
    var facebookAccessToken = '';
    
    var firstrun = 0;
    var anonkey = '';

    var facebook_value = false;

    var seen_fixes = [];
    var _ie_is_admin = false;

    var protection_factors = {
        "fbSearch": {weight: 20, goodvalue: false},      // fbSearch
        "fbTagReview": {weight: 10, goodvalue: false},                // fbTagReview
        "fbSharing": {weight: 15, goodvalue: true},              // fbSharing
        "fbActivityLog": {weight: 15, goodvalue: true},               // fbActivityLog
        /* "instantPersonalization": {weight: 15, goodvalue: false},   // fbInstantPersonalization */
        "fbAppCount": {weight: 10, goodvalue: false},                  // fbAppCount
        "fbAppAccess": {weight: 15, goodvalue: false},         // fbAppAccess
        "family": {weight: 15, goodvalue: false},
    }

    $(document).ready(function () {

        setInterval(checkCompletionStatus, 1000);

        $(window).scroll(function () {
            if ( $(this).scrollTop() > 87 )
            {
                $('.completion').addClass('fixed');
            }
            else
            {
                $('.completion').removeClass('fixed');
            }
        });

        var rand = (Math.floor(Math.random() * 100));
		if( debugrate <= rand ){          
			debug = false;
		}

        Analytics.track('load', 'pageload', document.referrer);

        $(window).focus(function() {
            if(isFocused){
                return; 
            } else {
                isFocused = true;
                do_refresh();
            }
        });

        $(window).blur(function() {   
            isFocused = false;
        });


        if (DEBUG_CACHE_PAGES)
        {
            $('#reset_seen_state').show();
            $('#reset_seen_state').click(function() {
                if (!facebookuser.userid)
                {
                    alert('Could not find your Facebook User ID. Are you logged in?? lol')
                    return false; 
                }
                remove_account()
            });

            $('#clear_cache').show();
            $('#clear_cache').click(function() {
                addonCall('clearPageCache', {}, function (response) {
                    alert('CLEARED! ('+response.data.cleared+')');
                });
            });
        }

        doesAddonExist(
            {
                yes: function(response) {

                    $('.completion').show();
                    
                    // If Internet explorer, check the UAC bit
                    if (typeof window.isAVGPrivacyFixIE != "undefined" && window.isAVGPrivacyFixIE())
                    {
                        addonCall('testAdminState', {}, function (response) {                                 
                            if (response.data.runstate.toString() == "true")
                            {
                                _ie_is_admin = true;
                            }
                        });
                    }
                
                    if( response.data.lso.anonkey != undefined ){
                        anonkey = response.data.lso.anonkey;
                    }            
                
                    if(response.data.lso.lastRunDate == undefined){
                        firstrun = 1;
                    }

                    /*
                    if (firstrun && response.data.lso.permit_bubble != "active")
                    {
                        modal.trigger($('#privacyfix_alerts_modal'));
                        $('#modal_close_link').click(function() {
                            Analytics.track("click", "healthBarPromptDismiss");
                        });
                        $('#modal_dismiss_alerts').click(function() {
                            Analytics.track("click", "healthBarPromptDismiss");
                            modal.hide();
                        });
                        $('#modal_enable_alerts').click(function() {
                            thearray["healthBar"].enable_alerts();
                            modal.hide();
                        });
                    }
                    */

                    if (window.location.toString().indexOf("#welcome") != -1)
                    {
                        Analytics.track('tutorial', 'skipped', anonkey);
                    }
                    addonCall('getVersion', {}, function (iresponse) {
                        actual_version = iresponse.data.version;            
                        onAddonDetected();
                    });
                },
                nope: function(count)
                {
                    Analytics.track('load', 'notinstalled');

                    $('.homecontent .bx-wrapper').hide();

                    window.location.replace('/start/install');

                    $('.homecontent .bx-wrapper').hide();

                    if ($('.thebutton.install').hasClass('disabled')) {
                        $('.thebutton.install').removeClass('disabled');               
                    }
                }
            }
        );

    });

    function doesAddonExist(options, count)
    {
        options || (options = {});
        options.yes || (options.yes = function() {});
        options.nope || (options.nope = function() {});
        count || (count = 1);

        if (count == 10)
            return options.nope(count);

        var heard_back_from_addon = 0;


        if (window.addonCall)
        {
            addonCall('getLSO', {}, function (response)
            {
                if (heard_back_from_addon == -1)
                    return;

                heard_back_from_addon = 1;
                options.yes(response);
            });
        }

        setTimeout(function()
        {
            if (heard_back_from_addon == 1)
                return;

            heard_back_from_addon = -1;
            doesAddonExist(options, (count + 1));
        }, 50);
    }

    function onAddonDetected(){

        Analytics.track('load', 'installed');

        if (getCookie('avguser') && getCookie('avguser') != 'installed')
        {
            Analytics.track('AVGUser', 'productInstallConversion', getCookie('avguser'));
            setCookie('avguser', 'installed', 365);
        }
            
        if( expected_version.toString().indexOf( actual_version ) != -1 ) { //Current version            

            Analytics.track('load', 'currentversion');

            $('.sharea').css('display', 'block');
            $('footer').css('display', 'block');

            thewholedeal();

        } else { // Needs Update - change button to update button
            
            // consolelog('expected_version:' + expected_version + '   actual_version:' + actual_version);
            Analytics.track('load', 'needsupdate');

            window.location.replace('/start/install?update_required=true');
        }               
           
    }


    function hideHomePage() {

    }
    function showHomePage(slidetime) {
        
        slidetime || (slidetime = 500);
    }

    function do_refresh() {

        refreshcount++;

        if( (!shareseen) & (installed) & (facebookIssueClicks >= 2) & (uidata.publisher != undefined) ){
            shareseen = true;
        }

        addonCall('getVersion', {}, function (response) {

            addonCall('getLSO', {}, function (lsoresponse) { 
                            
                if( actual_version == response.data.version ) { //version hasn't changed, just update the button

                    handle_facebook_api_calls(lsoresponse.data.lso);
                    updateTwitter();
                    updateGoogle(); 
                    updateLinkedin();
                } else {
                    actual_version = response.data.version; //fresh run, for install or update

                    flagForUpdate('twitter');
                    flagForUpdate('facebook');
                    flagForUpdate('google');
                    flagForUpdate('publisher');
                    flagForUpdate('tracking');
                    flagForUpdate('linkedin');
                    thewholedeal();
                }
            });

        });                           

    }

    function thewholedeal(){ 

        //try {

            $('#wrap').html('');
            getLanguage();
            renderAllSections(theLanguageJson);

            Analytics.track('load', 'languagerenderdone');

            bind_twitter_sidebar_events();

            addSectionSpinner('facebook');
            //showSectionProgress('google');
            addSectionSpinner('google');
            //showSectionProgress('publisher');
            addSectionSpinner('publisher');
            //showSectionProgress('tracking');
            addSectionSpinner('tracking'); 
            //showSectionProgress('linkedin');
            addSectionSpinner('linkedin');

            addSectionSpinner('twitter');

            if( ['en'].indexOf(thelanguage) == -1 ){ // if language not in list

                hideFix('youTubeHistory');
                hideFix('fbFacialRecognition');
            }

            if (window.navigator.userAgent.toLowerCase().indexOf('msie 8') != -1)
            {
                hideFix('family');
                hideFix('fbSharing');
            }

            if (typeof window.isAVGPrivacyFixIE != "undefined" && window.isAVGPrivacyFixIE())
            {
                hideFix('deleteCookies');
                $('#trackerListRow').hide();
            }

            $('#wrap').show(); //(1000, function(){
            
            hideHomePage();

            //updateUI();


            Analytics.track('load', 'updateUI');

            addonCall('getLSO', {}, function (response) { 

                // ======
                if( response.data.lso.permit_bubble == 'active' ){
                    Analytics.track('load', 'beginenabled');
                } else {
                    Analytics.track('load', 'begindisabled');
                }

                // setBtnState('#btnBubbleEnable', response.data.lso.permit_bubble);                                     

            
                $('.pagefooter').show();


                // =======

                handle_facebook_api_calls(response.data.lso);

               Analytics.track('load', 'thewholedealdone');
            });

            bindevents();
            bindBubbles();

            getBrowserData();


            setTimeout(function(){
                updateGoogle();     
            }, 1000);

            updateLinkedin();

            updateTracking();

            updateTwitter();

        //} catch (err) {
        //    Analytics.track('catch', 'thewholedeal', err.message);
        //}

    }

    function handle_facebook_api_calls(lso)
    {
        if (lso.allow_dashboard_facebook_scan)
        {
            if (typeof FB == "undefined")
                $.getScript(FB_JS_SDK_SCRIPT, function() { facebook_test_auth(); });
            else
                facebook_test_auth();
        }
        else
        {
            facebook_scan_disabled_or_not_connected()
        }
    }

    function facebook_test_auth()
    {
        FB_INIT();
        FB_TEST_AUTH({
            logged_in_callback: function(response) {
                get_facebook_api_data(response, false);
            },
            not_logged_in_callback: facebook_scan_disabled_or_not_connected,
            bad_perms_callback: function(response) {

                var unnecessary_permissions = [
                    'manage_friendlists',
                    'read_friendlists',
                    'user_relationships'
                ];
                for (var i = 0; i < response.missing_permissions.length; i++)
                {
                    var is_unnecessary = false;

                    for (var j = 0; j < unnecessary_permissions.length; j++)
                    {
                        if (response.missing_permissions[i] == unnecessary_permissions[j])
                        {
                            is_unnecessary = true;
                        }
                    }

                    if (is_unnecessary == false)
                    {
                        updateFacebook();
                        return false;
                    }
                }
                get_facebook_api_data(response, true);
            }
        });
    }

    function get_facebook_api_data(response, no_friendlist_permission)
    {
        facebookAccessToken = response.authResponse.accessToken;
        addonCall('setAllowDashboardFacebookScan', {state: true, auth_token: '123456789', is_new_connection: false }, function (response) {});

        updateFacebook();
    }

    function facebook_scan_disabled_or_not_connected()
    {
        facebook_logged_out();
    }
    

    function updateUI() {

        
    }    

    function flagForUpdate(groupname){

        for (var k in thearray) {
            if ( thearray[k].group == groupname ) {
                thearray[k].refresh = true;
            }
        }

    }

    function disableGroup(groupname){

        for (var k in thearray) {
            if ( thearray[k].group == groupname ) {
                thearray[k].enabled = false;
            }
        }
    }

    function isGroupLoggedIn(groupname){

        

    }

    function startButtonSpinners(groupname){

        var found = false;

        for (var k in thearray) {

            if ( (thearray[k].enabled) & (thearray[k].refresh) & (thearray[k].group == groupname)) {
                found = true;
                if (thearray[k].url() != '')
                {
                    addSpinner(k);
                }
            }
        }

        return found;
    }

    function refreshGroup(groupname){      
    
        var found = startButtonSpinners(groupname);

        if( !found ){
            hideSectionProgress(groupname);
            hideSectionPrompt(groupname);
            hideSectionProgress(groupname);  
            //showSectionContent(groupname);
            return;
        }

        


        for (var k in thearray) {

            if ( (thearray[k].enabled) & (thearray[k].refresh) & (thearray[k].group == groupname)) {

                found = true;

                if (thearray[k].url() != '')
                    addSpinner(k);

                sectionRefreshing(groupname);

                if( thearray[k].url != '' ){

                    /*
                    setTimeout( function(){ //timeout attempts to parse

                        if( thearray[k].refresh == true ) {

                            thearray[k].refresh = false;                            
                            hideSpinner(k);

                            sectionDone(groupname, function(){                                                             

                                hideSectionProgress(groupname);
                                //hideSectionPrompt(groupname);
                                //hideSectionProgress(groupname);  

                                
                                //if(  !$('.sectionbar.' + groupname + ' .expander').hasClass('clicked') ){
                                //    showSectionContent(groupname);                      
                                //}
                                

                            });                        

                        }
                
                    }, 3000 );
                    */

                    addonCall('getPage', { url: thearray[k].url(), key: k, cache_response: DEBUG_CACHE_PAGES }, function (iresponse) {

                        var page = thearray[iresponse.requestecho.key];                                
                        page.refresh = false;
                        lsoglobal = iresponse.data.lso;
                        page.parse(iresponse.data.page);
                        hideSpinner(iresponse.requestecho.key);
                    

                        sectionDone(groupname, function(){     
                        
                            hideSectionProgress(groupname);
                            hideSectionPrompt(groupname);
                            hideSectionProgress(groupname);  

                            if (groupname == 'facebook')
                            {
                                sync_protection_factors();
                                get_facebook_valuation();
                                get_facebook_family();
                            }
                            else if (groupname == 'twitter')
                            {
                                //get_twitter_valuation();
                                local_twitter_valuation();;
                            }
                            showSectionContent(groupname);

                            

                        });                    
                    });
                } 








            }

        }

        
            
    }

    var groupsRefreshing = [];

    function sectionRefreshing(groupname){
        
        groupsRefreshing[groupname] = true;        
    }

    function sectionDone(groupname, callback){

        if( groupsRefreshing[groupname] != true ){
            return;
        }else{        
            for (var k in thearray) {
                if ( (thearray[k].enabled) & (thearray[k].refresh) & (thearray[k].group == groupname)) {
                    return;
                }
            }
            groupsRefreshing[groupname] = false;

            callback();
            return;
        }
    }

    function updateLinkedin(){ 

        Analytics.track('load', 'updateLinkedin');

        //if ( ['en', 'de', 'it', 'pt', 'ru', 'es'].indexOf(thelanguage) == -1 ) {
        //    return;
        //}
    
        /*
        if( ($('.section.linkedin').is(":visible") == false) & ( $('.sectionprogress.linkedin .loginmsg').is(':visible') == true )  ){ 
            showSectionSpinner('linkedin');
            hideSectionPrompt('linkedin');
            showSectionProgress('linkedin'); 
        } else {
            
        }
        */
        startButtonSpinners('linkedin');
        
        addonCall('getPage', { url: linkedinuser.url, cache_response: DEBUG_CACHE_PAGES }, function (response) {

            parseLinkedinPage(response.data.page);  

            if( linkedinuser.loggedin == false ) {
            
                linkedin_logged_out();
                
            }else {
                Analytics.track('linkedin', 'logged_in');
                startButtonSpinners('linkedin');
                refreshGroup('linkedin'); 

            }

        });        

    }

    function updateTwitter(){ 

        Analytics.track('load', 'updateTwitter');

        //if ( ['en', 'de', 'it', 'pt', 'ru', 'es'].indexOf(thelanguage) == -1 ) {
        //    return;
        //}
    
        /*
        if( ($('.section.linkedin').is(":visible") == false) & ( $('.sectionprogress.linkedin .loginmsg').is(':visible') == true )  ){ 
            showSectionSpinner('linkedin');
            hideSectionPrompt('linkedin');
            showSectionProgress('linkedin'); 
        } else {
            
        }
        */
        startButtonSpinners('twitter');
        
        addonCall('getPage', { url: twitteruser.url, cache_response: DEBUG_CACHE_PAGES }, function (response) {

            parseTwitterPage(response.data.page);  

			if( twitteruser.loggedin == false ) {
            
                twitter_logged_out();
                
            }else {

                Analytics.track('twitter', 'logged_in');
                startButtonSpinners('twitter');
                refreshGroup('twitter'); 

            }

        });        

    }

    function updateGoogle(){ 

    /*
        if( ($('.section.google').is(":visible") == false) & ( $('.sectionprogress.google .loginmsg').is(':visible') == true )  ){
            showSectionSpinner('google');
            hideSectionPrompt('google');
            showSectionProgress('google'); 
        } else {
            
        }        
        */
        //addonCall('getPage', { url: googleuser.useridurl }, function (iresponse) { // get google Username
                         
                         /*
            googleuser.userid = '';
	        var regex = /(?:https:\/\/plus.google.com\/)(\d+)/g; 									
	        if(regex.test(iresponse.data.page)) {									
		        var matches = iresponse.data.page.match(regex);
		        var str = matches[0];
		        googleuser.userid = str.replace("https://plus.google.com/","");								  									  									
	        }
            

            if( (googleuser.userid == '') ){

                Analytics.track('google', 'logged_out');

                hideSectionContent('google');
                showSectionPrompt('google');
                hideSectionSpinner('google');
                showSectionProgress('google');

            } else {
                */                    

                startButtonSpinners('google');
                Analytics.track('google', 'logged_in');          

                refreshGroup('google');                        

            //}


       //});
            
    }



    function updateFacebook() { 

        Analytics.track('load', 'updateFacebook');
        showSectionProgress('facebook');
        hideSectionPrompt('facebook');
        
        /*
        if( ($('.section.facebook').is(":visible") == false) & ( $('.sectionprogress.facebook .loginmsg').is(':visible') == true ) ){
            showSectionSpinner('facebook');
            hideSectionPrompt('facebook');
            showSectionProgress('facebook'); 
        } else {
            
        }
        */
        startButtonSpinners('facebook');

        FB.api('/me', {}, function(response) {
            if (typeof response.name != "undefined") {
                facebookuser.userid = response.id;
                facebookuser.username = response.username;
                facebookuser.hash = CryptoJS.MD5(facebookuser.userid).toString(CryptoJS.enc.Hex);
                load_seen_fixes(facebookuser.hash);

                $('#facebook_avatar_pic').css('background', 'url(https://graph.facebook.com/v2.2/' + response.id + '/picture?width=110&height=110)');
                $('#facebook_avatar_pic').css('background-size', '110px 110px');
                $('#facebook_name').text(response.name);

                Analytics.track('facebook', 'logged_in');
                refreshGroup('facebook');  
            } else {
                facebook_logged_out();
            }
        });

        
        /*
        addonCall('getPage', { url: facebookuser.useridurl, cache_response: DEBUG_CACHE_PAGES }, function (fbresponse) { // get Facebook Userid

            parseFbUserIdPage(fbresponse.data.page);            

            addonCall('getPage', { url: facebookuser.usernameurl, cache_response: DEBUG_CACHE_PAGES }, function (iresponse) { // get Facebook Username
        
                parseFbUserName(iresponse.data.page);

                if( (facebookuser.userid != '') & (facebookuser.username == '') ) {
                    Analytics.track('scanfail', 'fb_username');
                }

                if( (facebookuser.userid == '') | (facebookuser.username == '') ){
 
                    facebook_logged_out();

                } else {
                             
                    Analytics.track('facebook', 'logged_in');
                    startButtonSpinners('facebook');
                    refreshGroup('facebook');                        
                    
                }


            });

        });
        */
    
    
    }

    function updateTracking()
    {
        thearray["setBlockTracking"].parse('lol');
    }

    function linkedin_logged_out()
    {
        Analytics.track('linkedin', 'logged_out');

        hideSectionContent('linkedin');
        showSectionPrompt('linkedin');
        hideSectionProgress('linkedin');
    }

    function twitter_logged_out()
    {
        Analytics.track('twitter', 'logged_out');

        hideSectionContent('twitter');
        showSectionPrompt('twitter');
        hideSectionProgress('twitter');
    }

    function facebook_logged_out()
    {
        Analytics.track('facebook', 'logged_out');

        hideSectionContent('facebook');
        showSectionPrompt('facebook');
        hideSectionProgress('facebook');
    }

    var hoverer = function(e)
    {
        var el = e.target.id.substr(9);
        fnBubbleHover.apply(document.getElementById(el));
    }
    var unhoverer = function(e)
    {
        var el = e.target.id.substr(9);
        fnBubbleUnHover.apply(document.getElementById(el));
    }
    var clickyclick = function(e)
    {
        if (!e.target.id)
            var el = e.target.parentNode.id.substr(9);
        else
            var el = e.target.id.substr(9);
        $('#'+el).trigger('click', true);
    }

    function sync_protection_factors()
    {
        var settings = [];

        for (var k in protection_factors)
        {
            // only look at protection factors that we're tracking via seenfixes
            //if (typeof thearray[k]['debugger_seen_key'] == "undefined" || typeof thearray[k]['debugger_seen_apply_to'] == "undefined")
            if (typeof thearray[k] == "undefined" || typeof thearray[k]['debugger_seen_key'] == "undefined")
                continue;

            var factor = thearray[k]['debugger_seen_key'];

            var factor_is_good = 1;
            if (thearray[k].state !== protection_factors[k].goodvalue)
            {
                var factor_is_good = 0;
            }

            settings.push({factor: factor, safe: factor_is_good});

        }
		if (facebookAccessToken) {
			$.ajax({
				type: "POST",
				url: '/HomeAPI/postSettings?_token='+facebookAccessToken+'&product=desktop&get_friend_factors=true',
				async: true,
				data: {
					settings: JSON.stringify(settings)
				},
				dataType: "json"
			}).done(function (data) {
				// load_protection_level(data);
				load_fixed_by_users(data);
			});
		}
    }

    function load_protection_level(data)
    {
        percent = data.safepercent;
        animate_facebook_percentage_text();

        $("#fb_protection_bar").css('width', percent + '%');

        $('.remaining_fixes').html('');

        for (var k in protection_factors)
        {
            if (thearray[k].state != protection_factors[k].goodvalue)
            {
                var li = document.createElement("li");
                var goodtext = $('#'+k+' .norm').html();
                li.innerHTML = '<span class="percentage">'+protection_factors[k].weight+'%</span><span class="fix">FIX &rsaquo;</span><span class="goodtext">'+goodtext+'</span>';
                li.id = 'fixmeplz_'+k;
                $('.remaining_fixes').append(li);
            }
        }
        $('.remaining_fixes li').each(function() {
            $(this).on('mouseenter', hoverer);
            $(this).on('mouseleave', unhoverer);
            $(this).on('click', clickyclick);
        });

        if ($('.remaining_fixes').html() == '')
            $('.get_100').hide();       
        else
            $('.get_100').show();
    }

    function load_fixed_by_users(data)
    {
        var factors = data.friend_factors;

        if (!factors)
            return false;

        for (var i = 0; i < factors.length; i++)
        {
            if (factors[i].user_ids.length == 0)
                continue;

            for (var j in thearray)
            {
                if (thearray[j].debugger_seen_key && thearray[j].debugger_seen_key == factors[i].factor)
                {
                    $('#'+j).addClass('family_fixed');

                    var ul = $('#'+j+' .bubble .fixed_by ul');
                    ul.html('');

                    for (var k = 0; k < factors[i].user_ids.length; k++)
                    {
                        if (k == 4)
                        {
                            var li = $('<li/>').html('+'+(factors[i].user_ids.length - k));
                            li.addClass('remaining');
                            ul.append(li);
                            break;
                        }
                        var li = $('<li/>').html('<img src="http://graph.facebook.com/v2.2/'+factors[i].user_ids[k]+'/picture?width=47&height=47" width="47" height="47"/>');
                        ul.append(li);
                    }
                    break;
                }
            }
        }
    }

    function toggle_remaining_fix_info()
    {
        if ($('.get_100').hasClass('toggled'))
        {
            $('.get_100').removeClass('toggled');
            $('.remaining_fixes').slideUp(200);
        }
        else
        {
            $('.get_100').addClass('toggled');
            $('.remaining_fixes').slideDown(200);
        }
    }

    var percent = 0;
    var oldpercent = 0;

    function animate_facebook_percentage_text()
    {
        if (percent > oldpercent)
        {
            if (oldpercent + 2 >= percent)
            {
                oldpercent = percent;
            }
            else
            {
                oldpercent += 2;
            }
            $("#fb_protection_percent").text(oldpercent + '%');
            window.setTimeout(animate_facebook_percentage_text, 25);
        }
        else if (percent < oldpercent)
        {
            if (oldpercent - 2 <= percent)
            {
                oldpercent = percent;
            }
            else
            {
                oldpercent -= 2;
            }
            $("#fb_protection_percent").text(oldpercent + '%');
            window.setTimeout(animate_facebook_percentage_text, 25);
        }
    }

    

    function bindevents(){


        for (var k in thearray) { // Runs every event binding function in the button array
            if ( (thearray[k].enabled) & (thearray[k].bindevents != undefined) ) {
                thearray[k].bindevents();
            }
        }

        $('#help_link').click(function() {
            Analytics.track("click", "trouble");
            modal.trigger($('#help_content'));
        });

        $('.get_100').click(function() {
            Analytics.track("click", "how_to_get_100");
            toggle_remaining_fix_info();
        });
        $('.remaining_fixes').on('mouseleave', toggle_remaining_fix_info);


        // === facebook share
        $('.bottom_facebook').click(function () {
            Analytics.track("share", "facebook_bottom");
        });

        $('.top_facebook').click(function () {
            Analytics.track("share", "facebook_top");
        });

        $('.fbworthlink').click(function () {
            Analytics.track("share", "facebook_worth");
        });

        // === twitter share
        $('.bottom_twitter').click(function () {
            Analytics.track("share", "tweet_bottom");
        });

        $('.top_twitter').click(function () {
            Analytics.track("share", "tweet_top");
        });
        
        // === google share        
        $('.glworthlink').click(function () {
            Analytics.track("share", "google_worth");
        });

        // === email share
        $('.top_email').click(function () {
            Analytics.track("share", "email_top");
        });
        $('.bottom_email').click(function () {
            Analytics.track("share", "email_bottom");
        });

        // == native apps
        $('.install_ios').click(function () {
            Analytics.track("mobile_app", "ios");
        });
        $('.install_android').click(function () {
            Analytics.track("mobile_app", "android");
        });        
        
 

        $('.login_prompt.facebook .loginbtn').click(function(){
        
            Analytics.track("click", "login_facebook");
            flagForUpdate('facebook');
            window.open('/start/connect?close_after=true');
        
        });

        $('.login_prompt.linkedin .loginbtn').click(function(){
        
            Analytics.track("click", "login_linkedin");
            flagForUpdate('linkedin');
            addonCall('openOverlay', { url:linkedinuser.url, overlayname:'overlay_login', overlay_files: [] }, function (iresponse) { });
        
        });

        $('.login_prompt.twitter .loginbtn').click(function(){
        
            Analytics.track("click", "login_twitter");
            flagForUpdate('twitter');
            addonCall('openOverlay', { url:twitteruser.url, overlayname:'overlay_login', overlay_files: [] }, function (iresponse) { });
        
        });

        /*
        $('#btnBubbleEnable').click(function () {

            if ($(this).hasClass('isactive')) {
                Analytics.track("click", "healthBarDisabled");
                setLSO('permit_bubble', 'inactive', function(lso, key){               
                    setBtnState('#btnBubbleEnable', lso.permit_bubble);
                });
            } else {
                Analytics.track("click", "healthBarEnabled");
                setLSO('permit_bubble', 'active', function(lso, key){               
                    setBtnState('#btnBubbleEnable', lso.permit_bubble);
                });
            }
            
        });*/

        $('.linkissuebtn').click(function(e, force){  // Opens login page, of default behaior, or custom click behavior                                
        
            force || (force = false);

            var id = $(this).attr('id');
            Analytics.track('issueclick', id);
            save_seen(thearray[id].debugger_seen_key);
            thearray[id].refresh = true;
            thearray[id].clicked = true;           

            if( (linkedinuser.loggedin == false) ){ //linkedin logged out

                addonCall('openLoginPage', { url:linkedinuser.url}, function (iresponse) { });

            } else if( thearray[id].click == undefined ){ 

                defaultIssueClick(id, force); //default fbissue button click behavior

            } else {

                thearray[id].click(force);
            }                
        
        });

        $('.twissuebutton').click(function(e, force){  // Opens login page, of default behaior, or custom click behavior                                
        
            force || (force = false);

            var id = $(this).attr('id');
            Analytics.track('issueclick', id);
            save_seen(thearray[id].debugger_seen_key);
            thearray[id].refresh = true;
            thearray[id].clicked = true;           

            if( (twitteruser.loggedin == false) ){ //linkedin logged out

                addonCall('openLoginPage', { url: twitteruser.url}, function (iresponse) { });

            } else if( thearray[id].click == undefined ){ 

                defaultIssueClick(id, force); //default fbissue button click behavior

            } else {

                thearray[id].click(force);
            }                
        
        });


        $('.fbissuebtn').click(function(e, force){  // Opens login page, of default behaior, or custom click behavior                                

            force || (force = false);

            facebookIssueClicks++;

            var id = $(this).attr('fbparam');
            thearray[id].refresh = true;
            thearray[id].clicked = true;      

            if (typeof thearray[id].debugger_seen_key != "undefined")
            {
                Analytics.track('issueclick', thearray[id].debugger_seen_key, facebookuser.hash);
                save_seen(thearray[id].debugger_seen_key);
            }
            else
            {
                Analytics.track('issueclick', id);
            }

            if( (facebookuser.userid == '') | (facebookuser.username == '') ){ //facebook logged out

                addonCall('openLoginPage', { url:'https://www.facebook.com/'}, function (iresponse) { });

            } else if( thearray[id].click == undefined ){ 

                defaultIssueClick(id, force); //default fbissue button click behavior

            } else {

                thearray[id].click(force);
            }                
        
        });

        $('#healthBar').click(function() { thearray["healthBar"].click(); });
        $('#setWidgetBlocking').click(function() { thearray['setWidgetBlocking'].click(); });
        $('#publishermailbox').click(function() { thearray['publishermailbox'].click(); });


       
        $('.googleissuebtn').click(function(e, force){  // Opens login page, of default behaior, or custom click behavior             
        
            force || (force = false);

            var id = $(this).attr('googleparam');
            thearray[id].refresh = true;
            thearray[id].clicked = true;

            if (typeof thearray[id].debugger_seen_key != "undefined")
            {
                Analytics.track('issueclick', thearray[id].debugger_seen_key, facebookuser.hash);
                save_seen(thearray[id].debugger_seen_key);
            }
            else
            {
                Analytics.track('issueclick', id);
            }

            //flagForUpdate('google'); //loggin can affect state of more than one button

            /*
            if( (googleuser.userid == '') ){ //google logged out
                
                addonCall('openLoginPage', { url:'https://accounts.google.com/Login'}, function (iresponse) { });

            } else */
            if( thearray[id].click == undefined ){

                defaultIssueClick(id, force); //default fbissue button click behavior

            } else {

                thearray[id].click(force);
            }                
        });

        /*
        $('.expando').click(function(e) {
            e.preventDefault();
            if ($('#facebook_protection').hasClass('dark'))
                hideFacebookExpando();
            else
                showFacebookExpando();
        });
        $('.underlay').on('mouseleave', function() {
            if ($('#floating_info').is(":hover") == false)
                hideFacebookExpando();
        });
*/

        /*
        $("#dial").knob({
            readOnly: true,
            thickness: '.2',
            fgColor: '#37b34a',
            bgColor: '#39393d',
            width: '120',
            height: '120'
        })
        */

        $('.section.linkedin .stats_area li').each(function() {
            $(this).on('mouseenter', hoverer);
            $(this).on('mouseleave', unhoverer);
            $(this).on('click', clickyclick);
        });

        $('.section.tracking .stats_area .list_blurb a').each(function() {
            $(this).on('mouseenter', hoverer);
            $(this).on('mouseleave', unhoverer);
            $(this).on('click', clickyclick)
        });
        
    } //end bindevents

    /*
    function showFacebookExpando()
    {
        $('#facebook_protection').addClass('dark');
        $('#facebook_underlay').fadeIn(500);
    }

    function hideFacebookExpando()
    {
        $('#facebook_protection').removeClass('dark');
        $('#facebook_underlay').fadeOut(500);
    }
    */

    function hideFix(id)
    {
        $('#' + id).hide();
        $('#' + id).addClass('hidden');
    }


    function defaultIssueClick(id, force){

        force || (force = false);

        force = true;   // JL NOTE ~ removes 'clearing' of allowed / view state

        if( !force && (($('#' + id).hasClass('isallowed')) | ($('#' + id).hasClass('isfalse') & (thearray[id].viewonly == true) )) ){
            setLSO(id, false, function(lso, key){ //set the button state = un-clicked
                //thearray[key].state = true;
                //thearray[key].setButtonState();
                do_refresh();
            });
        }else{
            issueButtonOpenOverlay(id);
        }

    }

    function issueButtonOpenOverlay(id){  // Default click behavior: Turns orange, or opens overlay, sets LSO click to true.

        var url = thearray[id].overlayurl();
        var overlayname = thearray[id].overlayname;

        var next_overlays = [];
        var found_this_fix = false;

        // find all overlays AFTER this fix in thearray
        // these are the "next" overlays.
        for (var k in thearray)
        {
            if (found_this_fix == false)
            {
                if (k == id)
                {
                    found_this_fix = true;
                }
            }
            else
            {
                if (
                    typeof thearray[k].overlayurl != "undefined"
                    &&
                    thearray[k].overlayurl()
                    &&
                    typeof thearray[k].state != "undefined"
                    && 
                    $("#"+k+" .text.alt").is(":visible") == false
                )
                {
                    if (typeof thearray[k].debugger_seen_key != "undefined")
                    {
                        var overlay_log = {id: thearray[k].debugger_seen_key, hash: facebookuser.hash};
                    }
                    else
                    {
                        var overlay_log = {id: k, hash: false};
                    }
                    next_overlays.push({
                        url: thearray[k].overlayurl(),
                        overlayname: thearray[k].overlayname,
                        overlay_log: overlay_log,
                        overlay_files: [],
                        set_lso: typeof thearray[k].overlay_next_set_lso != "undefined" ? k : false
                    });
                    thearray[k].refresh = true;
                }
            }
        }

        addonCall('openOverlay', {
            url:url, overlayname:overlayname,
            overlay_files: [],
            next_overlays: next_overlays,
            debugger_info: {
                _session: debugsession,
                _throttle: debugrate,
                _firstrun: firstrun,
                _lang: thelanguage
            }
        }, function (iresponse) {                 
            setLSO( id, true, function(lso, key){});
        });

    }
   


    function setBtnState(btnSelector, btnState) {
        $(btnSelector).removeClass('istrue');
        $(btnSelector).removeClass('isfalse');
        $(btnSelector).removeClass('isundefined');
        $(btnSelector).removeClass('isallowed');
        $(btnSelector).removeClass('isactive');
        $(btnSelector).removeClass('isinactive');
        $(btnSelector).addClass('is' + btnState);

        if (typeof btnState == "undefined")
            return false;

        /*
        if (typeof protection_factors[btnSelector.substr(1)] != "undefined" && (btnState.toString() == "false") && $('#issue_li_'+btnSelector.substr(1)).length)
        {
            // render_facebook_protection_level();
        }
        else if (typeof protection_factors[btnSelector.substr(1)] != "undefined" && (btnState.toString() == "true" || btnState.toString() == "allowed") && !$('#issue_li_'+btnSelector.substr(1)).length)
        {
            // render_facebook_protection_level();
        }
        */

        // now handle "number of issue logic"
        var issue_counts = {
            facebook: $('.section.facebook .box.istrue').length,
            google: $('.section.google .box.istrue').length,
            linkedin: $('.section.linkedin .box.istrue').length,
            publisher: $('.section.publisher .box.istrue').length,
            tracking: $('.section.tracking .box.istrue').length
        }
        for (var k in issue_counts)
        {
            if (issue_counts[k] > 0)
            {
                $('.sectionbar.'+k+' .issues_count').show();
                $('.sectionbar.'+k+' .issues_count').html(issue_counts[k]);
            }
            else
            {
                $('.sectionbar.'+k+' .issues_count').hide();
            }
        }
        /*
        if (issue_counts['facebook'] == 0 && $('#dial').val() != 100)
        {
            // render_facebook_protection_level();
        }
        */

    }

    function addSpinner(buttonname) {
        if( $('#' + buttonname).length == 0 ){
            return;
        }
        if ($('#'+buttonname+'spinner').length > 0)
            return $('#'+buttonname+'spinner').show();

        var img = document.createElement("img");
        img.src = "/images/avgprivacyfix/spinner.gif";
        img.width = 16;
        img.height = 16;
        img.className = "canvasloader";
        img.id = buttonname + "spinner";
        $('#' + buttonname).append(img);

    }
    function hideSpinner(buttonname){

        var canvasid = buttonname + 'spinner';
        $('#' + canvasid).hide();
    }

    function addSectionSpinner(groupname) {

        if( $('#' + 'spin_' + groupname).length == 0 ){
            return;
        } 

        var img = document.createElement("img");
        img.src = "/images/avgprivacyfix/section_spinner.gif";
        img.className = "sectionspinner"
        img.width = 28;
        img.height = 28;
        $('#' + 'spin_' + groupname).append(img);
       
    }

    function addWorthSpinner(groupname) {

        /*
        var cl = new CanvasLoader('spin_' + groupname);
        cl.setColor('#000000'); // default is '#000000'
        cl.setShape('rect'); // default is 'oval'
        cl.setDiameter(30); // default is 40
        cl.setDensity(30); // default is 40
        cl.setRange(0.9); // default is 1.3
        cl.setSpeed(1); // default is 2
        cl.setFPS(37); // default is 24
        cl.show(); // Hidden by default
        */
    }


    function showSectionSpinner(groupname){
        $('.'+ groupname +'.sectionprogress .sectionspinner').show();        
    }
    function hideSectionSpinner(groupname){
        $('.'+ groupname +'.sectionprogress .sectionspinner').hide();        
    }

    function showSectionPrompt(groupname) {            
        $('.'+ groupname +'.login_prompt').stop(true, true).slideDown(500, function() {});           
    }
    function hideSectionPrompt(groupname) {    
        
        $('.'+ groupname +'.login_prompt').stop(true, true).slideUp(500, function() {});           
    }

    function showSectionProgress(groupname) {    
        // $('.sectionbar.'+ groupname +' .expander').hide();         
        $('#spin_'+ groupname).show();                         
    }
    function hideSectionProgress(groupname) {
        $('#spin_'+ groupname).hide(); 
        // $('.sectionbar.'+ groupname +' .expander').show();          
                
    }

    function showSectionContent(groupname) {   
    
        //$('.'+ groupname +'.section').show();
        $('.'+ groupname +'.section').stop(true, true).slideDown(500, function() {

            if ($('.facebook.section').is(':visible') && $('.google.section').is(':visible') && $('.linkedin.section').is(':visible'))
            {
                if (window.location.hash == '#widget_blocking' || window.location.hash == '#tracker_blocking')
                {
                    if (window.location.hash == '#widget_blocking')
                        var a_tag = $("a[name='widget_blocking']");
                    else
                        var a_tag = $("a[name='tracker_blocking']");
                    $('html,body').animate({scrollTop: a_tag.offset().top}, 500);
                }
            }

            // renderFacebookPie();
            // renderGooglePie();
        });
    }
    function hideSectionContent(groupname) {    

        $('.'+ groupname +'.section').stop(true, true).slideUp(500, function(){
            /*
            $('.sectionbar.' + groupname + ' .expander').removeClass('up');
            $('.sectionbar.' + groupname + ' .expander').addClass('dn'); 
            */
        });   
             
    }
    function showGroupLoginButtons(groupname) {
        $('.'+groupname+' .box.isundefined .btn.login').addClass('show');
    }
    function showLoginButton(button) {
        $('#'+button + '.box.isundefined .btn.login').addClass('show');
    }


    var facebookuser = {
        useridurl: 'https://www.facebook.com/settings/?tab=privacy', 
        userid: '',
        hash: '',
        usernameurl: 'https://www.facebook.com/settings/?tab=privacy',
        username: '',
        authtoken: ''
    };

    var googleuser = {
        
        useridurl: 'https://www.google.com/settings/privacy?tab=4', 
        userid: ''
        
    }

    var twitteruser = {
        url: 'http://twitter.com',
        username: null,
        loggedin: false
    }

    var linkedinuser = {
        url:  'http://www.linkedin.com',
        loggedin: false,
    }

    function parseLinkedinPage(pagehtml) {
        
        linkedinuser.loggedin = (pagehtml.indexOf('linkedin.com/uas/login-submit"') == -1) ? true : false ; 

    }

    function parseTwitterPage(pagehtml) {
        
        twitteruser.loggedin = (pagehtml.indexOf('twitter.com/sessions"') == -1) ? true : false ;

        var username = pagehtml.match(/data-screen-name="(.*?)"/);
        if (username)
            twitteruser.username = username[1];

    }

    function parseFbUserIdPage(pagehtml){
        facebookuser.userid = '';
        facebookuser.userid = substringBetween('envFlush({"user":"', '","', pagehtml);

        if( (facebookuser.userid == '0') | (facebookuser.userid == null) ){
            facebookuser.userid = '';
        } else {
            facebookuser.hash = CryptoJS.MD5(facebookuser.userid).toString(CryptoJS.enc.Hex);
            load_seen_fixes(facebookuser.hash);
        }
    }



    function save_seen(key)
    {
        if (key && facebookAccessToken) {
            $.ajax({
                type: "GET",
                url: '/HomeAPI/saveseen?_token=' + facebookAccessToken + '&_event=' + key, 
                async: true,
                dataType: "json",
                success: function (data) {
                }
            });
        }
    }

    function load_seen_fixes(uid)
    {
        if (seen_fixes.length > 0)
            return false;

        if (facebookAccessToken) {
            $.ajax({
                type: "GET",
                url: '/HomeAPI/seenfixes?_token=' + facebookAccessToken, 
                async: true,
                dataType: "json",
                success: function (data) {
    
                    if (data.length)
                    {
                        for (var i = 0; i < data.length; i++)
                        {
                            if (typeof data[i].fixid != "undefined")
                            {
                                seen_fixes.push(data[i].fixid);
                            }
                        }
    
                        // now go through thearray and parse the items that have debugger_seen_key
                        for (var k in thearray)
                        {
                            if (
                                typeof thearray[k].debugger_seen_key != "undefined"
                                && seen_fixes.indexOf(thearray[k].debugger_seen_key) != -1
                                && thearray[k].refresh == false
                                && typeof thearray[k].debugger_seen_state != "undefined"
                                && typeof thearray[k].debugger_seen_apply_to != "undefined"
                                && thearray[k].state == thearray[k].debugger_seen_apply_to)
                            {
                                thearray[k].state = thearray[k].debugger_seen_state;
                                thearray[k].setButtonState();
                            }
                        }
                    }

                }
            });
        }
    }
     




    function tansformBrowerData(browserdata, psdatabase, blockSettings, languageGuy, bubbleLanguage){
    
        uidata = privacycheck.getTheData(browserdata, psdatabase, blockSettings, languageGuy, bubbleLanguage);
        afterTransformBrowserData();
    }



    function afterTransformBrowserData(){
    
        getLSO(function(lso) {

            var fulltemplates = '';

            fulltemplates = applyArrayOfTemplates('issues_identity_list', uidata.publisher.issues_identity_list);
            $('.issues_identity_list').append(fulltemplates);

            fulltemplates = applyArrayOfTemplates('pub_email_list', uidata.publisher.issues_identity_list, 'privacy_email');
            $('.publisherEmailBubbleTwo ul').html(fulltemplates + '<div style="clear:both;" ></div>');

            // fulltemplates = applyArrayOfTemplates('issues_other_list', uidata.publisher.issues_other_list);
            // $('.issues_other_list').append(fulltemplates);
                                        

            if (lso.setBlockTracking == 'false' || uidata.tracking.all_list.length == 0) {
                uidata.tracking.all_list = new Array();
                showTrackerStats();
            }
            else
            {
                fulltemplates = applyArrayOfTemplates('all_list', uidata.tracking.all_list.length > 50 ? uidata.tracking.all_list.slice(0, 50) : uidata.tracking.all_list);
                $('.all_list.tracking_list').append(fulltemplates);

                $('.tracking .list_blurb strong').text(uidata.tracking.all_list.length);

                $('.tracking .list_blurb a').attr('id', 'trololol_setBlockTracking');

                $('.tracking .list_blurb a').on('mouseenter', hoverer);
                $('.tracking .list_blurb a').on('mouseleave', unhoverer);
                $('.tracking .list_blurb a').on('click', clickyclick);
				/**
				 * AL - superseded by the clickyclick handler
				 *
                $('.tracking .list_blurb a').click(function(e) {
                    e.preventDefault();
                    switchOutTrackerList(uidata.tracking.all_list.length);
                });
				*/
            }

            bindBubbles();

            renderFacebookPie(); // NO MORE PIE. PLZ USE CAKE INSTEAD. KTHX.
            renderGooglePie();

            // $('.glworthlink').attr('href', 'http://www.facebook.com/share.php?u=https://privacyfix.com/start?glworth=' + moneystring(uidata.publisher.google_searchProfit));
                    

            // $('.section.google .amount.dollar').html('$' + moneystring(uidata.publisher.google_searchProfit));
            // $('.section.facebook .amount.dollar').html('$' + moneystring(uidata.publisher.facebook_searchProfit));

            refreshGroup('publisher');
            refreshGroup('tracking');                                                            

        });
    }

    function switchOutTrackerList(num_trackers)
    {
        var trackers = $('.all_list.tracking_list div.logo');
        var anim_delay = 80;
        var transition_delay = (anim_delay * 10) + 2000;
        var countdown_time = 1300;
        var countdown_delay = 50;

        if (trackers.length == 0)
        {
            showTrackerStats();
            return;
        }

        var bye = function(index)
        {
            if (typeof trackers[index] == "undefined")
                return;

            $(trackers[index]).addClass('animated bounceOut');
            // trackers[index].style.visibility = 'hidden';
        }

        var go_away = function(direction, index)
        {
            bye(index);

            switch (direction) {
                case 'left':
                    if (index % 10 != 0)
                        setTimeout(function() { go_away(direction, index - 1) }, anim_delay);
                    break;
                case 'right':
                    if (index % 10 != 9)
                        setTimeout(function() { go_away(direction, index + 1) }, anim_delay);
                    break;
            }
        }

        for (var i = 0; i < 50; i++)
        {
            if (i == 0 || i == 12 || i == 24 || i == 36 || i == 48)
                go_away('left', i);

            if (i == 1 || i == 13 || i == 25 || i == 37 || i == 49)
                go_away('right', i);
        }

        var steps = countdown_time / countdown_delay;
        var decrement = num_trackers  / steps;

        var animate_down = function()
        {
            num_trackers = Math.round(num_trackers - decrement);

            if (num_trackers <= 0)
            {
                $('.tracking .list_blurb strong').text('0');
            }
            else
            {
                $('.tracking .list_blurb strong').text(num_trackers);
                setTimeout(animate_down, countdown_delay);
            }
        }
        animate_down();

        setTimeout(function() {
            $('#trackers_list').addClass('animated fadeOutLeft');
            setTimeout(function() {
                showTrackerStats();    
            }, 1000);
        }, transition_delay);
    }

    function showTrackerStats()
    {
        getLSO(function(lso) {
            $('#trackers_list').hide();
            $('#tracker_stats').hide();
            $('#block_status').hide();
            $('#who_header').hide();
            $('#protected_header').hide();

            if (lso.setBlockTracking == 'false')
            {
                if (typeof lso.trackerBlockCount == 'undefined')
                    lso.trackerBlockCount = 0;

                $('#block_status .block_count strong').text(lso.trackerBlockCount);
                $('#block_status').show();
                $('#protected_header').show();

            }
            else
            {
                $('#tracker_stats').show();
                $('#who_header').show();
            }
        });
    }


    var browserdata = {};
    var psdatabase = {};
    var bubbleLanguage = {};
    var uidata = {};
    var is_safari = false;

    function handle_safari()
    {
        is_safari = true;
        hideFix('publishermailbox');
        hideFix('setBlockTracking');
        /*
        $('#facebook_tracks_area').hide();
        $('#google_history_area').hide();
        $('#tracking_sidebar').hide();
        $('#publisher_sidebar').hide();
        */
        $('#trackerListRow').hide();
    }


    function getBrowserData() {

        Analytics.track('load', 'getBrowserData');

        //var worker = new Worker('/js/privacycheck.js');

	    addonCall('requestCookieData', { }, function (iresponse) {        

		    browserdata = iresponse.data;

            if (browserdata.is_safari)
                handle_safari();

		    $.ajax({
				    type: "GET",
				    url: '/start/masterLanguage?raw=true',
				    async: false,
				    dataType: "json",
				    success: function (data) {
										
					    bubbleLanguage = data;

					    $.ajax({
						    type: "GET",
						    url: window.location.protocol + '//s3.amazonaws.com/images.privacyfix.com/pfData.json?r=' + uid(), 
						    async: true,
						    dataType: "json",
						    success: function (data) {

							    psdatabase = data;

							    //worker.postMessage({ browserdata: browserdata, psdatabase: psdatabase, blockSettings: {}, languageGuy: theLanguageJson, bubbleLanguage: bubbleLanguage });
				
                                tansformBrowerData( browserdata, psdatabase, {}, theLanguageJson, bubbleLanguage );

						    },
						    error: function (e, xhr) { //retry from our own server

                                Analytics.track('loadfail', 'pfData');

						    }
					    });

				    },
				    error: function (e, xhr) {
                        Analytics.track('loadfail', 'bubblelanguage');
				    }
		    });


            
		    
            /*
		    worker.onmessage = function (event) { //this is used as a callback from worker thread 

                afterTransformBrowserData(event.data);

		    }
            */
            



	    });
	
    }


    function moneystring(dollars) {
        
        if (dollars > 1000) {
            var round = (dollars / 1000);
            return round.toFixed(1) + 'K';
        } else if (dollars > 100) {
            return dollars.toFixed(0);
        } else {
            return dollars.toFixed(2);
        }
    }

    function get_facebook_family()
    {
        getLSO(function(lso) {
            // grab family member swe have already messaged and exclude them
            // from the results
            var exclude = JSON.parse(lso.family_sent || '[]');
            FB_GET_FAMILY(facebookuser.userid, {
                exclude: exclude,
                success: function(family) {
                    facebookuser.family  =   family;
                    facebook_render_sidebar_tabs();
                    facebook_render_family_members();
                }
            });
        });
    }

    function get_facebook_valuation()
    {
        if (facebook_value)
            return false;

        // we just want to hit this once lol
        facebook_value = true;

        // hover logic for worth categories
        var hover_trigger = function(_category)
        {
            var _worth_details = $('.collapsed .worth_details');

            $('.collapsed .worth_categories .activity').removeClass('sel');
            $('.collapsed .worth_categories .profile').removeClass('sel');
            $('.collapsed .worth_categories .location').removeClass('sel');

            _worth_details.removeClass('activity');
            _worth_details.removeClass('profile');
            _worth_details.removeClass('location');

            _worth_details.addClass(_category);
            $('.collapsed .worth_categories .'+_category).addClass('sel');
        };
        $('.collapsed ul.worth_categories li').each(function() {
            $(this).on('mouseenter', function(e) {
                var _category = e.target.id.substr(4);
                hover_trigger(_category);
            });
        });

        // this comes from /js/facebook_api.js ;)
        FB_GET_WORTH({
            force_region: is_eu_langcode(langcode) ? region : null, // JL HACK ~ for german localization
            success: function(result)
            {
                facebook_value = result;

                region = result.region;

                animate_worth_value($('#fb_worth_total'), result.total_worth, 1, result.currency_symbol);

                $('#fb_worth_loading').css('display', 'none');
                $('#fb_worth_done_loading').css('display', 'block');

                if (result.total_worth <= result.base_worth * .8)
                    $('#fb_worth_indicator').addClass('low');
                else if (result.total_worth >= result.base_worth * 1.2)
                    $('#fb_worth_indicator').addClass('high');
                else
                    $('#fb_worth_indicator').addClass('normal');

                $('.likes_per_month').html(result.factors.likes_per_month.value);
                $('.posts_per_month').html(result.factors.posts_per_month.value);
                $('.photos_per_month').html(result.factors.photos_per_month.value);
                $('.friends').html(result.factors.friends.value);

                var tolpazetor_weight = function(comparator, el)
                {
                    if (comparator < 0)
                        el.addClass('low');
                    else if (comparator > 1)
                        el.addClass('high');
                    else
                        el.addClass('normal');
                }

                tolpazetor_weight(result.factors.likes_per_month.influence, $('.likes_per_month_indicator'));
                tolpazetor_weight(result.factors.posts_per_month.influence, $('.posts_per_month_indicator'));
                tolpazetor_weight(result.factors.photos_per_month.influence, $('.photos_per_month_indicator'));
                tolpazetor_weight(result.factors.friends.influence, $('.friends_indicator'));

                if (result.sex == 'female')
                {
                    $('.sex').html('F');
                    $('.sex_indicator').addClass('high');
                }
                else if (result.sex == 'male')
                {
                    $('.sex').html('M');
                    $('.sex_indicator').addClass('normal');
                }

                if (region != 'USA')
                {
                    $('.details .location').hide();
                    $('#sel_location').remove();
                }
                else
                {
                    $('.worth_details .location .' + result.region).show();
                }
                if (langcode != 'en')
                {
                    $('.worth_details .location').addClass('nofloat');
                }
                

                $('.fbworthlink').attr('href', 'http://www.facebook.com/share.php?u=https://privacyfix.com/start%3Ffbworth%3D' + moneystring(result.total_worth) + '');

                $('#fbworth_image_placeholder').html('<img src="/start/fbworth?value='+result.total_worth.toFixed(2)+'&symbol='+encodeURIComponent(result.currency_symbol)+'" width="1" height="1" style="opacity: .2;"/>');

                hover_trigger('activity');

                var num_visible = 0;
                var rows = $('.section.facebook .rowcontent div.box');
                rows.each(function() {
                    if ($(this).is(':visible'))
                        num_visible++;
                });                

                facebook_render_sidebar_tabs();
            },
            error: function(response)
            {
                facebook_value = 'error';
            }
        });

    }

    function facebook_render_sidebar_tabs()
    {
        if (facebookuser.family && facebookuser.family.length > 0)
        {
            $('.section.facebook .expanded').hide();
            $('.section.facebook .collapsed').show();
            $('.section.facebook .family').show();
        }
        else
        {
            // JL NOTE ~ Always show collapsed because I say so.
            $('.section.facebook .expanded').hide();
            $('.section.facebook .collapsed').show();

            // $('.section.facebook .expanded').show();
            // $('.section.facebook .collapsed').hide();
            $('.section.facebook .family').hide();
        }

    }

    function facebook_render_family_members()
    {
        if(!facebookuser.family || facebookuser.family.length == 0) return false;

        // grab the first 3 family members
        var members = facebookuser.family.slice(0, Math.min(facebookuser.family.length, 3));
        $('.infoarea.facebook .family .members ul').remove();
        var ul = $('<ul/>');
        for(var i = 0; i < members.length; i++)
        {
            var user = members[i];
            var img = '<img src="https://graph.facebook.com/v2.2/'+user.facebook_id+'/picture?type=large&width=80&height=80" width="80" height="80">';
            var a = $('<a href="#invite-family" rel="'+user.facebook_id+'">'+img+'<p>'+user.name+'</p></a>');
            var li = $('<li/>');
            li.append(a);
            ul.append(li);
        }
        ul.delegate('> li a', 'click', function(e) {
            e.preventDefault();
            var atag = next_tag_up('a', e.target);
            facebook_message_family(atag.rel);
        });

        $('.infoarea.facebook .family .members').append(ul);
    }

    /**
     * AL - this function attempts to make facebook's message dialog not jump to
     * the top of the page when it's opened.
     *
     * It used to be more complicated, but now it opts for the most well-working
     * solution that doesn't piss off users too much (hopefully). It saves the
     * window scroll position, opens the FB dialog, then scrolls back down to
     * the original position. This creates a really obnoxious flickering effect
     * but seems to be the only reliable way to get this working.
     */
    function facebook_message_dialog_scrollfixer(msg_obj)
    {
        var get_dialog = function(subselector)
        {
            var dialog = next_tag_up('.fb_dialog', $(subselector)[0]);
            return dialog ? $(dialog) : null;
        };

        msg_obj = fbui_msg;

        var wscroll = $(window).scrollTop();

        //var dialog_load = get_dialog('.fb_dialog a#fb_dialog_loader_close');
        var dialog_msg = null;

        // detect when we get the REAL iframe obj
        msg_obj.subscribe('iframe_show', function() {
            window.scrollTo(0, wscroll);
            dialog_msg = get_dialog('.fb_dialog > a.fb_dialog_close_icon');
            dialog_msg.css({top: parseInt(dialog_msg.css('top')) + wscroll});
        });
    }

    function facebook_message_family(facebook_id)
    {
        var fbui_msg = FB.ui({
            app_id: FB_APP_ID,
            method: 'send',
            link: 'https://privacyfix.com/?family_invite=1',
            to: facebook_id
        }, function(msg) {
            if(!msg || !msg.success) return;
            // add the member to the list of sent messages
            getLSO(function(lso) {
                var family = JSON.parse(lso.family_sent || '[]');
                family.push(facebook_id);
                setLSO('family_sent', JSON.stringify(family), function() {
                    get_facebook_family();
                });
            });
        });

        // fix annoying scroll-to-top fb msg bug
        facebook_message_dialog_scrollfixer(fbui_msg);
    }

    var twitter_region = (langcode == 'en' ? 'USA' : 'other');
    var twitter_views_per_day = 20;
    var twitter_update_interval = null;
    var old_twitter_worth = 0;
    var new_twitter_worth = 0;
    var int_twitter_worth = 0;

    var twitter_followers_local = 200; //twitter-worth-temp-removal
    var twitter_avgtweets_local = 20; //twitter-worth-temp-removal

    

    function bind_twitter_sidebar_events()
    {

        $('#tw_tweets_range').simpleSlider({ highlight: true });  //twitter-worth-temp-removal

        
        $('#tw_followers_range').simpleSlider({ highlight: true }); //twitter-worth-temp-removal

        setTimeout(function(){
            $('#tw_followers_range').simpleSlider("setValue", .2);
        }, 1000);
        

        $('#tw_views_range').simpleSlider({ highlight: true });


        $("#tw_tweets_range").bind("slider:changed", function (event, data) {  //twitter-worth-temp-removal

            if (twitteruser.loggedin == false)
                return;

            twitter_avgtweets_local = Math.round(data.ratio * 1000);
            if (!twitter_avgtweets_local)
                twitter_avgtweets_local = 1;

            $('.tweets_month').html(twitter_avgtweets_local);

            //setCookie('tw_views_per_day', twitter_views_per_day, 365);

            //get_twitter_valuation();
            local_twitter_valuation();
        });

        $("#tw_followers_range").bind("slider:changed", function (event, data) { //twitter-worth-temp-removal

            if (twitteruser.loggedin == false)
                return;

            twitter_followers_local = Math.round(data.ratio * 1000);
            if (!twitter_followers_local)
                twitter_followers_local = 1;

            $('.my_followers').html(twitter_followers_local);

            //setCookie('tw_views_per_day', twitter_views_per_day, 365);

            //get_twitter_valuation();
            local_twitter_valuation();
        });

        
        if (getCookie('tw_views_per_day'))
        {
            twitter_views_per_day = getCookie('tw_views_per_day');
            // $('#tw_views_range').simpleSlider("setRatio", twitter_views_per_day / 50);
            $('#tw_views_per_day').html(twitter_views_per_day);
        }
        
        if (getCookie('tw_geo'))
        {
            twitter_region = getCookie('tw_geo');
            switch (twitter_region)
            {
                case 'USA':
                    $('#tw_usa').attr('checked', 'checked');
                    break;
                default:
                    $('#tw_other').attr('checked', 'checked');
                    break;
            }
        }

        $("#tw_views_range").bind("slider:changed", function (event, data) { 
            if (twitteruser.loggedin == false)
                return;

            twitter_views_per_day = Math.round(data.ratio * 50);
            if (!twitter_views_per_day)
                twitter_views_per_day = 1;


            setCookie('tw_views_per_day', twitter_views_per_day, 365);

            $('#tw_views_per_day').html(twitter_views_per_day);

            //get_twitter_valuation();
            local_twitter_valuation();
        });

        var geo_change = function(e) {
            if (e.target.id == 'tw_usa')
                twitter_region = 'USA';
            else
                twitter_region = 'other';

            setCookie('tw_geo', twitter_views_per_day, 365);

            //actually_get_twitter_valuation(true);
            local_twitter_valuation();
        }
        $('#tw_usa').click(geo_change);
        $('#tw_other').click(geo_change);

        $('.twworthlink').click(function(e) {
            e.preventDefault();
            var hashtags = encodeURIComponent(theLanguageJson.twitter_worth.hashtags);
            var hashtags = '';
            var tweettext = encodeURIComponent((theLanguageJson.twitter_worth.tweet_text).replace('{AMOUNT}', '$'+ $('#tw_worth_total').html()));
            window.open("https://twitter.com/intent/tweet?hashtags="+hashtags+"&text="+tweettext+"&url=https%3A%2F%2Fwww.privacyfix.com");
        });
    }


    function local_twitter_valuation(){


        var totalUsers = 271000000;
        var revenueLastQtr = 312000000;
        var avgFollowing = 208;

        var geoCoefficient = 5.65;
        if( twitter_region != 'USA' ){
            geoCoefficient = 1.16;
        }

        var followersCount = twitter_followers_local;
        var tweetsMonth = twitter_avgtweets_local;
        
        var dailyViews = twitter_views_per_day;

        

        // Do the main worth computations
        // (((((tweets_month)*(response.followers_count))/1000)*(geo_coefficient))/tw_valuation.avg_following)*12;
        var calc1 = (((((tweetsMonth) * (followersCount)) / 1000) * (geoCoefficient)) / avgFollowing) * 12;

        //((4*twitter revenue per last quarter)/(number of total twitter users))*(((# of times they check the timeline per day)*365)*(US or International revenue per 1000 views))
        // ((((# of times they check the timeline per day)*365)/1000)*(US or International revenue per 1000 views))
        var calc2 = ((((dailyViews)*365)/1000)*(geoCoefficient));

        //var worth = Math.Round(calc1 + calc2, 2);

        var worth = calc1 + calc2;
        worth = worth.toFixed(2);
       
        var new_twitter_worth = worth;
        var int_twitter_worth = old_twitter_worth;

        var delay = 10;
        var inc_percentage = 1;
        var inc = 0;
                
        if (tweetsMonth < 1000)
            $('.tweets_month').html(tweetsMonth);
        else if (val >= 1000 & val < 1000000)
            $('.tweets_month').html(Math.round(result.tweetsMonth).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));

        $('.my_followers').html(followersCount);
                

        var abs_diff = (Math.abs(new_twitter_worth - old_twitter_worth));
        inc = abs_diff * (inc_percentage / 100);

        var val = new_twitter_worth;

        if( $('#tw_worth_total') ){
            if (val < 1000)
                $('#tw_worth_total').html('$' + val);
            else if (val >= 1000 & val < 1000000)
                $('#tw_worth_total').html('$' + Math.round(val).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));
            else
                $('#tw_worth_total').html('$' + (val / 1000000).toFixed(1) + 'M');
        }
    }

    function get_twitter_valuation(immediate)
    {
        $('#tw_views_per_day').html(twitter_views_per_day);

        if (twitter_update_interval)
            clearTimeout(twitter_update_interval);

        twitter_update_interval = setTimeout(function() {
            actually_get_twitter_valuation();
        }, (immediate ? 1 : 500));

        return false;
    }

    function actually_get_twitter_valuation()
    {
        var delay = 10;
        var inc_percentage = 1;
        var inc = 0;


        $.ajax({
            url: '/valuation/twitter?_username='+twitteruser.username+'&_daily_views='+twitter_views_per_day+'&_geo='+twitter_region,
            type: 'GET',
            success: function(result, trol) {
                new_twitter_worth = result.worth;
                int_twitter_worth = old_twitter_worth;

                
                if (result.tweetsMonth < 1000)
                    $('.tweets_month').html(result.tweetsMonth.toFixed(1));
                else if (val >= 1000 & val < 1000000)
                    $('.tweets_month').html(Math.round(result.tweetsMonth).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));

                $('.my_followers').html(result.followersCount);
                

                var abs_diff = (Math.abs(new_twitter_worth - old_twitter_worth));
                inc = abs_diff * (inc_percentage / 100);

                var show_worth = function(val)
                {
                    if (val < 1000)
                        $('#tw_worth_total').html('$' + val.toFixed(2));
                    else if (val >= 1000 & val < 1000000)
                        $('#tw_worth_total').html('$' + Math.round(val).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));
                    else
                        $('#tw_worth_total').html('$' + (val / 1000000).toFixed(1) + 'M');
                }

                var finish_animation = function()
                {
                    old_twitter_worth = new_twitter_worth;
                    int_twitter_worth = old_twitter_worth;
                    show_worth(new_twitter_worth);
                }

                var do_animate = function()
                {
                    
                    if (new_twitter_worth >= old_twitter_worth)
                    {
                        if (int_twitter_worth + inc < new_twitter_worth)
                        {
                            int_twitter_worth += inc;
                            show_worth(int_twitter_worth);
                            setTimeout(do_animate, delay);
                        }
                        else
                        {
                            finish_animation();
                        }
                    }
                    else if (new_twitter_worth < old_twitter_worth)
                    {
                        if (int_twitter_worth - inc > new_twitter_worth)
                        {
                            int_twitter_worth -= inc;
                            show_worth(int_twitter_worth);
                            setTimeout(do_animate, delay);
                        }
                        else
                        {
                            finish_animation();
                        }
                    }
                }
                do_animate();
            }
        });
    }

    function animate_worth_value(selector, worth, speed_multiplier, currency_symbol)
    {
        speed_multiplier || (speed_multiplier = 1);
        currency_symbol || (currency_symbol = '$');

        var counted = 0;

        var animate_up = function()
        {
            if (counted < worth && counted + (.15*speed_multiplier) < worth)
            {
                counted += (.15*speed_multiplier);

                selector.html(currency_symbol + counted.toFixed(2));
                window.setTimeout(animate_up, 20);
            }
            else
            {
                counted = worth;
                selector.html(currency_symbol + (currency_symbol != '$' ? counted.toFixed(2).replace('.', ',') : counted.toFixed(2)));
            }
        }
        animate_up();
    }

    function animate_tracking_percent(selector, percent)
    {
        var counted = 0;

        var animate_up = function()
        {
            if (counted < percent && counted + 1 < percent)
            {
                counted += 1;
                selector.html(counted.toFixed(0)+'%');
                window.setTimeout(animate_up, 20);
            }
            else
            {
                counted = percent;
                selector.html(counted.toFixed(0)+'%');
            }
        }
        animate_up();
    }

    
    function renderFacebookPie() {

        if(uidata.publisher == undefined) { return; }

        if (uidata.publisher.fb_pie) {

            var pie = uidata.publisher.fb_pie;
            var fb_diff = 0;
            var fb_precent = 0;
            var fb_seen = 100;

            // alert('pie.seen: ' + pie.seen + '; pie.total: ' + pie.total);

            if (pie.total != 0) { //avoid divide by zero
                fb_seen = pie.seen;
                fb_diff = pie.total - pie.seen;
                fb_precent = (pie.seen / pie.total) * 100;
            }
            

            //$('#fb_tracks_on_percent').html(fb_precent.toFixed(0) + '%');
            if (fb_precent > 0)
            {
                animate_tracking_percent($('#fb_tracks_on_percent'), fb_precent);
                if (typeof window.isAVGPrivacyFixIE != "undefined")
                    $('.section.facebook .not_enough_data').hide();
            }
            else
            {
                $('.section.facebook .tracks_on').css('opacity', 0);
                $('.section.facebook .not_enough_data').css('opacity', 1);
            }

            /*
            $('.section.facebook .statsection.money').animate({opacity: 1.0}, 2000);
            $('.section.facebook .statsection.pieblock').animate({opacity: 1.0}, 2000);

            $('#spin_fb_money').hide();
            $('#spin_fb_pie').hide();
            $('#spin_google_money').hide();
            $('#spin_google_pie').hide(); 
            */
        }

    }
    

    function refreshGraphButtons() {

        var count = 0;
        $('.statsection.graph .item').each(function () {
            if ($('[fbparam="' + $(this).attr('param') + '"]').hasClass('isfalse')) {
                $(this).removeClass('bad');
                $(this).addClass('good');
                count++;
            } else {
                $(this).removeClass('good');
                $(this).addClass('bad');
            }
        });

        if (count < 3) {
            $('.statsection.graph').removeClass('low');
            $('.statsection.graph').addClass('high');
        } else {
            $('.statsection.graph').removeClass('high');
            $('.statsection.graph').addClass('low');
        }

    }

            

    function renderGooglePie() {

        if( uidata.publisher == undefined) { return; }

        if (uidata.publisher.g_pie) {            

            var g = uidata.publisher.g_pie;            
            var countTotal = uidata.publisher.google_countTotal;//for cal profit
            // var pageTotal = uidata.publisher.g_pieTotal;
            // var historyCount = uidata.publisher.google.pageTotal; //total pages
            var pageTotal = uidata.publisher.visited_site_with_google_total;
            var historyCount = uidata.publisher.visited_site_total;

            var total_worth = uidata.publisher.google_searchProfit;

            if (typeof fb_valuation.currency_convert[region] != "undefined")
            {
                total_worth = total_worth / fb_valuation.currency_convert[region].usd_conversion;
                currency_symbol = fb_valuation.currency_convert[region].symbol;
            }
            else
            {
                currency_symbol = "$";
            }

            animate_worth_value($('#gl_worth_total'), total_worth, 5, currency_symbol);
            $('.glworthlink').attr('href', 'http://www.facebook.com/share.php?u=https://privacyfix.com/start%3Fglworth%3D' + moneystring(total_worth) + '');

            $('#glworth_image_placeholder').html('<img src="/start/glworth?value='+total_worth.toFixed(2)+'&symbol='+encodeURIComponent(currency_symbol)+'" width="1" height="1" style="opacity: .2;"/>');

            var percent = 0;
            if (pageTotal)
            {
                percent = 100 * (pageTotal / historyCount);
            }
            
            if (percent > 0)
            {
                animate_tracking_percent($('#gl_tracks_on_percent'), percent);
                if (typeof window.isAVGPrivacyFixIE != "undefined")
                    $('.section.facebook .not_enough_data').hide();
            }
            else
            {
                $('.section.google .tracks_on').css('opacity', 0);
                $('.section.google .not_enough_data').css('opacity', 1);

            }

            /*
            var vals = [];
            var keys = [];

            var colors = [
            '#800000',
            '#A31F1F',
            '#B83737',
            '#D15C5C',
            '#DF7373',
            '#EF9090',
            '#F79F9F',
            '#FCA9A9',
            '#FFAEAE',
            '#FFAFAF', '#FFFFFF'];
           
            var grey = '#555';

            var total = 0;
            for (var k in g) {                
                vals.push(g[k]);
                keys.push(k);
                total += g[k];
            }

            //keys.push('other');
            vals.push(historyCount - pageTotal);
            var percent = 0;
            if (pageTotal) {
                percent = 100 * (pageTotal / historyCount);
            }

            var layers = '';
            var color = grey;
            for (var i = 0; i < keys.length; i++) {
                color = grey;
                if (vals[i] != 0) {
                    color = colors[i];
                }
                layers += '<li class="layer"' + ' style="background-color:' + color + ';" >' + keys[i] + '</li>';
                $('.googleTracking .cake').html('<ul>' + layers + '</ul>');
            }
            */
            
            
            
            //$('.section.google .trackingstats .amount.percent').html(percent.toFixed(0) + '%');

            //$('.section.google .statsection.money').animate({opacity: 1.0}, 2000);
            //$('.section.google .statsection.pieblock').animate({opacity: 1.0}, 2000);
        }


    }

    function checkCompletionStatus()
    {
        var refreshing = false;
        var fixes = [];
        var notfixed = [];
        var available = 0;
        var fixed = 0;
        var has_google = false;

        for (var k in thearray) {
            if ( thearray[k].refresh == true)
            {
                var user_logged_in = true;

                switch(thearray[k].group)
                {
                    case 'facebook':
                        if (facebookuser.userid == "")
                            user_logged_in = false;
                        break;
                    case 'twitter':
                        if (!twitteruser.loggedin)
                            user_logged_in = false;
                        break;
                    case 'linkedin':
                        if (!linkedinuser.loggedin)
                            user_logged_in = false;
                        break;
                }

                if (user_logged_in == false)
                    continue;

                refreshing = true;
                fixes.push(k);
            }
            else if (/*thearray[k].state != undefined && */ $('#' + k).hasClass('hidden') == false)
            {
                available++;

                if (thearray[k].group == 'google')
                {
                    has_google = true;
                }

                if ($('#'+k).hasClass('isfalse') || $('#'+k).hasClass('isundefined') || $('#'+k).hasClass('isallowed'))
                {
                    fixed++;
                }
                else
                {
                    notfixed.push(k);
                }
            }
        }

        var handle_include = function(icon, include)
        {
            if (include)
            {
                $('.completion .includes').css('display', 'inline-block');
                $('.icon_' + icon).css('display', 'inline-block');
            }
            else
            {
                $('.icon_' + icon).css('display', 'none');
            }

        }

		handle_include('tr', true);

        handle_include('tw', $('.twitter.section').is(':visible'));

        handle_include('fb', $('.facebook.section').is(':visible'));

        handle_include('gl', has_google);
            
        handle_include('li', $('.linkedin.section').is(':visible'));

        if (refreshing == true)
            return;

        var percentage = (fixed / available) * 100;

        $('.completion .bar').css('width', percentage + '%');
    }



    //====================================== Button Info Array ========================================================================================================
    var thearray = {};

    // Twitter photos taggable
    thearray["twPhotosTaggable"] = {
        group: 'twitter',
        enabled: true,
        refresh: true,
        state: undefined,
        click: function() {
            flagForUpdate('twitter');
            defaultIssueClick("twPhotosTaggable", false);
        },
        overlayname: 'overlay_tw_photosTaggable',
        overlay_next_set_lso: true,
        debugger_seen_key: 'twPhotosTaggable',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        url: function(){ return "https://twitter.com/settings/security"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {
           
            try {

                var sanitycheck = pagehtml.indexOf('name="user[allow_media_tagging]"') != -1;
                var login = pagehtml.indexOf('<table class="flex-table password-signin">') != -1;
                var goodstate = pagehtml.indexOf('id="allow_media_tagging_none" name="user[allow_media_tagging]" checked') != -1;
                if(login){
                    this.state = undefined;
                } else if( sanitycheck == false ) {
                    Analytics.track('scanfail', 'twPhotosTaggable');
                    this.state = undefined;
                } else if( goodstate == true ){
                    this.state = false;
                } else if(lsoglobal.twPhotosTaggable) {
                    this.state = 'allowed'; //been clicked
                } else if(seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    this.state = 'allowed'; // came from seen fix state syncing
                } else {
                    this.state = true;
                }

                this.setButtonState();
            } catch (err) {


                Analytics.track('scanfail', 'twPhotosTaggable_catch');
                this.state = undefined;
                this.setButtonState();
            }    
        },
        setButtonState: function () {
            setBtnState('#twPhotosTaggable', this.state);
            refreshGraphButtons();
        }
    };
    
    // Twitter tweets protected
    thearray["twTweetsProtected"] = {
        group: 'twitter',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_tw_tweetsProtected',
        overlay_next_set_lso: true,
        debugger_seen_key: 'twTweetsProtected',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        url: function(){ return "https://twitter.com/settings/security"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {
           
            try {

                var sanitycheck = pagehtml.indexOf('id="user_protected"') != -1;
                var login = pagehtml.indexOf('<table class="flex-table password-signin">') != -1;
                var goodstate = pagehtml.indexOf('<input checked id="user_protected"') != -1;

                if(login){
                    this.state = undefined;
                } else if( sanitycheck == false ) {
                    Analytics.track('scanfail', 'twTweetsProtected');
                    this.state = undefined;
                } else if( goodstate == true ){
                    this.state = false;
                } else if(lsoglobal.twTweetsProtected) {
                    this.state = 'allowed'; //been clicked
                } else if(seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    this.state = 'allowed'; // came from seen fix state syncing
                } else {
                    this.state = true;
                }

                this.setButtonState();
            } catch (err) {


                Analytics.track('scanfail', 'twTweetsProtected_catch');
                this.state = undefined;
                this.setButtonState();
            }    
        },
        setButtonState: function () {
            setBtnState('#twTweetsProtected', this.state);
            refreshGraphButtons();
        }
    };
    
    // Twitter twit location
    thearray["twLocation"] = {
        group: 'twitter',
        enabled: true,
        refresh: true,
        state: undefined,
        click: function() {
            flagForUpdate('twitter');
            defaultIssueClick("twLocation", false);
        },
        overlayname: 'overlay_tw_location',
        overlay_next_set_lso: true,
        debugger_seen_key: 'twLocation',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        url: function(){ return "https://twitter.com/settings/security"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {
           
            try {

                var sanitycheck = pagehtml.indexOf('id="user_geo_enabled"') != -1;
                var login = pagehtml.indexOf('<table class="flex-table password-signin">') != -1;
                var badstate = pagehtml.indexOf('<input checked id="user_geo_enabled"') != -1;

                if(login){
                    this.state = undefined;
                } else if( sanitycheck == false ) {
                    Analytics.track('scanfail', 'twLocation');
                    this.state = undefined;
                } else if( badstate == false ){
                    this.state = false;
                } else if(lsoglobal.twLocation) {
                    this.state = 'allowed'; //been clicked
                } else if(seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    this.state = 'allowed'; // came from seen fix state syncing
                } else {
                    this.state = true;
                }

                this.setButtonState();
            } catch (err) {


                Analytics.track('scanfail', 'twLocation_catch');
                this.state = undefined;
                this.setButtonState();
            }    
        },
        setButtonState: function () {
            setBtnState('#twLocation', this.state);
            refreshGraphButtons();
        }
    };

    // Twitter email serarch lol
    thearray["twEmailSearch"] = {
        group: 'twitter',
        enabled: true,
        refresh: true,
        state: undefined,
        click: function() {
            flagForUpdate('twitter');
            defaultIssueClick("twEmailSearch", false);
        },
        overlayname: 'overlay_tw_emailSearch',
        overlay_next_set_lso: true,
        debugger_seen_key: 'twEmailSearch',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        url: function(){ return "https://twitter.com/settings/security"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {
           
            try {

                var sanitycheck = pagehtml.indexOf('id="user_discoverable_by_email"') != -1;
                var login = pagehtml.indexOf('<table class="flex-table password-signin">') != -1;
                var badstate = pagehtml.indexOf('name="user[discoverable_by_email]" type="checkbox" value="1" checked>') != -1;

                if(login){
                    this.state = undefined;
                } else if( sanitycheck == false ) {
                    Analytics.track('scanfail', 'twEmailSearch');
                    this.state = undefined;
                } else if( badstate == false ){
                    this.state = false;
                } else if(lsoglobal.twEmailSearch) {
                    this.state = 'allowed'; //been clicked
                } else if(seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    this.state = 'allowed'; // came from seen fix state syncing
                } else {
                    this.state = true;
                }

                this.setButtonState();
            } catch (err) {


                Analytics.track('scanfail', 'twEmailSearch_catch');
                this.state = undefined;
                this.setButtonState();
            }    
        },
        setButtonState: function () {
            setBtnState('#twEmailSearch', this.state);
            refreshGraphButtons();
        }
    };

    // Remove old apps
    thearray["twReviewApps"] = {
        group: 'twitter',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_tw_reviewApps',
        url: function() { return 'https://twitter.com/settings/applications'; },
        debugger_seen_key: 'twReviewApps',
        debugger_seen_apply_to: true,
        debugger_seen_state: false,
        overlay_next_set_lso: true,
        overlayurl: function(){ return "https://twitter.com/settings/applications"; },
        setButtonState: function () { /*setBtnState('#fbAppCount', this.state);*/ },
        parse: function(user) {

            getLSO(function (lso) { 
				this.state = ( typeof lso.twReviewApps == "undefined"  ? true : !lso.twReviewApps);  
                this.setButtonState();            
            }.bind(this));
        },
        setButtonState: function () {
            setBtnState('#twReviewApps', this.state);
            refreshGraphButtons();
        }
    };

    // "Visible in Google" / profile search visibility fix
    thearray['fbSearch'] = {
        group: 'facebook',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_fb_publicSearchEnabled',
        overlay_next_set_lso: true,
        debugger_seen_key: 'fbSearch',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        url: function(){ return "https://www.facebook.com/settings?tab=privacy&section=search&view"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {
            try {
                        
                var rightpage = pagehtml.indexOf('id="search_filter_public" value="1"') != -1;
                var enabled = pagehtml.indexOf('id="search_filter_public" value="1" checked="1"') != -1;
                var login = pagehtml.indexOf('id="login_form"') != -1;

                if(login){
                    this.state = undefined;
                } else if(!rightpage){

                    Analytics.track('scanfail', 'fbSearch');
                    this.state = undefined;

                } else if(!enabled){
                    this.state = false;
                } else if(lsoglobal.fbSearch) {
                    this.state = 'allowed'; //been clicked
                } else if(seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    this.state = 'allowed'; // came from seen fix state syncing
                } else {
                    this.state = true;
                }
                this.setButtonState();
            
            } catch (err) {
                alert('error: ' + err);
                Analytics.track('scanfail', 'fbSearch_catch');
                this.state = undefined;
                this.setButtonState();
            }
        },
        setButtonState: function () {
            setBtnState('#fbSearch', this.state);
        }
    }

    // "Tag preview off" / Facebook Tag Review Fix
    thearray["fbTagReview"] = {
        group: 'facebook',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_fb_tagReview',
        overlay_next_set_lso: true,
        debugger_seen_key: 'fbTagReview',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        url: function(){ return "https://www.facebook.com/settings?tab=timeline&section=review&view"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {
           
            try {


                var enabled = pagehtml.indexOf('name="tag_approval_enabled" value="1"') != -1;           
                var disabled = pagehtml.indexOf('name="tag_approval_enabled" value="0"') != -1;           
                var login = pagehtml.indexOf('id="login_form"') != -1;

                if(login){
                    this.state = undefined;
                } else if( !(enabled | disabled) ) {
                    Analytics.track('scanfail', 'fbTagReview');
                    this.state = undefined;
                } else if(enabled){
                    this.state = false;
                } else if(lsoglobal.fbTagReview) {
                    this.state = 'allowed'; //been clicked
                } else if(seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    this.state = 'allowed'; // came from seen fix state syncing
                } else {
                    this.state = true;
                }
                this.setButtonState();
            } catch (err) {


                Analytics.track('scanfail', 'fbTagReview_catch');
                this.state = undefined;
                this.setButtonState();
            }    
        },
        setButtonState: function () {
            setBtnState('#fbTagReview', this.state);
            refreshGraphButtons();
        }
    };

    // Crowd Control
    thearray["fbSharing"] = {
        group: 'facebook',
        enabled: false,
        refresh: true,
        state: true,
        debugger_seen_key: 'fbSharing',
        debugger_seen_apply_to: false,
        debugger_seen_state: true,
        url: function() { return window.location.protocol + '//' + window.location.host +'/HomeAPI/getMyProfile?_token='+facebookAccessToken; },
        overlayurl: function () {
            var url = window.location.protocol + '//' + window.location.host + '/crowdcontrol?layout=desktop';
            return url;
        },
        overlay_next_set_lso: true,
        overlayname: 'overlay_fb_crowdControl',
        setButtonState: function () {
            setBtnState('#fbSharing', (this.state != undefined ? !this.state : undefined));
        },
        parse: function(user) {
            if (!user)
                return false;

            if (typeof user == "string")
                user = JSON.parse(user);

            var found_match = false;

            for (var i = 0; i < user.seen_factors.length; i++)
                if (user.seen_factors[i].fixid == this.debugger_seen_key)
                    found_match = true;

            if (found_match)
            {
                if (typeof thearray["fbSharing"].click == "undefined")
                {
                    this.state = this.debugger_seen_state;
                }
                else
                {
                    this.state = undefined;
                }
            }
            else
                this.state = !this.debugger_seen_state;
                
            this.setButtonState();
        }
    };

    // Remove old apps
    thearray["fbAppCount"] = {
        group: 'facebook',
        enabled: false,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_fb_appInfo',
        url: function() { return window.location.protocol + '//' + window.location.host +'/HomeAPI/getMyProfile?_token='+facebookAccessToken; },
        debugger_seen_key: 'fbAppCount',
        debugger_seen_apply_to: true,
        debugger_seen_state: false,
        overlay_next_set_lso: true,
        overlayurl: function(){ return "https://www.facebook.com/settings/?tab=applications"; },
        setButtonState: function () { setBtnState('#fbAppCount', this.state); },
        click: function(){
            issueButtonOpenOverlay("fbAppCount");
        },
        parse: function(user) {
            if (!user)
                return false;

            if (typeof user == "string")
                user = JSON.parse(user);

            var found_match = false;

            for (var i = 0; i < user.seen_factors.length; i++)
                if (user.seen_factors[i].fixid == this.debugger_seen_key)
                    found_match = true;

            if (found_match)
                this.state = this.debugger_seen_state;
            else
                this.state = !this.debugger_seen_state;

            this.setButtonState();
        },
        appcount: undefined
    };

    // App Access / Instant Personalization
    thearray["fbAppAccess"] = {
        group: 'facebook',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_fb_bringInfoIntoApps',
        debugger_seen_key: 'fbAppAccess',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        overlay_next_set_lso: true,
        overlayurl: function(){ return "https://www.facebook.com/settings?tab=applications&section=friends_share&view"; },
        url: function(){return thearray["fbAppAccess"].overlayurl(); },
        parse: function (pagehtml) {

            getLSO(function (lso) {
                this.state = (( lso.fbAppAccess == undefined ) ? true : (!lso.fbAppAccess));
                this.setButtonState();
            }.bind(this));

        },
        setButtonState: function () {
            setBtnState('#fbAppAccess', this.state);
        }
    };

    // Likes used for Ads
    thearray["fbInAds"] = {
        group: 'facebook',
        enabled: true,
        refresh: true,
        state: undefined,
        debugger_seen_key: 'fbInAds',
        // JL NOTE ~ debugger_seen_apply_to NOT DEFINED FOR THIS FIX. Won't sync this setting from server.
        overlayname: 'overlay_fb_likesForAds',
        overlay_next_set_lso: true,
        url: function(){ return "https://www.facebook.com/settings?tab=ads&section=social"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {

            try {
                var selectCode = substringBetween('name="opt_out"', '</select>', pagehtml);
                var no_one = selectCode.indexOf('value="10" selected="1"') != -1;
                var only_friends = selectCode.indexOf('value="40" selected="1"') != -1;
                var login = pagehtml.indexOf('id="login_form"') != -1;

                if(login){
                    this.state = undefined;
                } else if( !(no_one | only_friends) ) {
                    Analytics.track('scanfail', 'fbInAds');
                    this.state = undefined;
                } else if(no_one){
                    this.state = false;
                } else if(lsoglobal.fbInAds) {
                    this.state = 'allowed'; //been clicked
                } else {
                    this.state = true;
                }
                this.setButtonState();

            } catch (err) {

                Analytics.track('scanfail', 'fbInAds_catch');
                this.state = undefined;
                this.setButtonState();            
            }
        },
        setButtonState: function () {
            setBtnState('#fbInAds', this.state);
        }
    };

    // Facial recognition
    thearray["fbFacialRecognition"] = {
        group: 'facebook',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_fb_faceRecognition',
        overlay_next_set_lso: true,
        debugger_seen_key: 'fbFacialRecognition',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        overlayurl: function(){ return "https://www.facebook.com/settings?tab=timeline&section=suggestions&view"; },
        url: function(){return this.overlayurl(); },
        parse: function (pagehtml) {

            try {

                var enabled = pagehtml.indexOf('name="tag_suggestion_enabled" value="1"') != -1;
                var disabled = pagehtml.indexOf('name="tag_suggestion_enabled" value="0"') != -1;

                var login = pagehtml.indexOf('id="login_form"') != -1;

                if(login){
                    this.state = undefined;
                } else if( !(enabled | disabled) ) {
                    Analytics.track('scanfail', 'fbFacialRecognition');
                    this.state = undefined;
                } else if(disabled){
                    this.state = false;
                } else if(lsoglobal.fbFacialRecognition) {
                    this.state = 'allowed'; //been clicked
                } else if(seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    this.state = 'allowed'; // came from seen fix state syncing
                } else {
                    this.state = true;
                }
                this.setButtonState();
                
            } catch (err) {

                Analytics.track('scanfail', 'fbFacialRecognition_catch');
                this.state = undefined;
                this.setButtonState();
            }
        },
        setButtonState: function () {
            setBtnState('#fbFacialRecognition', this.state);
        }
    };

    // Location history
    thearray["fbLocationHistory"] = {
        group: 'facebook',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_fb_locationHistory',
        overlay_next_set_lso: true,
        debugger_seen_key: 'fbLocationHistory',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        overlayurl: function() { return this.url(); },
        url: function() {
            return facebookuser.username ? 'https://www.facebook.com/' + facebookuser.username + '/allactivity?privacy_source=activity_log&log_filter=cluster_222' : '';
        },
        click: function() {
            setLSO('locationHistoryState', this.state, function(lso, key){ });
            defaultIssueClick("fbLocationHistory", false);
        },
        parse: function (pagehtml) {
            try {
                //var sanitycheck = pagehtml.indexOf('rel="async-post" ajaxify="/ajax/timeline/clear_travel_log_story.php?confirm=0"') != -1;
                var sanitycheck = pagehtml.indexOf('navItem_cluster_222') != -1;
                var login = pagehtml.indexOf('id="login_form"') != -1;
                var badstate = pagehtml.indexOf('uiBoxWhite bottomborder') != -1;
                var saved_lso_state = typeof lsoglobal.locationHistoryState != "undefined" ? lsoglobal.locationHistoryState : 'new';

                if(login){
                    this.state = undefined;
                } else if( sanitycheck == false ) {
                    Analytics.track('scanfail', 'fbLocationHistory');
                    this.state = undefined;
                    $('#fbLocationHistory').hide();
                } else if( badstate == false ){
                    this.state = false;
                } else if(saved_lso_state != 'new' && saved_lso_state != false) {
                    this.state = 'allowed'; //been clicked
                } else {
                    this.state = true;
                }

                this.setButtonState();
                
            } catch (err) {

                Analytics.track('scanfail', 'fbLocationHistory_catch');
                this.state = undefined;
                this.setButtonState();
            }
        },
        setButtonState: function () {
            setBtnState('#fbLocationHistory', this.state);
        }
    };
    
    //Review Active Sessions
    /*
    thearray["fbActiveSession"] = {
        group: 'facebook',
        enabled: true,
        refresh: true,
        state: true,
        overlayname: 'overlay_fb_activeSession',
        overlay_next_set_lso: true,
        overlay_files: [],
        debugger_seen_key: 'fbActiveSession',
        debugger_seen_apply_to: false,
        debugger_seen_state: true,
        url: function () { return ''; },
        overlay_next_set_lso: true,
        overlayurl: function () {

            if( facebookuser.username != '' ){
                var url = 'https://www.facebook.com/settings?tab=security&section=sessions&view';
                return url;

            } else {
                return '';
            }
        },
        click: function(force){
            force || (force = false);
            issueButtonOpenOverlay("fbActiveSession");
        },        
        setButtonState: function () {
           
            setBtnState('#fbActiveSession', !this.state);        
            refreshGraphButtons();
        },
        parse: function () {
            
            getLSO(function (lso) {           
                this.state = lso.fbActiveSession;

                if(seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    this.state = true; // came from seen fix state syncing
                }
                this.setButtonState();            
            }.bind(this));
        }
    };
    */
    

        
    thearray["linkLurkingSetting"] = {
        group: 'linkedin',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_li_linkLurkingSetting',
        overlay_next_set_lso: true,
        debugger_seen_key: 'linkLurkingSetting',
        // JL NOTE ~ debugger_seen_apply_to NOT DEFINED FOR THIS FIX. Won't sync this setting from server.
        url: function(){ return "https://www.linkedin.com/settings/wvmp-visibility"; },
        overlayurl: function(){ return "https://www.linkedin.com/settings/" },
        parse: function (pagehtml) {

            try {

                var login = pagehtml.indexOf('name="login"') != -1;
                var rightpage = pagehtml.indexOf('<input type="radio" name="wvmpParam" value="H"') != -1;
                var enabled = pagehtml.indexOf('<input type="radio" name="wvmpParam" value="H" checked ') != -1;

                if(login){
                    this.state = undefined;
                } else if(!rightpage){
                    Analytics.track('scanfail', 'linkLurkingSetting');
                    this.state = undefined;
                } else if(enabled){
                    this.state = false;
                } else if(lsoglobal.linkLurkingSetting) {
                    this.state = 'allowed'; //been clicked
                } else {
                    this.state = true;
                }
                this.setButtonState();
            
            } catch (err) {

                Analytics.track('scanfail', 'linkLurkingSetting_catch');
                this.state = undefined;
                this.setButtonState();
            }

        },
        setButtonState: function () {

            setBtnState('#linkLurkingSetting', this.state);
        }
    };
    


    thearray["linkPublicProfileReview"] = {
        group: 'linkedin',
        enabled: true,
        viewonly: true,
        refresh: true,
        state: undefined,
        overlay_next_set_lso: true,
        overlayname: 'overlay_li_linkPublicProfileReview',
        url: function(){ return "https://www.linkedin.com/profile/public-profile-settings"; },
        overlayurl: function(){ return thearray["linkPublicProfileReview"].url(); },
        debugger_seen_key: 'linkPublicProfileReview',
        // JL NOTE ~ debugger_seen_apply_to NOT DEFINED FOR THIS FIX. Won't sync this setting from server.
        parse: function (pagehtml) {

            getLSO(function (lso) {           
                this.state = (( lso.linkPublicProfileReview == undefined ) ? true : (!lso.linkPublicProfileReview));
                this.setButtonState();            
            }.bind(this));
        },
        setButtonState: function () {
            setBtnState('#linkPublicProfileReview', this.state);
        }
    };
    

    thearray["linkBroadcastSetting"] = {
        group: 'linkedin',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_li_linkBrodcastSetting',
        overlay_next_set_lso: true,
        url: function(){ return "https://www.linkedin.com/settings/activity-broadcasts"; },
        overlayurl: function(){ return 'https://www.linkedin.com/settings/'; },
        debugger_seen_key: 'linkBroadcastSetting',
        // JL NOTE ~ debugger_seen_apply_to NOT DEFINED FOR THIS FIX. Won't sync this setting from server.
        parse: function (pagehtml) {

            try {
                var login = pagehtml.indexOf('name="login"') != -1;
                var rightpage = pagehtml.indexOf('<input type="checkbox" name="activity" value="activity"') != -1;
                var enabled = pagehtml.indexOf('<input type="checkbox" name="activity" value="activity" checked ') != -1;

                if(login){
                    this.state = undefined;
                } else if(!rightpage){
                    Analytics.track('scanfail', 'linkBroadcastSetting');
                    this.state = undefined;
                } else if(!enabled){
                    this.state = false;
                } else if(lsoglobal.linkBroadcastSetting) {
                    this.state = 'allowed'; //been clicked
                } else {
                    this.state = true;
                }
                this.setButtonState();
            
            } catch (err) {

                Analytics.track('scanfail', 'linkBroadcastSetting_catch');
                this.state = undefined;
                this.setButtonState();
            }

        },
        setButtonState: function () {

            setBtnState('#linkBroadcastSetting', this.state);

        }
    };
    

    thearray["linkReviewApps"] = {
        group: 'linkedin',
        enabled: true,
        viewonly: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_li_linkReviewApps',
        overlay_next_set_lso: true,
        url: function(){ return "https://www.linkedin.com/secure/settings?userAgree=&goback=%2Enas_*1_*1_*1"; },
        overlayurl: function(){ return thearray["linkReviewApps"].url(); },
        debugger_seen_key: 'linkReviewApps',
        // JL NOTE ~ debugger_seen_apply_to NOT DEFINED FOR THIS FIX. Won't sync this setting from server.
        parse: function (pagehtml) {

            getLSO(function (lso) {     
                this.state = (( lso.linkReviewApps == undefined ) ? true : (!lso.linkReviewApps));  
                this.setButtonState();            
            }.bind(this));

        },
        setButtonState: function () {
            setBtnState('#linkReviewApps', this.state);
        }
    };
    


    thearray["linkConnectionVisibility"] = {
        group: 'linkedin',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_li_linkConnectionVisibility',
        overlay_next_set_lso: true,
        url: function(){ return "https://www.linkedin.com/settings/connection-visibility"; },
        overlayurl: function(){ return 'https://www.linkedin.com/settings/'; },
        debugger_seen_key: 'linkConnectionVisibility',
        // JL NOTE ~ debugger_seen_apply_to NOT DEFINED FOR THIS FIX. Won't sync this setting from server.
        parse: function (pagehtml) {

            try {
                var login = pagehtml.indexOf('name="login"') != -1;
                var onlyme = pagehtml.indexOf('option value="ME" selected') != -1;
                var connections = pagehtml.indexOf('option value="CONNECTIONS" selected') != -1;

                if(login){
                    this.state = undefined;
                } else if( !(onlyme | connections) ){
                    Analytics.track('scanfail', 'linkConnectionVisibility');
                    this.state = undefined;
                } else if(onlyme){
                    this.state = false;
                } else if(lsoglobal.linkConnectionVisibility) {
                    this.state = 'allowed'; //been clicked
                } else {
                    this.state = true;
                }
                this.setButtonState();
            
            } catch (err) {

                Analytics.track('scanfail', 'linkConnectionVisibility_catch');
                this.state = undefined;
                this.setButtonState();
            }

        },
        setButtonState: function () {
            setBtnState('#linkConnectionVisibility', thearray["linkConnectionVisibility"].state);
        }
    };


   
    thearray["gSearchHistory"] = {
        group: 'google',
        enabled: true,
        refresh: true,
        state: undefined,
        overlayname: 'overlay_g_searchHistoryDeleted',
        debugger_seen_key: 'gSearchHistory',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        overlay_next_set_lso: true,
        url: function(){ return "https://www.google.com/settings/accounthistory/search"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {

            try {
                var good = pagehtml.indexOf('aria-disabled=\"true\"') != -1;
                var bad = pagehtml.indexOf('aria-checked=\"false\"tabindex=\"0\"') != -1;
                var login = pagehtml.indexOf('id="gaia_loginform"') != -1;

                if ( login ) {
                    //if (lsoglobal.gSearchHistory) {
                    //    this.state = 'allowed'; // we've seen it before
                    //} else {
                        this.state = undefined;
                    //}
                } else if (!(good | bad)) {
                    Analytics.track('scanfail', 'gSearchHistory');
                    this.state = undefined;
                } else if (good) {
                    this.state = false;
                } else if (lsoglobal.gSearchHistory) {
                    //been clicked
                    this.state = 'allowed';
                } else if (seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    // came from seen fix state syncing
                    this.state = 'allowed';
                } else {
                    this.state = true;
                }
                this.setButtonState();

            } catch (err) {

                Analytics.track('scanfail', 'gSearchHistory_catch');
                this.state = undefined;
                this.setButtonState();
            }

        },
        setButtonState: function () {
            if (typeof this.state == 'undefined')
                showLoginButton('gSearchHistory');
            setBtnState('#gSearchHistory', this.state);

        },
        click: function () {
            defaultIssueClick("gSearchHistory");
        }
    };
    

    
    thearray["youTubeHistory"] = {
        group: 'google',
        enabled: true,
        refresh: true,
        viewonly: true,
        state: undefined,
        overlayname: 'overlay_g_youtubeHistory',
        debugger_seen_key: 'youTubeHistory',
        debugger_seen_apply_to: true,
        debugger_seen_state: 'allowed',
        overlay_next_set_lso: true,
        url: function(){ return "https://www.youtube.com/feed/history"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {
        
            try {
                var rightpage = pagehtml.indexOf('watch-history-pause-button') != -1;
                var bad = $(':button[id=\"watch-history-pause-button\"]').attr('style') == "";
                var login = pagehtml.indexOf('https://accounts.google.com/ServiceLogin') != -1;

                if( login ) {
                    this.state = undefined;
                } else if( !(rightpage | bad) ){
                    Analytics.track('scanfail', 'youTubeHistory');
                    this.state = undefined;
                } else if(!bad){
                    this.state = false;
                } else if(lsoglobal.youtubeHistory) {
                    this.state = 'allowed'; //been clicked
                } else if(seen_fixes.indexOf(this.debugger_seen_key) != -1) {
                    this.state = 'allowed'; // came from seen fix state syncing
                } else {
                    this.state = true;
                }
                this.setButtonState();

            } catch (err) {

                Analytics.track('scanfail', 'youTubeHistory_catch');
                this.state = undefined;
                this.setButtonState();
            }
        },
        setButtonState: function () {
            setBtnState('#youTubeHistory', this.state);
        }
    };
        

    

    thearray["gSharedEndorsements"] = {
        group: 'google',
        enabled: true,
        refresh: true,
        //thearray["SharedEndorsements"].refreshgroup = 1;
        state: undefined,
        overlayname: 'overlay_g_SharedEndorsements',
        overlay_next_set_lso: true,
        debugger_seen_key: 'gSharedEndorsements',
        // JL NOTE ~ debugger_seen_apply_to NOT DEFINED FOR THIS FIX. Won't sync this setting from server.
        url: function(){ return "https://plus.google.com/settings/endorsements"; },
        overlayurl: function(){ return this.url(); },
        parse: function (pagehtml) {
            
            try {

                if(  pagehtml.indexOf('id="gaia_loginform"') != -1 ) { //login form - not logged in

                    this.state = undefined;
                
                } else if( pagehtml.indexOf('<input type="checkbox"') == -1 ){ // no checkbox wrong page
                    
                    Analytics.track('scanfail', 'gSharedEndorsements');
                    this.state = undefined;

                } else { // parse state

                    var radioEnabled = substringBetween('<input type="checkbox"', '/>', pagehtml);
                    var enabled = (radioEnabled.indexOf('checked') != -1);          

                    if(!enabled){
                        this.state = false;
                    } else if(lsoglobal.gSharedEndorsements) {
                        this.state = 'allowed'; //been clicked
                    } else {
                        this.state = true;
                    }
                    this.setButtonState();
                }

            } catch (err) {

                Analytics.track('scanfail', 'gSharedEndorsements_catch');
                this.state = undefined;
                this.setButtonState();
            }
        },
        setButtonState: function () {
            setBtnState('#gSharedEndorsements', this.state);
        }
    };

    /*
    thearray["deleteCookies"] = {
        group: 'tracking',
        enabled: true,
        refresh: true,
        state: true,
        overlayname: '',
        url: function(){ return ''; },
        overlayurl: function(){ return ''; },
        setButtonState: function () { setBtnState('#deleteCookies', this.state); },
        parse: function (pagehtml) {

            try {

                if((uidata.tracking.all_list.length > 0)   ){ //if there are cookies in the list;            
                    this.state = true;    
                }else {
                    this.state = false;
                }
                this.setButtonState();
            } catch (err) {
                this.state = undefined;
                this.setButtonState();
            }

        },
        bindevents: function () {
          
            $('#deleteCookies').click(function(){

                Analytics.track('click', 'delallcookies');

                addonCall('deleteCookies', {domains: uidata.tracking.all_list}, function (iresponse) { 
                    $('.all_list.tracking_list').html('');
                    thearray["deleteCookies"].state = false;
                    thearray["deleteCookies"].setButtonState();
                }); 
            }); 
        }
    };
    */
    


    thearray["setBlockTracking"] = {
        group: 'tracking',
        enabled: true,
        refresh: false,
        state: undefined,
        url: '',
        //thearray["setBlockTracking"].url = function(){ return ""; };
        overlayname: '',
        overlayurl: function(){ return ""; },
        setButtonState: function () { setBtnState('#setBlockTracking', this.state); },
        parse: function (pagehtml) {
            getLSO(function (lso) {
                this.state = lso.setBlockTracking;
                this.setButtonState();        
            }.bind(this));
        },
        bindevents: function () {
            $('#setBlockTracking').click( function() {

                Analytics.track('click', 'setBlockTracking');

                if( $(this).hasClass('istrue') || $(this).hasClass('isallowed') ) {

                    if (typeof window.isAVGPrivacyFixIE != "undefined" && _ie_is_admin == false)
                    {
                        modal.trigger($('#block_tracking_needs_admin'));
                        $('#modal .drat').unbind('click');
                        $('#modal .drat').click(function () {            
                            modal.hide();
                            addonCall('testUac', { }, function (response) {});
                        })

                        $('#modal .btnAllow').unbind('click');
                        $('#modal .btnAllow').click(function () {            
                            modal.hide();
                        })
                    }
                    else
                    {
                        modal.trigger($('#block_tracking_bubble'));

                        if (browser == 'Firefox' || typeof window.isAVGPrivacyFixIE != "undefined") {
                            $('#modal span').css('display', 'none');
                        }

                        var _allow_tracking = function () {

                            modal.hide();
                        };

                        $('#modal_close_link').click(_allow_tracking);

                        $('#modal .btnAllow').unbind('click');
                        $('#modal .btnAllow').click(_allow_tracking);

                        $('#modal .actually_block').unbind('click');
                        $('#modal .actually_block').click(function () {            
                 
                            modal.hide();

                            addonCall('deleteCookies', { domains: uidata.tracking.all_list }, function (iresponse) { });
                            addonCall('setBlockTracking', {state:'false'}, function (response) {

                                if (typeof response.data.lso.trackerBlockCount == "undefined")
                                    response.data.lso.trackerBlockCount = 0;
                                        
                                var tracker_count = response.data.lso.trackerBlockCount + uidata.tracking.all_list.length;

                                setLSO('trackerBlockCount', tracker_count, function (lso, key) {
                                    thearray['setBlockTracking'].state = response.data.lso.setBlockTracking;
                                    thearray["setBlockTracking"].setButtonState();

                                    switchOutTrackerList(uidata.tracking.all_list.length);

                                    uidata.tracking.all_list = [];
                                });
                                
                            });

                        });
                    }
                    
                } else if( $(this).hasClass('isfalse') ) {
                                      
                    //setLSO('setBlockTracking', 'true', function (lso, key) { 
                    addonCall('setBlockTracking', {state:'true'}, function (response) {
                        showTrackerStats();
                        thearray['setBlockTracking'].state = response.data.lso.setBlockTracking;
                        thearray["setBlockTracking"].setButtonState();            
                    });

                }
            });
        }
    };

     

    thearray["setWidgetBlocking"] = {
        group: 'tracking',
        enabled: true,
        refresh: true,
        state: undefined,
        url: function(){ return ''; },
        overlayname: '',
        overlayurl: function(){ return ''; },
        setButtonState: function () {
            if (this.state == 'allowed')
            {
                $('#setWidgetBlocking .text.norm').css('display', 'none');
                $('#setWidgetBlocking .text.norm.allowed').css('display', 'table-cell');
            }
            else if (this.state == true || this.state == "true")
            {
                $('#setWidgetBlocking .text.norm').css('display', 'table-cell');
                $('#setWidgetBlocking .text.norm.allowed').css('display', 'none');
            }
            else
            {
                $('#setWidgetBlocking .text.norm').css('display', 'none');
                $('#setWidgetBlocking .text.norm.allowed').css('display', 'none');
            }
            setBtnState('#setWidgetBlocking', this.state);
        },
        parse: function (pagehtml) {

            $('#setWidgetBlocking .text.norm.allowed').css('display', 'none');

            getLSO(function (lso) {                
                this.state = lso.setWidgetBlocking;
                this.setButtonState();            
            }.bind(this));
            
        },        
        click: function () {

            if( $('#setWidgetBlocking').hasClass('isfalse') )
            { //this is undo
                                    
                // undo the blocking
                setLSO('setBlockFacebook', 'true', function (lso, key) {});
                setTimeout(function() { setLSO('setBlockGoogle', 'true', function (lso, key) {}); }, 20);
                setTimeout(function() { setLSO('setWidgetBlocking', 'true', function (lso, key) {}); }, 40);
                setTimeout(function() {
                    thearray['setWidgetBlocking'].state = 'true';
                    thearray["setWidgetBlocking"].setButtonState();

                    if (typeof window.isAVGPrivacyFixIE != "undefined") {
                        addonCall('setWidgetBlocking', {state: 'off'}, function (response) {});
                    }
                }, 100);
            }
            else if( $('#setWidgetBlocking').hasClass('istrue') || $('#setWidgetBlocking').hasClass('isallowed') )
            {

                modal.trigger($('#widget_blocking_modal'));

                $('#modal .actuallyBlock').unbind('click');
                $('#modal .actuallyBlock').click(function () {

                     // set the blocking
                    setLSO('setBlockFacebook', 'false', function (lso, key) {});
                    setTimeout(function() { setLSO('setBlockGoogle', 'false', function (lso, key) {}); }, 20);
                    setTimeout(function() { setLSO('setWidgetBlocking', 'false', function (lso, key) {}); }, 40);

                    setTimeout(function() {
                        modal.hide();
                        Analytics.track('issueclick', 'setWidgetBlocking');
                        thearray['setWidgetBlocking'].state = 'false';
                        thearray["setWidgetBlocking"].setButtonState();

                        if (typeof window.isAVGPrivacyFixIE != "undefined") {
                            addonCall('setWidgetBlocking', {state: 'on'}, function (response) {});
                        }
                    }, 100);
                });


                var _allow_widgets = function()
                {
                    modal.hide();
                    setLSO('setBlockFacebook', 'allowed', function (lso, key) {});
                    setTimeout(function() { setLSO('setBlockGoogle', 'allowed', function (lso, key) {}); }, 20);
                    setTimeout(function() { setLSO('setWidgetBlocking', 'allowed', function (lso, key) {}); }, 40);
                    setTimeout(function() {
                        thearray['setWidgetBlocking'].state = 'allowed';
                        thearray["setWidgetBlocking"].setButtonState();

                        if (typeof window.isAVGPrivacyFixIE != "undefined") {
                            addonCall('setWidgetBlocking', {state: 'off'}, function (response) {});
                        }
                    }, 100);
                }
                $('#modal_close_link').click(_allow_widgets);
                $('#modal .btnAllow').unbind('click');
                $('#modal .btnAllow').click(_allow_widgets);
            }
        }
    };
    
    thearray["healthBar"] = {
        group: 'publisher',
        enabled: true,
        refresh: true,
        state: true,
        overlayname: '',
        url: function(){ return ''; },
        overlayurl: function(){ return ''; },
        setButtonState: function () { setBtnState('#healthBar', this.state); },
        enable_alerts: function() {

            Analytics.track("click", "healthBarEnabled");
            setLSO('permit_bubble', 'active', function(lso, key){                               
                this.parse();
            }.bind(this));
        },
        parse: function (pagehtml) {

            getLSO(function (lso) {                
                this.state = lso.permit_bubble == 'active' ? false : true;
                this.setButtonState();
            }.bind(this));

        },
        click: function () {

            if (this.state == false)
            {
                Analytics.track("click", "healthBarDisabled");
                setLSO('permit_bubble', 'inactive', function(lso, key){               
                    this.parse();
                }.bind(this));
            }
            else
            {
                this.enable_alerts();
                setTimeout(function() {
                    addonCall('openBubble', {}, function() {}); 
                }, 100);
            }
        }
    };


    // ======= END OF BUTTON INFO ARRAY ============================================================




    function substringBetween(startStr, endStr, str) {

        if (str == null) {
            return null;
        }
        var start = str.indexOf(startStr);
        if (start == -1) {
            return null;
        }

        var end = str.indexOf(endStr, start + startStr.length);
        if (end == -1) {
            return null;
        }

        return str.substring(start + startStr.length, end);
    }
    

    function uid() {
        // http://www.ietf.org/rfc/rfc4122.txt
        var s = [];
        var hexDigits = "0123456789abcdef";
        for (var i = 0; i < 36; i++) {
            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
        }
        s[14] = "4";  // bits 12-15 of the time_hi_and_version field to 0010
        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01
        s[8] = s[13] = s[18] = s[23] = "-";

        var uuid = s.join("");
        return uuid;
    }

    var debugsession = uid();

    var singlelogs = {
        facebook_logged_in: false,
        facebook_logged_out: false,
        load_beginenabled: false,
        load_begindisabled: false,
        google_logged_in:false,
        google_logged_out:false,
        linkedin_logged_in: false,
        linkedin_logged_out: false,
        how_to_get_100: false
    };

    function remove_account() {
        if (!confirm('Are you sure you want to remove your account?\n\nlol'))
            return false;

        $.ajax({
            url: '/HomeAPI/removeUser?_token='+facebookAccessToken,
            type: 'POST',
            success: function() {
                FB.api('/me/permissions', 'DELETE', function(res){
                    if(res === true)
                    {
                        // success, log out
                        location.reload();
                    }
                    else if(res.error)
                    {
                        alert('There was an issue logging you out of Facebook: '+ res.error.message);
                    }
                }.bind(this));
            },
            error: function() {
                alert('couldn\'t remove your account. are you sure you had one in the first place?');
            }
        });
    }

    function setCookie(c_name, value, exdays) {
        var exdate = new Date();
        exdate.setDate(exdate.getDate() + exdays);
        var c_value = escape(value) + ((exdays == null) ? "" : "; expires=" + exdate.toUTCString()+"; path=/");
        document.cookie = c_name + "=" + c_value;
    }

    function getCookie(c_name) {
        var c_value = document.cookie;
        var c_start = c_value.indexOf(" " + c_name + "=");
        if (c_start == -1) {
            c_start = c_value.indexOf(c_name + "=");
        }
        if (c_start == -1) {
            c_value = null;
        }
        else {
            c_start = c_value.indexOf("=", c_start) + 1;
            var c_end = c_value.indexOf(";", c_start);
            if (c_end == -1) {
                c_end = c_value.length;
            }
            c_value = unescape(c_value.substring(c_start, c_end));
        }
        return c_value;
    }

    function consolelog(msg) {

        if (typeof console != 'undefined') {
            console.log(msg);
        }

    }


    /// ------------- IE SPECIFIC FIXES ------------------- //
    if (!Array.prototype.indexOf) {
        Array.prototype.indexOf = function(obj, start) {
             for (var i = (start || 0), j = this.length; i < j; i++) {
                 if (this[i] === obj) { return i; }
             }
             return -1;
        }
    }
      
    function next_tag_up(selector, element)
    {
        return $(element).is(selector) ?
                    element :
                    next_tag_up(selector, element.parentNode);
    }

</script>

<div class="completion">
    <div class="interior">
        <div class="progress_text">Your progress</div>
        <div class="bar_container">
            <div class="bar">
                
            </div>
        </div>
        <div class="bar_right">
            <div class="includes">Includes:</div>
            <ul class="icons">
    			<li class="icon_tr"><img src="/images/avgprivacyfix/icon_tr.png"/></li>
                <li class="icon_fb"><img src="/images/avgprivacyfix/icon_fb.png"/></li>
                <li class="icon_gl"><img src="/images/avgprivacyfix/icon_gl.png"/></li>
                <li class="icon_tw"><img src="/images/avgprivacyfix/icon_tw.png"/></li>
                <li class="icon_li last"><img src="/images/avgprivacyfix/icon_li.png"/></li>
            </ul>
        </div>
    </div>
</div>

<div id="wrap" class="margin">       

</div>


<div id="reset_seen_state" style="display: none; cursor: pointer; position: absolute; top: 0px; right: 160px; width: 200px; padding: 4px 5px; background-color: #393; color: white;">RESET USER ACCOUNT</div>
<div id="clear_cache" style="display: none; cursor: pointer; position: absolute; top: 0px; right: 0px; width: 120px; padding: 4px 5px; background-color: #933; color: white;">CLEAR CACHE</div>

<div class="confirmbox widgets" style="display: none;" id="privacyfix_alerts_modal">
    <div class="widget_box alerts">
        <h1>Enable PrivacyFix Alerts</h1><br/><p>Be warned of privacy risks on the sites you visit. Get notified when they change their privacy policies or have data breaches. Click on the icon to see the issues or to get to your PrivacyFix Dashboard.</p>
        
        <div class="understanding">Understand your status</div>
        <div class="ratings_disclosure">Understand your status</div>
        <img class="arrow" src="/images/avgprivacyfix/alerts/arrow.png" width="137" height="60"/>
        <ul class="tutorial">
        	<li class="first">
        		<img src="/images/avgprivacyfix/alerts/icon-green.png"/>
        		Privacy protection is high on this site
        	</li>
        	<li>
        		<img src="/images/avgprivacyfix/alerts/icon-orange.png"/>
        		This site has known issues
        	</li>
        	<li class="last">
        		<img src="/images/avgprivacyfix/alerts/icon-orange-no.png"/>
        		This site has new issues
        	</li>
        </ul>
        <div class="action_buttons clear">               
            <div class="actuallyBlock" id="modal_enable_alerts">
                ENABLE PRIVACYFIX ALERTS
            </div>

            <div class="btnAllow" id="modal_dismiss_alerts">
                Maybe later
            </div>
        </div>
    </div>
</div>
<div id="help_content" style="display: none;">
	<div class="help">
		<div class="top_part ">
			<h1>Having trouble? Try these tips:</h1>
			PrivacyFix is a bit complicated under the hood, so things may not always work perfectly. Take these steps if you have a problem.
		</div>
		<ul class="columns clear">
			<li>
				<h2>Restart your browser</h2>
				<p>
					A fresh session makes sure that your browser is up to date. If your tabs don't automatically re-load, you can find them in Settings > History. Note that PrivacyFix does not work if you are using Private or Incognito browsing.
				</p>
			</li>
			<li>
				<h2>Disable add-ons</h2>
				<p>
					Other add-ons (particularly privacy tools) can interfere with PrivacyFix. Go to Addons (Firefox) or Extensions (Chrome) to disable them temporarily and re-run PrivacyFix.
				</p>
			</li>
			<li>
				<h2>Tell us about it</h2>
				<p>
					We are working hard to make PrivacyFix a great experience for every user. If these solutions didn't work for you, please <a href="/start/faq" target="_blank">check our FAQ</a> or <a href="mailto:privacyfix-support@avg.com" target="_blank">contact us</a> so we can help.
				</p>
			</li>
		</ul>
	</div>
</div>

        </div>

<div class="sharea">
    <div class="gutter">
        <ul>
            <li><a target="_blank" class="bottom_facebook" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fprivacyfix.com%2Fstart"><img src="/images/avgprivacyfix/facebook.png" width="74" height="74"/></a></li>
            <li><a target="_blank" class="bottom_twitter" href="https://twitter.com/intent/tweet?source=webclient&amp;text=I just used Privacyfix to lock down my privacy and get ready for Facebook Graph Search. http://www.privacyfix.com"><img src="/images/avgprivacyfix/twitter.png" width="74" height="74"/></a></li>
            <li><a target="_blank" class="bottom_email" href="/start/mailtoPF?addrs=&amp;subject=Lock down your privacy settings with PrivacyFix&amp;msg=Lock down your online privacy settings on Facebook, Google, LinkedIn, and more with AVG PrivacyFix. It's simple and free. https://www.privacyfix.com"><img src="/images/avgprivacyfix/email.png" width="74" height="74"/></a></li>
        </ul>
        Privacy is something to share
    </div>
</div>


<div class="footer">
    <div class="gutter">
        <div class="clear">
            <div class="affiliation">PrivacyFix is not affiliated with Facebook, Twitter, LinkedIn or Google.</div>
            <ul class="apps">
                <li><a target="_blank" class="install_ios" href="https://itunes.apple.com/us/app/avg-privacyfix/id688795921?ls=1&mt=8"><img src="/images/avgprivacyfix/app_store.png" width="223" height="64"/></a></li>
                <li><a target="_blank" class="install_android" href="https://play.google.com/store/apps/details?id=com.avg.privacyfix"><img src="/images/avgprivacyfix/google_play.png" width="187" height="64"/></a></li>
            </ul>
            <ul class="nav">
                <li><a target="_blank" href="/start/faq">FAQ</a></li>
                <li><a target="_blank" href="http://support.avg.com">Support</a></li>
                <li><a target="_blank" href="http://www.avg.com/policies">Terms</a></li>
                <li><a target="_blank" href="http://www.avg.com/cookies">Cookies</a></li>
            </ul>
        </div>
        <div class="copyright">
            Android&trade; is a trademark of Google, Inc. Facebook&reg; is a trademark of Facebook, Inc., registered in the United States and in other countries. Chrome&reg; is a trademark of Google, Inc. LinkedIn&reg; is a registered trademark of LinkedIn corporation and its affiliates in the US and other countries. Twitter&reg; is a trademark of Twitter, Inc., registered in the United States and in other countries. Firefox&reg; is a trademark of the Mozilla Foundation. iOS&reg; is a trademark of Cisco in the US and is used by Apple under license. Internet Explorer is a trademark of Microsoft.
        </div>
        <em id="glworth_image_placeholder"></em><em id="fbworth_image_placeholder"></em>
    </div>
</div>

        <script type="text/template" id="_t_sectTwitter"><!--
<div class="sectionbar twitter clear">

    <div class="help"><a href="#" id="help_link">{dash.help}</a></div>

    <div style="float:left;">
        {dash.sections.twitter}
    </div>
    <div id="spin_twitter" class="sectionspinner">

    </div>

</div>
-->

<div class="login_prompt twitter">

    <div class="text">
        {dash.tw.loggedout_text}
    </div>  
    <div class="loginbtn">
        {dash.btn.login}
    </div>
    
</div>



<div id="wrapsites" class="section twitter dynamic" section="twitter">

    

             


    <div class="actionArea">
        <div class="infoarea twitter">

            <div class="stats_area">
                <h3><em>{twitter_worth.your_worth}</em></h3>
                <div class="twitter_worth">
                    <div class="worth" id="tw_worth_total">$0.00</div>
                    <a class="twworthlink" href="#" target="_blank"><img src="/images/avgprivacyfix/twitter.png"/> {twitter_worth.share}</a>
                    <p>{twitter_worth.worth_explanation}</p>
                    <div class="userstats">
                        <div><span class="tweets_month">-</span> {twitter_worth.tweets_month}</div>
                        <input type="text" value="0.2" id="tw_tweets_range">
                        <div><span class="my_followers">-</span> {twitter_worth.followers}</div>
                        <input type="text" value="0.2" id="tw_followers_range">
                    </div>
                    <hr/>
                    <p>{twitter_worth.tweaks}</p>
                    <div class="controls">
                        <div class="loc">
                            <h4>{twitter_worth.location}</h4>
                            <div class="form">
                                <input type="radio" id="tw_usa" name="tw_loc" checked="checked" />
                                <label for="tw_usa"><span></span>{twitter_worth.usa}</label>
                            </div>
                            <div class="form">
                                <input type="radio" id="tw_other" name="tw_loc" />
                                <label for="tw_other"><span></span>{twitter_worth.other}</label>
                            </div>
                        </div>
                        <div class="views">
                            <h4>{twitter_worth.daily_timeline_views}</h4>
                            <input type="text" value="0.2" id="tw_views_range">
                            <h5 id="tw_views_per_day">20</h5>
                        </div>
                    </div>
                </div>

            </div>
            
        
            
        </div>




        <div class="right issuebuttonswrap">            

                    <div class="internal_header twitter">
                        {dash.sections.twitter} 
                    </div>
                    

                    <div class="row">            
   
                               
                        <div class="rowcontent">

                            <div class="box dropshadow isundefined twissuebutton" id="twPhotosTaggable" >

                                <div class="text norm">
                                    {fix.twPhotosTaggable.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.twPhotosTaggable.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.twPhotosTaggable.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.twPhotosTaggable.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>

                            <!--
                            <div class="box dropshadow isundefined twissuebutton" id="twTweetsProtected" >

                                <div class="text norm">
                                    {fix.twTweetsProtected.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.twTweetsProtected.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.twTweetsProtected.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.twTweetsProtected.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>
                            -->

                            <div class="box dropshadow isundefined twissuebutton" id="twLocation" >
                                <div class="text norm">
                                    {fix.twLocation.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.twLocation.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.twLocation.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.twLocation.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>                                                                 


                            <div class="box dropshadow isundefined twissuebutton"  id="twEmailSearch" >
                                <div class="text norm">
                                    {fix.twEmailSearch.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.twEmailSearch.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.twEmailSearch.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.twEmailSearch.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>


                            <div class="box dropshadow isundefined twissuebutton"  id="twReviewApps" >
                                <div class="text norm">
                                    {fix.twReviewApps.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.twReviewApps.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.twReviewApps.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.twReviewApps.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>
                                                      
                        </div>
                        <div style="clear:both;"></div>
                    </div>

            
        </div>

        <div style="clear:both;"></div>
    </div>




        
    <div style="clear:both;"></div>
        
</div></script>
        <script type="text/template" id="_t_sectFacebook"><!--
<div class="sectionbar facebook clear">
        
        <div style="float:left;">
            {dash.sections.facebook} 
        </div>
        <div id="spin_facebook" class="sectionspinner">

        </div>

</div>
-->

<div class="login_prompt facebook">

    <div class="text">
        {dash.fb.loggedout_text}
    </div>  
    <div class="loginbtn">
        {dash.btn.login}
    </div>

</div>  



<div id="wrapsites" class="section facebook dynamic" section="facebook">
             
    
    <div class="actionArea">
        <div class="infoarea facebook">
            <div class="stats_area">
                <h3><em>{protection.your_worth}</em></h3>
                <div class="facebook_worth">
                    <div class="protection_level">
                        <div class="avatar">
                            <div class="pic" id="facebook_avatar_pic"></div>
                        </div>

                        <div class="indicator" id="fb_worth_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                        <div class="worth" id="fb_worth_total">$0.00</div><br/>
                        <a class="fbworthlink" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fprivacyfix.com%2Fstart" target="_blank"><img src="/images/avgprivacyfix/fb_logo.png"/> {protection.share}</a>
                        
                    </div>
            
                
                
                    
                    
                    <p id="fb_worth_loading">{dash.fb.worth_loading}</p>
                    <p id="fb_worth_done_loading" style="display: none;">{protection.worth_explanation}</p>
                    <div class="expanded" style="display: none;">
                        <div class="worth_detail_container">
                            <div class="details worth_details">
                                <div class="activity">
                                    <div class="heading"><img src="/images/avgprivacyfix/activity-dark.png"/>{protection.worth_activity}</div>
                                    <ul class="clear">
                                        <li>
                                            <div class="indicator likes_per_month_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="likes_per_month">-</h4>
                                            {protection.worth_likes}
                                        </li>
                                        <li>
                                            <div class="indicator posts_per_month_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="posts_per_month">-</h4>
                                            {protection.worth_posts}
                                        </li>
                                        <li>
                                            <div class="indicator photos_per_month_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="photos_per_month">-</h4>
                                            {protection.worth_photos}
                                        </li>
                                    </ul>
                                </div>
                                <div class="profile">
                                    <div class="heading"><img src="/images/avgprivacyfix/profile-dark.png"/>{protection.worth_profile}</div>
                                    <ul class="clear">
                                        <li>
                                            <div class="indicator friends_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="friends">-</h4>
                                            {protection.worth_friends}
                                        </li>
                                        <li>
                                            <div class="indicator sex_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="sex">-</h4>
                                            {protection.worth_gender}
                                        </li>
                                    </ul>
                                </div>
                                <div class="location">
                                    <div class="heading"><img src="/images/avgprivacyfix/location-dark.png"/>{protection.worth_location}</div>
                                    <ul class="clear USA" style="display: block;">{dash.fb.worth_us}</ul>
                                    <ul class="clear EU" style="display: none;">{dash.fb.worth_eu}</ul>
                                    <ul class="clear Asia" style="display: none;">{dash.fb.worth_asia}</ul>
                                    <ul class="clear other" style="display: none;">{dash.fb.worth_other}</ul>
                                </div>
                            </div>
                            <!-- <a href="/start/faq#networth" target="_blank" class="faq_link">{dash.fb.worth_faq_link}</a> -->
                        </div>
                    </div>
                    <div class="collapsed">
                        <div class="worth_detail_container">
                            <ul class="clear worth_categories"><li class="activity" id="sel_activity">{protection.worth_activity}</li><li class="profile" id="sel_profile">{protection.worth_profile}</li><li class="location" id="sel_location">{protection.worth_location}</li></ul>
                            <div class="details worth_details">
                                <div class="activity">
                                    <ul class="clear">
                                        <li>
                                            <div class="indicator likes_per_month_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="likes_per_month">-</h4>
                                            {protection.worth_likes}
                                        </li>
                                        <li>
                                            <div class="indicator posts_per_month_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="posts_per_month">-</h4>
                                            {protection.worth_posts}
                                        </li>
                                        <li>
                                            <div class="indicator photos_per_month_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="photos_per_month">-</h4>
                                            {protection.worth_photos}
                                        </li>
                                    </ul>
                                </div>
                                <div class="profile">
                                    <ul class="clear">
                                        <li>
                                            <div class="indicator friends_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="friends">-</h4>
                                            {protection.worth_friends}
                                        </li>
                                        <li>
                                            <div class="indicator sex_indicator"><div class="i1"></div><div class="i2"></div><div class="i3"></div></div>
                                            <h4 class="sex">-</h4>
                                            {protection.worth_gender}
                                        </li>
                                    </ul>
                                </div>
                                <div class="location">
                                    <ul class="clear USA" style="display: none;">{dash.fb.worth_us}</ul>
                                    <ul class="clear EU" style="display: none;">{dash.fb.worth_eu}</ul>
                                    <ul class="clear Asia" style="display: none;">{dash.fb.worth_asia}</ul>
                                    <ul class="clear other" style="display: none;">{dash.fb.worth_other}</ul>
                                </div>
                            </div>
                            <a href="/start/faq#networth" target="_blank" class="faq_link">{dash.fb.worth_faq_link}</a>
                        </div>
                    </div>
                </div>
            </div>

            
            <div class="stats_area">
                <h3><em>{dash.fb.track_percentage_header}</em></h3>
                <div class="tracks_on">
                    <strong id="fb_tracks_on_percent">0%</strong> {dash.fb.track_percentage_count}
                </div>
                <div class="not_enough_data"><div>{dash.fb.not_enough_data}</div></div>
            </div>
            <div class="family">
                <hr/>
                <h3><em>{dash.fb.share_with_family_header}</em></h3>
                <div class="members"></div>
            </div>
            
        </div>




        <div class="right issuebuttonswrap">            
                    
                    <div class="internal_header facebook">
                        {dash.sections.facebook} 
                    </div>
                    

                    <div class="row">            
           
                        <div class="rowcontent"> 

                            <!-- "Visible in Google" / profile search visibility fix -->
                        	<div class="box dropshadow isundefined fbissuebtn" fbparam="fbSearch" id="fbSearch" >

                                <div class="text norm">
                                    {fix.fbSearch.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.fbSearch.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.fbSearch.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbSearch.instruction}</div>  
                                </div>

                                <div style="clear:both;"></div>
                            </div>

                            <!-- Facial recognition -->
                            <div class="box dropshadow isundefined fbissuebtn" fbparam="fbFacialRecognition" id="fbFacialRecognition" >

                                <div class="text norm">
                                    {fix.fbFacialRecognition.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.fbFacialRecognition.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.fbFacialRecognition.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbFacialRecognition.instruction}</div>  
                                </div>

                                <div style="clear:both;"></div>
                            </div>

                            <!-- Location history -->
                            <div class="box dropshadow isundefined fbissuebtn" fbparam="fbLocationHistory" id="fbLocationHistory" >

                                <div class="text norm">
                                    {fix.fbLocationHistory.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.fbLocationHistory.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.fbLocationHistory.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbLocationHistory.instruction}</div> 
                                </div>

                                <div style="clear:both;"></div>
                            </div>


                        	<!-- "Tag preview off" / Facebook Tag Review Fix -->
                            <div class="box dropshadow isundefined fbissuebtn" fbparam="fbTagReview" id="fbTagReview" >

                                <div class="text norm">
                                    {fix.fbTagReview.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.fbTagReview.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.fbTagReview.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbTagReview.instruction}</div>  
                                </div>

                                <div style="clear:both;"></div>
                            </div>


                            <!-- Remove old apps -->
                            <!-- fix is obsolete because Facebook is deprecating the associated page
                            <div class="box dropshadow isundefined fbissuebtn facebookEmailBox" id="fbAppCount"  fbparam="fbAppCount">
                                <div class="text norm">
                                    {fix.fbAppCount.issueBad}
                                </div>
                                <div class="text alt">
                                    {fix.fbAppCount.issueGood}
                                </div>
                                <div class="text undef">
                                    {fix.fbAppCount.issueBad}
                                </div>
                              
                                <div class="icon">
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}</p>
                                </div>

                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbAppCount.instruction}</div>  
                                </div>
                                
                                <div style="clear:both;"></div>
                            </div>  
                            -->
							

                            <!-- App Access / Instant Personalization -->
                            <div class="box dropshadow isundefined fbissuebtn" fbparam="fbAppAccess" id="fbAppAccess" >

                                <div class="text norm">
                                    {fix.fbAppAccess.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.fbAppAccess.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.fbAppAccess.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbAppAccess.instruction}</div>  
                                </div>

                                <div style="clear:both;"></div>
                            </div>

							<!-- AVG PrivacyFix Family -->
                            <!--
                            <div class="box dropshadow isundefined fbissuebtn" fbparam="family" id="family" >

                                <div class="text norm">
                                    {fix.family.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.family.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.family.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.family.instruction}</div>  
                                </div>

                                <div style="clear:both;"></div>
                            </div>
                            -->
                            
                            <!-- Likes used for Ads -->
                            <div class="box dropshadow isundefined fbissuebtn" fbparam="fbInAds" id="fbInAds" >

                                <div class="text norm">
                                    {fix.fbInAds.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.fbInAds.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.fbInAds.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbInAds.instruction}</div>  
                                </div>

                                <div style="clear:both;"></div>

                            </div>


                            <!-- Review Active Sessions -->
                            <!--
                            <div class="box dropshadow isundefined fbissuebtn" fbparam="fbActiveSession" id="fbActiveSession" style="display: none;">

                                <div class="text norm">
                                    {fix.fbActiveSession.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.fbActiveSession.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.fbActiveSession.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbActiveSession.instruction}</div>  
                                </div>

                                <div style="clear:both;"></div>
                            </div>     
                            --> 

                        	<!-- Activity Log / Timeline Review -->
                            <!--
                            <div class="box dropshadow isundefined fbissuebtn" fbparam="fbActivityLog" id="fbActivityLog" >

                                <div class="text norm">
                                    {fix.fbActivityLog.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.fbActivityLog.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.fbActivityLog.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbActivityLog.instruction}</div>  
                                </div>

                                <div style="clear:both;"></div>
                            </div>
                            -->


                            <!-- Crowd Control -->
                            <!-- fix is obsolete because Facebook is deprecating the associated permissions
                            <div class="box dropshadow isundefined fbissuebtn" fbparam="fbSharing" id="fbSharing" >

                                <div class="text norm">
                                    {fix.fbSharing.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.fbSharing.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.fbSharing.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    <div class="fixed_by">{dash.fixed_by}<ul></ul></div>
                                    <div class="instruction">{fix.fbSharing.instruction}</div>  
                                </div>

                                <div style="clear:both;"></div>
                            </div> 
 -->                           
                        </div>
                        <div style="clear:both;"></div>
                    </div>

                    <!--
                    <div class="row" id="rowFbFriends">            
                        <div class="rowlabel">
                            
                            <div class="words">
                                {labelrow4}
                            </div>
                            
                        </div>            
                        <div class="rowcontent">  
                            <div>                                                                            
                                {issue_fb_friendExposed}
                                
                            </div>
                        </div>
                        <div style="clear:both;"></div>
                    </div>
                    -->
            
        </div>

        <div style="clear:both;"></div>
    </div>




        
    <div style="clear:both;"></div>
        
</div>
</script>
        <script type="text/template" id="_t_sectLinkedin"><!--
<div class="sectionbar linkedin clear">

    <div style="float:left;">
        {dash.sections.linkedin}
    </div>
    <div id="spin_linkedin" class="sectionspinner">

    </div>

</div>
-->

<div class="login_prompt linkedin">

    <div class="text">
        {dash.li.loggedout_text}
    </div>  
    <div class="loginbtn">
        {dash.btn.login}
    </div>
    
</div>



<div id="wrapsites" class="section linkedin dynamic" section="linkedin">

    

             


    <div class="actionArea">
        <div class="infoarea linkedin">

           <div class="stats_area">
                <h3>{dash.li.keep_in_mind}</h3>
                <ul>
                    <li id="li_hints_linkLurkingSetting" class="lurk">{dash.li.lurk_tip}</li>
                    <li id="li_hints_linkBroadcastSetting" class="broadcast">{dash.li.broadcast_tip}</li>
                    <li id="li_hints_linkConnectionVisibility" class="visibility">{dash.li.visibility_tip}</li>
                </ul>
            </div>
            
        </div>




        <div class="right issuebuttonswrap">            
                    
                    <div class="internal_header linkedin">
                        {dash.sections.linkedin} 
                    </div>

                    <div class="row">            
     
                        <div class="rowcontent">

                            <div class="box dropshadow isundefined linkissuebtn" id="linkLurkingSetting" >

                                <div class="text norm">
                                    {fix.linkLurkingSetting.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.linkLurkingSetting.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.linkLurkingSetting.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.linkLurkingSetting.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>


                            <div class="box dropshadow isundefined linkissuebtn" id="linkPublicProfileReview" >

                                <div class="text norm">
                                    {fix.linkPublicProfileReview.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.linkPublicProfileReview.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.linkPublicProfileReview.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.linkPublicProfileReview.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>  

                            <div class="box dropshadow isundefined linkissuebtn" id="linkBroadcastSetting" >
                                <div class="text norm">
                                    {fix.linkBroadcastSetting.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.linkBroadcastSetting.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.linkBroadcastSetting.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.linkBroadcastSetting.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>                                                                 
                
                            <div class="box dropshadow isundefined linkissuebtn" id="linkReviewApps" >
                                <div class="text norm">
                                    {fix.linkReviewApps.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.linkReviewApps.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.linkReviewApps.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.linkReviewApps.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>

                            <div class="box dropshadow isundefined linkissuebtn"  id="linkConnectionVisibility" >
                                <div class="text norm">
                                    {fix.linkConnectionVisibility.issueBad}
                                </div>

                                <div class="text alt">
                                    {fix.linkConnectionVisibility.issueGood}
                                </div>

                                <div class="text undef">
                                    {fix.linkConnectionVisibility.issueBad}
                                </div>

                                <div class="icon">
                                   
                                </div>

                                <div class="login btn">
                                    <p>{dash.btn.login}</p>
                                </div>

                                <div class="btnfix btn">
                                    <p>{fix.btn.fix}<p>
                                </div>
                                
                                <div class="fixed btn">
                                </div>

                                <div class="allowed btn">
                                </div>

                                <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                    {fix.linkConnectionVisibility.instruction}
                                </div>

                                <div style="clear:both;"></div>
                            </div>
                                                      
                        </div>
                        <div style="clear:both;"></div>
                    </div>

            
        </div>

        <div style="clear:both;"></div>
    </div>




        
    <div style="clear:both;"></div>
        
</div></script>
        <script type="text/template" id="_t_sectGoogle">
<!--
<div class="sectionbar google clear">

        <div style="float:left;">
            {dash.sections.google} 
        </div>

        <div id="spin_google" class='sectionspinner'>
        
        </div>

        

</div>
-->



<div id="wrapsites" class="section google dynamic" section="google">
             
    <div class="actionArea">
        <div class="infoarea google" id="google_history_area">



            <div class="stats_area">
                <h3><em>{dash.gl.your_worth}</em></h3>
                <div class="google_worth">
                    <div class="worth" id="gl_worth_total">$0.00</div>
                    <a class="glworthlink" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fprivacyfix.com%2Fstart" target="_blank"><img src="/images/avgprivacyfix/fb_logo.png"/> {protection.share}</a>
                    <p>{dash.gl.worth_explanation}</p>
                </div>

            </div>
            <hr/>
            <div class="stats_area">
                <h3><em>{dash.gl.track_percentage_header}</em></h3>
                <div class="tracks_on">
                    <strong id="gl_tracks_on_percent">0%</strong> {dash.gl.track_percentage_count}
                </div>
                <div class="not_enough_data"><div>{dash.gl.not_enough_data}</div></div>
            </div>
            
        </div>





        <div class="issuebuttonswrap">

                <div class="internal_header google">
                    {dash.sections.google} 
                </div>


                <div class="row">            
                    
                    <div class="rowcontent">

                       <div class="box dropshadow isundefined googleissuebtn" googleparam="gSearchHistory"  id="gSearchHistory" >

                            <div class="text norm">
                                {fix.gSearchHistory.issueBad}
                            </div>

                            <div class="text alt">
                                {fix.gSearchHistory.issueGood}
                            </div>

                            <div class="text undef">
                                {fix.gSearchHistory.issueLogout}
                            </div>
                            
                            <div class="icon">

                            </div>

                            <div class="login btn">
                                <p>{dash.btn.login}</p>
                            </div>

                            <div class="btnfix btn">
                                <p>{fix.btn.fix}<p>
                            </div>
                            
                            <div class="fixed btn">
                            </div>

                            <div class="allowed btn">
                            </div>

                            <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                {fix.gSearchHistory.instruction}
                            </div>
                            

                            <div style="clear:both;"></div>
                        </div>

                       <div class="box dropshadow isundefined googleissuebtn" googleparam="youTubeHistory"  id="youTubeHistory" >

                            <div class="text norm">
                                {fix.youTubeHistory.issueBad}
                            </div>

                            <div class="text alt">
                                {fix.youTubeHistory.issueGood}
                            </div>

                            <div class="text undef">
                                {fix.youTubeHistory.issueLogout}
                            </div>
                            
                            <div class="icon">

                            </div>

                            <div class="login btn">
                                <p>{dash.btn.login}</p>
                            </div>

                            <div class="btnfix btn">
                                <p>{fix.btn.fix}<p>
                            </div>
                            
                            <div class="fixed btn">
                            </div>

                            <div class="allowed btn">
                            </div>

                            <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                {fix.youTubeHistory.instruction}
                            </div>

                            

                            <div style="clear:both;"></div>
                        </div>
                 
                        <div class="box dropshadow isundefined googleissuebtn" googleparam="gSharedEndorsements"  id="gSharedEndorsements" >
                            <div class="text norm">
                                {fix.gSharedEndorsements.issueBad}
                            </div>

                            <div class="text alt">
                                {fix.gSharedEndorsements.issueGood}
                            </div>

                            <div class="text undef">
                                {fix.gSharedEndorsements.issueLogout}
                            </div>
                            
                            <div class="icon">

                            </div>

                            <div class="login btn">
                                <p>{dash.btn.login}</p>
                            </div>

                            <div class="btnfix btn">
                                <p>{fix.btn.fix}<p>
                            </div>
                            
                            <div class="fixed btn">
                            </div>

                            <div class="allowed btn">
                            </div>

                            <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                {fix.gSharedEndorsements.instruction}
                            </div>

                            

                            <div style="clear:both;"></div>
                        </div>

                    </div>
                    <div style="clear:both;"></div>
                </div>

               
            <div style="clear:both;"></div>
        </div>
     

        <div style="clear:both;"></div>
    </div> 
    
 
    <div style="clear:both;"></div>
               
</div></script>
        <script type="text/template" id="_t_sectPublisher"><!--
<div class="sectionbar publisher clear">

    <div style="float:left;">
        {dash.sites.header} 
    </div>

    <div id="spin_publisher" class='sectionspinner'>
    
    </div>

</div>
-->




<div id="wrapsites" class="section publisher dynamic">
    
    
        <style>

        
        </style>



        
        



        <div class="actionArea">
            <div class="infoarea publisher" id="publisher_sidebar">

                <div class="stats_area">
                    <h3>{dash.sites.info_title}</h3>
                    <img src="/images/avgprivacyfix/websites_sidebar.png"/>
                    <h4>{dash.sites.info_blurb}</h4>

                </div>

               
            </div>            
        




            <div class="issuebuttonswrap">

                <div class="internal_header twitter">
                    {dash.sites.header} 
                </div>


                <div class="row">
            
            
                    <div class="rowcontent">

                        



                        <div class="box only_child is{pubstomail}" id="publishermailbox" >
                    
                            <div class="text norm"> <!-- There are items in the list, but the popup feature hasn't been used -->
                                {dash.sites.sharing_text}
                            </div>

                            <div class="text alt"> <!-- Theres nothing in list and no popup available -->  <!-- Visted sites sharing data were reviewed -->
                                {dash.sites.sharing_text_alt}
                            </div>

                            <div class="text norm allowed">
                                {dash.sites.sharing_text_allowed}
                            </div>

                            <div class="icon">

                            </div>

                            <div class="btnfix btn">
                                <p>{dash.sites.sharing_fix}</p>
                            </div>

                            <div class="fixed btn">
                                <p>{dash.sites.sharing_fixed}</p>
                            </div>

                            <div class="allowed btn">
                            </div>

                            <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                        
                                {dash.sites.sharing_hoverbubble}

                            </div>

                            <div style="clear:both;"></div>

                        </div>

                        <div class="iconbox idicons clear">     
                            <div class="icons issues_identity_list clear">
                                
                            </div>                                           
                        </div>


                    </div>


                    <div class="publisherEmailBubbleTwo" id="publisher_mail_modal" style="display: none;"> 
                        
                        <div class="email_bubble">
     
                        
                            <h1>
                                {dash.sites.sharing_bubble_title}
                            </h1>
                            <p>
                                {dash.sites.sharing_bubble_blurb}
                            </p>
                            <div class="check_all" style="visibility:hidden;"><input type="checkbox" id="email_check_all" class="checky" /><label for="email_check_all">CHECK ALL</label></div>
                            <ul class="clear">                          
                                {dash.sites.pub_email_list}
                                                                      
                            </ul>
                                
                            <p class="buttonblurb">
                                {dash.sites.sharing_bubble_help}
                            </p>                     

                            <div class="clear">               
                                <div class="removalrequest" >
                                    {dash.sites.sharing_bubble_request}
                                </div>

                                <div class="btnAllow">
                                    {dash.sites.sharing_bubble_allow}
                                </div>
                            </div>
                        </div>
                    </div>

                    


                    

                    <div style="clear:both;"></div>
                </div>


        </div>
        

    <div style="clear:both;"></div>

</div></script>
        <script type="text/template" id="_t_sectTracking"><!--
<div class="sectionbar tracking clear">

    <div style="float:left;">
        {dash.track.header} 
    </div>



    <div id="spin_tracking" class='sectionspinner'>

    </div>


</div>
-->




<a name="tracking"></a>
<div id="wrapsites" class="section tracking dynamic">
    
    
        <div class="confirmbox widgets" style="display: none;" id="widget_blocking_modal">
            <div class="widget_box">
                {dash.track.widget_block_prompt}
                <div class="action_buttons clear">               
                    <div class="actuallyBlock" >
                        {dash.track.widget_block_prompt_block}
                    </div>

                    <div class="btnAllow">
                        {dash.track.widget_block_prompt_allow}
                    </div>
                </div>
            </div>
        </div>


        <div class="actionArea">
            <div class="infoarea" id="tracking_sidebar">
                <div class="stats_area">
                    <h3 id="who_header">{dash.track.who_header}</h3>
                    <h3 id="protected_header" style="display: none;">{dash.track.protected_header}</h3>
                    <div id="trackers_list">
						<p class="content list_blurb">
							{dash.track.cookies_count}
						</p>
                        <div class="iconbox clear" id="trackerListRow">
                            <div class="icons all_list tracking_list clear">
                                
                            </div>
                        </div>
                    </div>
                    <div id="block_status" style="display: none;">
                        <p class="content">{dash.track.background}</p>
                        <img src="/images/avgprivacyfix/protected.png" class="protected"/>
                        <h4 class="block_count">{dash.track.block_count}</h4>
                    </div>
                    <div id="tracker_stats" style="display: none;">
                        <ul class="tri_pane">
                            <li>{dash.track.online_behavior}</li>
                            <li>{dash.track.no_policy}</li>
                            <li>{dash.track.retain_forever}</li>
                        </ul>
                        <h4>{dash.track.turn_off}</h4>
                    </div>
                </div>

               
            </div>            
        


            <div class="issuebuttonswrap">

                <div class="internal_header tracking">
                    {dash.track.header} 
                </div>

                <div class="row">
                    
                    <div class="rowcontent">

                        <!--
                        <div class="box only_child is{hascookies} delallcookies" id="deleteCookies"  googleparam="deleteCookies">

                            <div class="text alt"> 
                                {dash.track.cookies_text}
                            </div>

                            <div class="text norm"> 
                                {dash.track.cookies_text_alt}
                            </div>

                            <div class="icon">
                            </div>

                            <div class="btnfix btn">
                                <p>{dash.track.cookies_text_fix}</p>
                            </div>

                            <div class="fixed btn">
                                <p>{dash.track.cookies_text_fixed}</p>
                            </div>

                            <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                <p>{dash.track.cookies_text_bubble}</p>
                            </div>

                            <div style="clear:both;"></div>
                        </div>

                        <div class="iconbox clear" id="trackerListRow">
                            <div class="icons all_list tracking_list clear">
                                
                            </div>
                        </div>

                        -->

                        <div class="box isundefined" id="healthBar">

                            <div class="text alt"> 
                                {dash.sites.healthbar_text}
                            </div>

                            <div class="text norm"> 
                                {dash.sites.healthbar_text_alt}
                            </div>

                            <div class="icon">
                            </div>

                            <div class="btnfix btn">
                                <p>{dash.sites.healthbar_text_fix}</p>
                            </div>

                            <div class="undo btn">
                                <p>{dash.sites.healthbar_text_fixed}</p>
                            </div>

                            <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                <p>{dash.sites.healthbar_text_bubble}</p>
                            </div>

                            <div style="clear:both;"></div>
                        </div>


                                        
                        <a name="tracker_blocking"></a>
                        <div class="box isfalse" id="setBlockTracking" googleparam="setBlockTracking">

                            <div class="text alt">
                                {dash.track.tracking_text_alt}
                            </div>

                            <div class="text norm">
                                {dash.track.tracking_text}
                            </div>

                            <div class="icon">
                            </div>

                            <div class="btnfix btn">
                                <p>{dash.track.tracking_text_fix}</p>
                            </div>

                            <div class="undo btn">
                                <p>{dash.track.tracking_text_undo}</p>
                            </div>

                            <div class="allowed btn">
                                <p></p>
                            </div>

                            <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                {dash.track.tracking_bubble}
                            </div>

                            <div style="clear:both;"></div>
                        </div>

                        <div class="block_tracking_bubble" id="block_tracking_needs_admin" style="display: none;"> 
                        
                            <div class="tracking_bubble">
                                <h1>Administrator mode required!</h1>
                                <p>
                                    You must run Internet Explorer as Administrator to turn Tracker Blocking on or off.
                                </p>
                                <div class="action_buttons clear">               
                                    <div class="drat" >
                                        Run as Administrator
                                    </div>

                                    <div class="btnAllow">
                                        Nevermind
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="block_tracking_bubble" id="block_tracking_bubble" style="display: none;"> 
                        
                            <div class="tracking_bubble">
                                <h1>{dash.track.block_ad_tracking}</h1>
                                <p>
                                    {dash.track.block_explanation}
                                </p>
                                <div class="action_buttons clear">               
                                    <div class="actually_block" >
                                        {dash.track.block_ok}
                                    </div>

                                    <div class="btnAllow">
                                        {dash.track.block_cancel}
                                    </div>
                                </div>
                            </div>
                        </div>

                        <a name="widget_blocking"></a>
                        <div class="box dropshadow isundefined" fbparam="setWidgetBlocking" id="setWidgetBlocking"  >

                            <div class="text norm">
                                {dash.track.widgets_not_blocked}
                            </div>

                            <div class="text alt">
                                {dash.track.widgets_blocked}
                            </div>

                            <div class="text norm allowed">
                                {dash.track.widgets_allowed}
                            </div>

                            <div class="icon">
                               
                            </div>

                            <div class="btnfix btn">
                                <p>{fix.btn.fix}<p>
                            </div>
                            
                            <div class="undo btn">
                                <p>{dash.track.tracking_text_undo}</p>
                            </div>

                            <div class="allowed btn">
                                <p></p>
                            </div>

                            <div class="bubble bubbleQuick issueBtnBubble" direction="down">
                                {dash.track.widget_block_instruction}
                            </div>

                            <div style="clear:both;"></div>
                        </div>


                       
                    </div>

                    <div style="clear:both;"></div>
                </div>

            </div>

        </div>

        <div style="clear:both;"></div>
</div>
</script>
        <script type="text/template" id="_t_issues_identity_list"><div class="logo id{id}">


    <!--<a href='{linkUrl}' target="_blank">--><img src="https://s3.amazonaws.com/images.privacyfix.com/bubble/publisher_ico/{id}.gif" width="16" height="16" /><!--</a>-->

    <div class="bubble appbubble bubbleQuick" direction="right">  
        <h4>
            {name}
        </h4>     
        <ul>        
            {policy_info}
        </li>    
        <div style="clear:both;"></div>   
    </div>


</div></script>
        <script type="text/template" id="_t_policy_info"><li class="is{flag}">
    {text}
</li></script>
        <script type="text/template" id="_t_pub_email_list"><li><input class="publisherEmail" type="checkbox" value="{privacy_email}" id="pub_email_address_{list_id}" /><label for="pub_email_address_{list_id}">{privacy_email}</label></li></script>
        <script type="text/template" id="_t_issues_other_list"><div class="logo id{id} bubblecontainer">

    <!--<a href='{linkUrl}' target="_blank">--><img src="https://s3.amazonaws.com/images.privacyfix.com/bubble/publisher_ico/{id}.gif" width="16" height="16" /><!--</a>-->

    <div class="bubble appbubble bubbleQuick" direction="right">  
        <h4>
            {name}
        </h4>     
        <ul>        
            {policy_info}
        </li>    
        <div style="clear:both;"></div>   
    </div>

</div></script>
        <script type="text/template" id="_t_all_list"><div class="logo id{id}">

    <!--<a href='{linkUrl}' target="_blank">-->
        <img src="https://s3.amazonaws.com/images.privacyfix.com/bubble/ico/{id}.gif" width="16" height="16" />
    <!--</a>-->

    <div class="bubble appbubble bubbleQuick orange" direction="left" >  
        <h4>
            {name}
        </h4>      
       
        <ul class="typelist tracker">
            {tracker_types}
        </ul>       

        <div class="rating" style="display: none;">
            Rating: <strong>{ps}</strong>/50
        </div>

    </div>

</div></script>
        <script type="text/template" id="_t_tracker_types"><li>
    {type_text}
</li></script>

        <!-- Footer Code PRODUCTION -->
        <script type="text/javascript">_satellite.pageBottom();</script>

        <!-- Google Analytics -->
        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-36825151-26']);
        _gaq.push(['_trackPageview']);
        (function() { var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); })();
        </script>

    </body>
</html>
